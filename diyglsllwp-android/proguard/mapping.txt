android.support.v4.app.BackStackRecord -> android.support.v4.app.a:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    void run() -> run
    void popFromBackStack$1385ff() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.c:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState$79e5e33f() -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged$1385ff() -> e
    void onActivityResult$6eb84b52() -> f
    android.view.LayoutInflater getLayoutInflater$2ee30c11() -> g
    void onInflate$423a76cd() -> h
    void onAttach$63a22f9() -> i
    android.view.animation.Animation onCreateAnimation$24236ca7() -> j
    void onViewCreated$65f1d89() -> k
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLowMemory() -> onLowMemory
    void initState() -> l
    void onDetach() -> m
    void onDestroyOptionsMenu() -> n
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performCreate(android.os.Bundle) -> a
    android.view.View performCreateView$469ccb8a() -> o
    void performActivityCreated$79e5e33f() -> p
    void performStart() -> q
    void performResume() -> r
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> s
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> b
    void performPause() -> t
    void performStop() -> u
    void performReallyStop() -> v
    void performDestroyView() -> w
    void performDestroy() -> x
android.support.v4.app.Fragment$1 -> android.support.v4.app.d:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager$2cd5ab55(java.lang.String) -> b
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.g:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.m:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState$2563266(int) -> d
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> r
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction$574583f(java.lang.Runnable) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> d
    void reportBackStackChanged() -> t
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    java.util.ArrayList retainNonConfig() -> e
    void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    android.os.Parcelable saveAllState() -> f
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> g
    void dispatchCreate() -> h
    void dispatchActivityCreated() -> i
    void dispatchStart() -> j
    void dispatchResume() -> k
    void dispatchPause() -> l
    void dispatchStop() -> m
    void dispatchReallyStop() -> n
    void dispatchDestroyView() -> o
    void dispatchDestroy() -> p
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> q
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.o:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.p:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.q:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.r:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.s:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.t:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.u:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.v:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.w:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.x:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void stop() -> a
    void destroy() -> b
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.y:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.z:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void reset() -> c
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> c
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.q:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.r:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.s:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.v:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void destroyItem$30510aeb() -> b
    boolean isViewFromObject$171eb1dd() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.w:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.x:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> a
    int getTextSpacing() -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText$7a69ae8(int) -> b
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.y:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.z:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.aa:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.ab:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.ac:
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ad:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ae:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.af:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.ai:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.aj:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ak:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.al:
    long getFrameTime() -> a
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.am:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.an:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ao:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.aq:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ar:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.as:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.at:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    int mPageMargin -> m
    android.graphics.drawable.Drawable mMarginDrawable -> n
    int mTopPageBounds -> o
    int mBottomPageBounds -> p
    float mFirstOffset -> q
    float mLastOffset -> r
    int mChildWidthMeasureSpec -> s
    int mChildHeightMeasureSpec -> t
    boolean mInLayout -> u
    boolean mScrollingCacheEnabled -> v
    boolean mPopulatePending -> w
    int mOffscreenPageLimit -> x
    boolean mIsBeingDragged -> y
    boolean mIsUnableToDrag -> z
    int mDefaultGutterSize -> A
    int mGutterSize -> B
    int mTouchSlop -> C
    float mLastMotionX -> D
    float mLastMotionY -> E
    float mInitialMotionX -> F
    float mInitialMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    boolean mFakeDragging -> N
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> O
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> P
    boolean mFirstLayout -> Q
    boolean mNeedCalculatePageOffsets -> R
    boolean mCalledSuper -> S
    int mDecorChildCount -> T
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> V
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> W
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> Z
    int mDrawingOrder -> aa
    java.util.ArrayList mDrawingOrderedChildren -> ab
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ac
    java.lang.Runnable mEndScrollRunnable -> ad
    int mScrollState -> ae
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> b
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    void setCurrentItem(int) -> a
    void setCurrentItem$2563266(int) -> c
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem$3af7e890(int) -> d
    void populate() -> c
    void populate(int) -> e
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild$31e08638() -> e
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> g
    void onPageScrolled$486775f1(int,float) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> f
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> g
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> h
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> h
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000$b020504(android.support.v4.view.ViewPager) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> b
    int access$300(android.support.v4.view.ViewPager) -> c
    int[] access$400() -> d
android.support.v4.view.ViewPager$1 -> android.support.v4.view.au:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.av:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ax:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ay:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.az:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ba:
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bb:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bc:
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bd:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.be:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    void addAction(int) -> a
    void setScrollable(boolean) -> a
    void setClassName(java.lang.CharSequence) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.f:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo$f3a5639() -> b
    boolean performAction$5985f823() -> c
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> d
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.g:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.h:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.i:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.j:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.k:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.l:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.m:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.badlogic.gdx.Application -> com.badlogic.gdx.a:
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void debug(java.lang.String,java.lang.String) -> debug
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    void postRunnable(java.lang.Runnable) -> postRunnable
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.b:
    com.badlogic.gdx.Application$ApplicationType Android -> a
    com.badlogic.gdx.Application$ApplicationType Desktop -> b
    com.badlogic.gdx.Application$ApplicationType Applet -> c
    com.badlogic.gdx.Application$ApplicationType WebGL -> d
    com.badlogic.gdx.Application$ApplicationType iOS -> e
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> f
    com.badlogic.gdx.Application$ApplicationType[] values() -> values
    com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.c:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Audio -> com.badlogic.gdx.d:
com.badlogic.gdx.Files -> com.badlogic.gdx.e:
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.f:
    com.badlogic.gdx.Files$FileType Classpath -> a
    com.badlogic.gdx.Files$FileType Internal -> b
    com.badlogic.gdx.Files$FileType External -> c
    com.badlogic.gdx.Files$FileType Absolute -> d
    com.badlogic.gdx.Files$FileType Local -> e
    com.badlogic.gdx.Files$FileType[] $VALUES -> f
    com.badlogic.gdx.Files$FileType[] values() -> values
    com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Gdx -> com.badlogic.gdx.g:
    com.badlogic.gdx.Application app -> a
    com.badlogic.gdx.Graphics graphics -> b
    com.badlogic.gdx.Audio audio -> c
    com.badlogic.gdx.Input input -> d
    com.badlogic.gdx.Files files -> e
    com.badlogic.gdx.Net net -> f
    com.badlogic.gdx.graphics.GLCommon gl -> g
    com.badlogic.gdx.graphics.GL10 gl10 -> h
    com.badlogic.gdx.graphics.GL11 gl11 -> i
    com.badlogic.gdx.graphics.GL20 gl20 -> j
com.badlogic.gdx.Graphics -> com.badlogic.gdx.h:
    boolean isGL20Available() -> isGL20Available
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    int getFramesPerSecond() -> getFramesPerSecond
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void requestRendering() -> requestRendering
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.i:
    int r -> a
    int g -> b
    int b -> c
    int a -> d
    int depth -> e
    int stencil -> f
    int samples -> g
    boolean coverageSampling -> h
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.j:
    int width -> width
    int height -> height
    int refreshRate -> refreshRate
    int bitsPerPixel -> bitsPerPixel
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$GraphicsType -> com.badlogic.gdx.k:
    com.badlogic.gdx.Graphics$GraphicsType AndroidGL -> a
    com.badlogic.gdx.Graphics$GraphicsType LWJGL -> b
    com.badlogic.gdx.Graphics$GraphicsType Angle -> c
    com.badlogic.gdx.Graphics$GraphicsType WebGL -> d
    com.badlogic.gdx.Graphics$GraphicsType iOSGL -> e
    com.badlogic.gdx.Graphics$GraphicsType JGLFW -> f
    com.badlogic.gdx.Graphics$GraphicsType[] $VALUES -> g
    com.badlogic.gdx.Graphics$GraphicsType[] values() -> values
    com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input -> com.badlogic.gdx.l:
    boolean isTouched(int) -> isTouched
    long getCurrentEventTime() -> getCurrentEventTime
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.m:
    com.badlogic.gdx.Input$Orientation Landscape -> a
    com.badlogic.gdx.Input$Orientation Portrait -> b
    com.badlogic.gdx.Input$Orientation[] $VALUES -> c
    com.badlogic.gdx.Input$Orientation[] values() -> values
    com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$Peripheral -> com.badlogic.gdx.n:
    com.badlogic.gdx.Input$Peripheral HardwareKeyboard -> a
    com.badlogic.gdx.Input$Peripheral OnscreenKeyboard -> b
    com.badlogic.gdx.Input$Peripheral MultitouchScreen -> c
    com.badlogic.gdx.Input$Peripheral Accelerometer -> d
    com.badlogic.gdx.Input$Peripheral Compass -> e
    com.badlogic.gdx.Input$Peripheral Vibrator -> f
    com.badlogic.gdx.Input$Peripheral[] $VALUES -> g
    com.badlogic.gdx.Input$Peripheral[] values() -> values
    com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.o:
com.badlogic.gdx.InputAdapter -> com.badlogic.gdx.p:
    boolean touchDown$3b4dfe47(int,int,int) -> a
    boolean touchUp$3b4dfe47(int,int,int) -> b
    boolean touchDragged(int,int,int) -> c
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.q:
    boolean touchDown$3b4dfe47(int,int,int) -> a
    boolean touchUp$3b4dfe47(int,int,int) -> b
    boolean touchDragged(int,int,int) -> c
com.badlogic.gdx.LifecycleListener -> com.badlogic.gdx.r:
com.badlogic.gdx.Net -> com.badlogic.gdx.s:
com.badlogic.gdx.Net$HttpRequest -> com.badlogic.gdx.t:
    java.lang.String httpMethod -> a
    java.lang.String url -> b
    java.util.Map headers -> c
    int timeOut -> d
    java.lang.String content -> e
    java.io.InputStream contentStream -> f
    int getTimeOut() -> a
    java.lang.String getMethod() -> b
    java.lang.String getUrl() -> c
    java.lang.String getContent() -> d
    java.io.InputStream getContentStream() -> e
    java.util.Map getHeaders() -> f
com.badlogic.gdx.Net$HttpResponseListener -> com.badlogic.gdx.u:
com.badlogic.gdx.Net$Protocol -> com.badlogic.gdx.v:
    com.badlogic.gdx.Net$Protocol TCP -> a
    com.badlogic.gdx.Net$Protocol[] $VALUES -> b
    com.badlogic.gdx.Net$Protocol[] values() -> values
    com.badlogic.gdx.Net$Protocol valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Preferences -> com.badlogic.gdx.w:
com.badlogic.gdx.android.AndroidWallpaperListener -> com.badlogic.gdx.a.a:
    void offsetChange(float,float,float,float,int,int) -> offsetChange
    void previewStateChange(boolean) -> previewStateChange
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.b.a:
    java.lang.String fileName -> a
    java.lang.Class type -> b
    com.badlogic.gdx.assets.AssetLoaderParameters params -> c
    java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.b.b:
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.b.c:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> a
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.b.d:
    void finishedLoading$190c2c84(com.badlogic.gdx.assets.AssetManager,java.lang.String) -> a
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.b.e:
    com.badlogic.gdx.assets.AssetManager manager -> a
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> b
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> c
    java.util.concurrent.ExecutorService threadPool -> d
    long startTime -> e
    boolean asyncDone -> f
    boolean dependenciesLoaded -> g
    com.badlogic.gdx.utils.Array dependencies -> h
    java.util.concurrent.Future depsFuture -> i
    java.util.concurrent.Future loadFuture -> j
    java.lang.Object asset -> k
    int ticks -> l
    boolean cancel -> m
    boolean update() -> a
    java.lang.Object getAsset() -> b
    java.lang.Object call() -> call
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.b.f:
    com.badlogic.gdx.utils.ObjectMap assets -> a
    com.badlogic.gdx.utils.ObjectMap assetTypes -> b
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> c
    com.badlogic.gdx.utils.ObjectMap loaders -> d
    com.badlogic.gdx.utils.Array loadQueue -> e
    java.util.concurrent.ExecutorService threadPool -> f
    java.util.Stack tasks -> g
    com.badlogic.gdx.assets.AssetErrorListener listener -> h
    int loaded -> i
    int toLoad -> j
    com.badlogic.gdx.utils.Logger log -> k
    void unload(java.lang.String) -> a
    java.lang.String getAssetFileName(java.lang.Object) -> a
    boolean isLoaded(java.lang.String) -> c
    com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class,java.lang.String) -> a
    void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    boolean update() -> b
    void finishLoading() -> a
    void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> a
    void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> a
    void incrementRefCountedDependencies(java.lang.String) -> d
    void handleTaskError(java.lang.Throwable) -> a
    void dispose() -> dispose
    void clear() -> c
    int getReferenceCount(java.lang.String) -> b
    void setReferenceCount(java.lang.String,int) -> a
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.b.g:
    java.lang.Object object -> a
    int refCount -> b
    void incRefCount() -> a
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.b.a.a:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> a
    com.badlogic.gdx.files.FileHandle resolve$4d33a3a8() -> a
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.b.a.b:
    void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    java.lang.Object loadSync$6d88328f(com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.b.a.c:
    com.badlogic.gdx.files.FileHandle resolve$4d33a3a8() -> a
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.b.a.d:
    java.lang.Object load$6d88328f() -> b
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.b.a.e:
    com.badlogic.gdx.graphics.TextureData data -> a
    com.badlogic.gdx.graphics.Texture texture -> b
    java.lang.Object loadSync$6d88328f(com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.b.a.f:
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean genMipMaps -> c
    com.badlogic.gdx.graphics.Texture texture -> d
    com.badlogic.gdx.graphics.TextureData textureData -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> h
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> i
com.badlogic.gdx.audio.AudioDevice -> com.badlogic.gdx.c.a:
com.badlogic.gdx.audio.AudioRecorder -> com.badlogic.gdx.c.b:
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.c.c:
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.c.d:
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidApplication$1 -> com.badlogic.gdx.backends.android.AndroidApplication$1:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.AndroidApplicationConfiguration:
    boolean useGL20 -> useGL20
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int numSamples -> numSamples
    boolean useAccelerometer -> useAccelerometer
    boolean useCompass -> useCompass
    int touchSleepTime -> touchSleepTime
    boolean useWakelock -> useWakelock
    boolean hideStatusBar -> hideStatusBar
    int maxSimultaneousSounds -> maxSimultaneousSounds
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    boolean getTouchEventsForLiveWallpaper -> getTouchEventsForLiveWallpaper
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.AndroidAudio:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    java.util.List musics -> musics
    void pause() -> pause
    void resume() -> resume
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidAudioDevice -> com.badlogic.gdx.backends.android.AndroidAudioDevice:
    android.media.AudioTrack track -> track
    short[] buffer -> buffer
    boolean isMono -> isMono
    int latency -> latency
    void dispose() -> dispose
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void setVolume(float) -> setVolume
com.badlogic.gdx.backends.android.AndroidAudioRecorder -> com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    android.media.AudioRecord recorder -> recorder
    void dispose() -> dispose
    void read(short[],int,int) -> read
com.badlogic.gdx.backends.android.AndroidClipboard -> com.badlogic.gdx.backends.android.AndroidClipboard:
    android.content.Context context -> context
    java.lang.String contents -> contents
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.backends.android.AndroidDaydream -> com.badlogic.gdx.backends.android.AndroidDaydream:
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void onDreamingStopped() -> onDreamingStopped
    void onDreamingStarted() -> onDreamingStarted
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidDaydream$1 -> com.badlogic.gdx.backends.android.AndroidDaydream$1:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.AndroidFileHandle:
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    boolean exists() -> exists
    long length() -> length
    long lastModified() -> lastModified
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.AndroidFiles:
    java.lang.String sdcard -> sdcard
    java.lang.String localpath -> localpath
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.backends.android.AndroidGL10 -> com.badlogic.gdx.backends.android.AndroidGL10:
    javax.microedition.khronos.opengles.GL10 gl -> gl
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLineWidth(float) -> glLineWidth
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScalef(float,float,float) -> glScalef
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glFogfv(int,float[],int) -> glFogfv
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glPolygonMode(int,int) -> glPolygonMode
com.badlogic.gdx.backends.android.AndroidGL11 -> com.badlogic.gdx.backends.android.AndroidGL11:
    javax.microedition.khronos.opengles.GL11 gl -> gl
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glActiveTexture(int) -> glActiveTexture
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFunc(int,int) -> glBlendFunc
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glCullFace(int) -> glCullFace
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDetachShader(int,int) -> glDetachShader
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glFrontFace(int) -> glFrontFace
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    int glGetError() -> glGetError
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    java.lang.String glGetString(int) -> glGetString
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    void glHint(int,int) -> glHint
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLineWidth(float) -> glLineWidth
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScissor(int,int,int,int) -> glScissor
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMask(int) -> glStencilMask
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOp(int,int,int) -> glStencilOp
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.AndroidGraphics:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    void setPreserveContext(android.view.View) -> setPreserveContext
    android.view.View createGLSurfaceView(android.app.Activity,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    android.view.View getView() -> getView
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphics$1 -> com.badlogic.gdx.backends.android.AndroidGraphics$1:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
com.badlogic.gdx.backends.android.AndroidGraphics$1$1 -> com.badlogic.gdx.backends.android.AndroidGraphics$1$1:
    com.badlogic.gdx.backends.android.AndroidGraphics$1 this$1 -> this$1
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidDaydream app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    void setPreserveContext(android.view.View) -> setPreserveContext
    android.view.View createGLSurfaceView(android.service.dreams.DreamService,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    android.view.View getView() -> getView
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0 -> this$0
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    android.opengl.GLU glu -> glu
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    boolean configLogged -> configLogged
    int[] value -> value
    java.lang.Object synch -> synch
    void setPreserveContext(java.lang.Object) -> setPreserveContext
    android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    android.view.View createGLSurfaceView(android.content.Context,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    android.view.View getView() -> getView
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    void onMeasure(int,int) -> onMeasure
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$3 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$3:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    android.view.SurfaceHolder getHolder() -> getHolder
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> usedKeyEvents
    com.badlogic.gdx.utils.Pool usedTouchEvents -> usedTouchEvents
    java.util.ArrayList keyListeners -> keyListeners
    java.util.ArrayList keyEvents -> keyEvents
    java.util.ArrayList touchEvents -> touchEvents
    int[] touchX -> touchX
    int[] touchY -> touchY
    int[] deltaX -> deltaX
    int[] deltaY -> deltaY
    boolean[] touched -> touched
    int[] realId -> realId
    boolean hasMultitouch -> hasMultitouch
    com.badlogic.gdx.utils.IntMap keys -> keys
    android.hardware.SensorManager manager -> manager
    boolean accelerometerAvailable -> accelerometerAvailable
    float[] accelerometerValues -> accelerometerValues
    java.lang.String text -> text
    com.badlogic.gdx.Input$TextInputListener textListener -> textListener
    android.os.Handler handle -> handle
    com.badlogic.gdx.Application app -> app
    android.content.Context context -> context
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> touchHandler
    int sleepTime -> sleepTime
    boolean catchBack -> catchBack
    boolean catchMenu -> catchMenu
    android.os.Vibrator vibrator -> vibrator
    boolean compassAvailable -> compassAvailable
    boolean keyboardAvailable -> keyboardAvailable
    float[] magneticFieldValues -> magneticFieldValues
    float azimuth -> azimuth
    float pitch -> pitch
    float roll -> roll
    float inclination -> inclination
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    long currentEventTimeStamp -> currentEventTimeStamp
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> onscreenKeyboard
    android.hardware.SensorEventListener accelerometerListener -> accelerometerListener
    android.hardware.SensorEventListener compassListener -> compassListener
    boolean requestFocus -> requestFocus
    float[] R -> R
    float[] orientation -> orientation
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    int getX() -> getX
    int getY() -> getY
    int getX(int) -> getX
    int getY(int) -> getY
    boolean isTouched(int) -> isTouched
    boolean isKeyPressed(int) -> isKeyPressed
    boolean isTouched() -> isTouched
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    void processEvents() -> processEvents
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onTap(int,int) -> onTap
    void onDrop(int,int) -> onDrop
    void postTap(int,int) -> postTap
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    boolean justTouched() -> justTouched
    boolean isButtonPressed(int) -> isButtonPressed
    void updateOrientation() -> updateOrientation
    void getRotationMatrix(float[]) -> getRotationMatrix
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void registerSensorListeners() -> registerSensorListeners
    void unregisterSensorListeners() -> unregisterSensorListeners
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getFreePointerIndex() -> getFreePointerIndex
    int lookUpPointerIndex(int) -> lookUpPointerIndex
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    long getCurrentEventTime() -> getCurrentEventTime
    void addKeyListener(android.view.View$OnKeyListener) -> addKeyListener
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$3 -> com.badlogic.gdx.backends.android.AndroidInput$3:
    java.lang.String val$title -> val$title
    java.lang.String val$text -> val$text
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$2 -> com.badlogic.gdx.backends.android.AndroidInput$3$2:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$3 -> com.badlogic.gdx.backends.android.AndroidInput$3$3:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$3$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4 -> com.badlogic.gdx.backends.android.AndroidInput$4:
    java.lang.String val$title -> val$title
    java.lang.String val$placeholder -> val$placeholder
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$4$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$2 -> com.badlogic.gdx.backends.android.AndroidInput$4$2:
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$4$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$5 -> com.badlogic.gdx.backends.android.AndroidInput$5:
    boolean val$visible -> val$visible
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> accelerometerValues
    float[] magneticFieldValues -> magneticFieldValues
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
com.badlogic.gdx.backends.android.AndroidInputFactory -> com.badlogic.gdx.backends.android.AndroidInputFactory:
    com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> newAndroidInput
com.badlogic.gdx.backends.android.AndroidInputThreePlus -> com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners -> genericMotionListeners
    boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    void addGenericMotionListener(android.view.View$OnGenericMotionListener) -> addGenericMotionListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidLiveWallpaper:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService service -> service
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    android.view.WindowManager getWindowManager() -> getWindowManager
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService getService() -> getService
    com.badlogic.gdx.ApplicationListener getListener() -> getListener
    void postRunnable(java.lang.Runnable) -> postRunnable
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    android.view.SurfaceHolder$Callback view -> view
    int viewFormat -> viewFormat
    int viewWidth -> viewWidth
    int viewHeight -> viewHeight
    int engines -> engines
    int visibleEngines -> visibleEngines
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine linkedEngine -> linkedEngine
    boolean isPreviewNotified -> isPreviewNotified
    boolean notifiedPreviewState -> notifiedPreviewState
    int[] sync -> sync
    void setLinkedEngine(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine) -> setLinkedEngine
    void onCreate() -> onCreate
    android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    void onCreateApplication() -> onCreateApplication
    void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    void onDeepPauseApplication() -> onDeepPauseApplication
    void onDestroy() -> onDestroy
    void finalize() -> finalize
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper getLiveWallpaper() -> getLiveWallpaper
    android.view.WindowManager getWindowManager() -> getWindowManager
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine:
    boolean engineIsVisible -> engineIsVisible
    int engineFormat -> engineFormat
    int engineWidth -> engineWidth
    int engineHeight -> engineHeight
    boolean offsetsConsumed -> offsetsConsumed
    float xOffset -> xOffset
    float yOffset -> yOffset
    float xOffsetStep -> xOffsetStep
    float yOffsetStep -> yOffsetStep
    int xPixelOffset -> xPixelOffset
    int yPixelOffset -> yPixelOffset
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService this$0 -> this$0
    void onCreate(android.view.SurfaceHolder) -> onCreate
    void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    void notifySurfaceChanged(int,int,int,boolean) -> notifySurfaceChanged
    void onVisibilityChanged(boolean) -> onVisibilityChanged
    void notifyVisibilityChanged(boolean) -> notifyVisibilityChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    void onDestroy() -> onDestroy
    android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean) -> onCommand
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
    void notifyOffsetsChanged() -> notifyOffsetsChanged
    void notifyPreviewState() -> notifyPreviewState
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2:
    boolean val$currentPreviewState -> val$currentPreviewState
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void logAction(int,int) -> logAction
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.AndroidMusic:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    android.media.MediaPlayer player -> player
    boolean isPrepared -> isPrepared
    boolean wasPlaying -> wasPlaying
    float volume -> volume
    void dispose() -> dispose
    boolean isLooping() -> isLooping
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    void play() -> play
    void setLooping(boolean) -> setLooping
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void stop() -> stop
    float getPosition() -> getPosition
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.AndroidNet:
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.net.NetJavaImpl netJavaImpl -> netJavaImpl
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.backends.android.AndroidNet$1 -> com.badlogic.gdx.backends.android.AndroidNet$1:
    android.net.Uri val$uri -> val$uri
    com.badlogic.gdx.backends.android.AndroidNet this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    android.app.Dialog dialog -> dialog
    android.widget.TextView textView -> textView
    android.app.Dialog createDialog() -> createDialog
    android.widget.TextView createView(android.content.Context) -> createView
    void setVisible(boolean) -> setVisible
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1:
    android.text.Editable editable -> editable
    boolean getDefaultEditable() -> getDefaultEditable
    android.text.Editable getEditableText() -> getEditableText
    android.text.method.MovementMethod getDefaultMovementMethod() -> getDefaultMovementMethod
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2:
    int[] screenloc -> screenloc
    int keyboardHeight -> keyboardHeight
    boolean keyboardShowing -> keyboardShowing
    android.view.View val$content -> val$content
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    boolean onPreDraw() -> onPreDraw
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable:
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    void getChars(int,int,char[],int) -> getChars
    void removeSpan(java.lang.Object) -> removeSpan
    void setSpan(java.lang.Object,int,int,int) -> setSpan
    int getSpanEnd(java.lang.Object) -> getSpanEnd
    int getSpanFlags(java.lang.Object) -> getSpanFlags
    int getSpanStart(java.lang.Object) -> getSpanStart
    java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    android.text.Editable append(java.lang.CharSequence) -> append
    android.text.Editable append(char) -> append
    android.text.Editable append(java.lang.CharSequence,int,int) -> append
    void clear() -> clear
    void clearSpans() -> clearSpans
    android.text.Editable delete(int,int) -> delete
    android.text.InputFilter[] getFilters() -> getFilters
    android.text.Editable insert(int,java.lang.CharSequence) -> insert
    android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    void setFilters(android.text.InputFilter[]) -> setFilters
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.backends.android.AndroidPreferences -> com.badlogic.gdx.backends.android.AndroidPreferences:
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    android.content.SharedPreferences$Editor editor -> editor
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void flush() -> flush
    void remove(java.lang.String) -> remove
    void edit() -> edit
com.badlogic.gdx.backends.android.AndroidServerSocket -> com.badlogic.gdx.backends.android.AndroidServerSocket:
    com.badlogic.gdx.Net$Protocol protocol -> protocol
    java.net.ServerSocket server -> server
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler -> com.badlogic.gdx.backends.android.AndroidSingleTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidSocket -> com.badlogic.gdx.backends.android.AndroidSocket:
    java.net.Socket socket -> socket
    void applyHints(com.badlogic.gdx.net.SocketHints) -> applyHints
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.AndroidSound:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    int soundId -> soundId
    com.badlogic.gdx.utils.IntArray streamIds -> streamIds
    void dispose() -> dispose
    long play() -> play
    long play(float) -> play
    void stop() -> stop
    void stop(long) -> stop
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    long loop() -> loop
    long loop(float) -> loop
    void setLooping(long,boolean) -> setLooping
    void setPan(long,float,float) -> setPan
    long play(float,float,float) -> play
    long loop(float,float,float) -> loop
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.AndroidTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.CustomAndroidGDXApp -> com.badlogic.gdx.backends.android.CustomAndroidGDXApp:
    void destroyGraphics() -> destroyGraphics
    com.badlogic.gdx.backends.android.AndroidGraphics getGraphics() -> getGraphics
    android.view.View getGraphicsView() -> getGraphicsView
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
com.badlogic.gdx.backends.android.InputProcessorLW -> com.badlogic.gdx.backends.android.InputProcessorLW:
    void touchDrop(int,int) -> touchDrop
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper:
    javax.microedition.khronos.egl.EGL10 mEgl10 -> mEgl10
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    boolean mCheckError -> mCheckError
    int mArgCount -> mArgCount
    boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglChooseConfig
    boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object) -> eglCopyBuffers
    javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[]) -> eglCreateContext
    javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[]) -> eglCreatePbufferSurface
    javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreatePixmapSurface
    javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreateWindowSurface
    boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> eglDestroyContext
    boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglDestroySurface
    boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[]) -> eglGetConfigAttrib
    boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglGetConfigs
    javax.microedition.khronos.egl.EGLContext eglGetCurrentContext() -> eglGetCurrentContext
    javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay() -> eglGetCurrentDisplay
    javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int) -> eglGetCurrentSurface
    javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object) -> eglGetDisplay
    int eglGetError() -> eglGetError
    boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[]) -> eglInitialize
    boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext) -> eglMakeCurrent
    boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[]) -> eglQueryContext
    java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int) -> eglQueryString
    boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[]) -> eglQuerySurface
    boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglSwapBuffers
    boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay) -> eglTerminate
    boolean eglWaitGL() -> eglWaitGL
    boolean eglWaitNative(int,java.lang.Object) -> eglWaitNative
    void checkError() -> checkError
    void logLine(java.lang.String) -> logLine
    void log(java.lang.String) -> log
    void begin(java.lang.String) -> begin
    void arg(java.lang.String,java.lang.String) -> arg
    void end() -> end
    void flush() -> flush
    void arg(java.lang.String,int) -> arg
    void arg(java.lang.String,java.lang.Object) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface) -> arg
    void returns(java.lang.String) -> returns
    void returns(int) -> returns
    void returns(boolean) -> returns
    void returns(java.lang.Object) -> returns
    java.lang.String toString(java.lang.Object) -> toString
    void arg(java.lang.String,int[]) -> arg
    void arg(java.lang.String,java.lang.Object[]) -> arg
    java.lang.String toString(int,int[],int) -> toString
    java.lang.String toString(int,java.lang.Object[],int) -> toString
    java.lang.String getHex(int) -> getHex
    java.lang.String getErrorString(int) -> getErrorString
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView:
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void destroySurface() -> destroySurface
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    void run() -> run
    void stopEglLocked() -> stopEglLocked
    void guardedRun() -> guardedRun
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mEglOwner -> mEglOwner
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> threadExiting
    boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> tryAcquireEglSurfaceLocked
    void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW:
    java.lang.String TAG -> TAG
    boolean LOG_VIEW -> LOG_VIEW
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    android.service.wallpaper.WallpaperService$Engine engine -> engine
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    void init() -> init
    android.view.SurfaceHolder getHolder() -> getHolder
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onDestroy() -> onDestroy
    void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void destroySurface() -> destroySurface
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    void run() -> run
    void stopEglLocked() -> stopEglLocked
    void guardedRun() -> guardedRun
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread mEglOwner -> mEglOwner
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> threadExiting
    boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> tryAcquireEglSurfaceLocked
    void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper -> com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper:
    int CONFIG_CHECK_GL_ERROR -> CONFIG_CHECK_GL_ERROR
    int CONFIG_CHECK_THREAD -> CONFIG_CHECK_THREAD
    int CONFIG_LOG_ARGUMENT_NAMES -> CONFIG_LOG_ARGUMENT_NAMES
    int ERROR_WRONG_THREAD -> ERROR_WRONG_THREAD
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer) -> wrap
    javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper:
    boolean mCheckError -> mCheckError
    boolean mCheckThread -> mCheckThread
    java.lang.Thread mOurThread -> mOurThread
    void checkThread() -> checkThread
    void checkError() -> checkError
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
com.badlogic.gdx.backends.android.surfaceview.GLException -> com.badlogic.gdx.backends.android.surfaceview.GLException:
    int mError -> mError
    java.lang.String getErrorString(int) -> getErrorString
    int getError() -> getError
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper:
    int FORMAT_INT -> FORMAT_INT
    int FORMAT_FLOAT -> FORMAT_FLOAT
    int FORMAT_FIXED -> FORMAT_FIXED
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    int mArgCount -> mArgCount
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mColorPointer -> mColorPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mNormalPointer -> mNormalPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mTexCoordPointer -> mTexCoordPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mVertexPointer -> mVertexPointer
    boolean mColorArrayEnabled -> mColorArrayEnabled
    boolean mNormalArrayEnabled -> mNormalArrayEnabled
    boolean mTextureCoordArrayEnabled -> mTextureCoordArrayEnabled
    boolean mVertexArrayEnabled -> mVertexArrayEnabled
    java.lang.StringBuilder mStringBuilder -> mStringBuilder
    void checkError() -> checkError
    void logLine(java.lang.String) -> logLine
    void log(java.lang.String) -> log
    void begin(java.lang.String) -> begin
    void arg(java.lang.String,java.lang.String) -> arg
    void end() -> end
    void flush() -> flush
    void arg(java.lang.String,boolean) -> arg
    void arg(java.lang.String,int) -> arg
    void arg(java.lang.String,float) -> arg
    void returns(java.lang.String) -> returns
    void returns(int) -> returns
    void arg(java.lang.String,int,int[],int) -> arg
    void arg(java.lang.String,int,short[],int) -> arg
    void arg(java.lang.String,int,float[],int) -> arg
    void formattedAppend(java.lang.StringBuilder,int,int) -> formattedAppend
    java.lang.String toString(int,int,int[],int) -> toString
    java.lang.String toString(int,short[],int) -> toString
    java.lang.String toString(int,float[],int) -> toString
    java.lang.String toString(int,java.nio.FloatBuffer) -> toString
    java.lang.String toString(int,int,java.nio.IntBuffer) -> toString
    java.lang.String toString(int,java.nio.ShortBuffer) -> toString
    void arg(java.lang.String,int,java.nio.FloatBuffer) -> arg
    void arg(java.lang.String,int,java.nio.IntBuffer) -> arg
    void arg(java.lang.String,int,java.nio.ShortBuffer) -> arg
    void argPointer(int,int,int,java.nio.Buffer) -> argPointer
    java.lang.String getHex(int) -> getHex
    java.lang.String getErrorString(int) -> getErrorString
    java.lang.String getClearBufferMask(int) -> getClearBufferMask
    java.lang.String getFactor(int) -> getFactor
    java.lang.String getShadeModel(int) -> getShadeModel
    java.lang.String getTextureTarget(int) -> getTextureTarget
    java.lang.String getTextureEnvTarget(int) -> getTextureEnvTarget
    java.lang.String getTextureEnvPName(int) -> getTextureEnvPName
    int getTextureEnvParamCount(int) -> getTextureEnvParamCount
    java.lang.String getTextureEnvParamName(float) -> getTextureEnvParamName
    java.lang.String getMatrixMode(int) -> getMatrixMode
    java.lang.String getClientState(int) -> getClientState
    java.lang.String getCap(int) -> getCap
    java.lang.String getTexturePName(int) -> getTexturePName
    java.lang.String getTextureParamName(float) -> getTextureParamName
    java.lang.String getFogPName(int) -> getFogPName
    int getFogParamCount(int) -> getFogParamCount
    java.lang.String getBeginMode(int) -> getBeginMode
    java.lang.String getIndexType(int) -> getIndexType
    java.lang.String getIntegerStateName(int) -> getIntegerStateName
    int getIntegerStateSize(int) -> getIntegerStateSize
    int getIntegerStateFormat(int) -> getIntegerStateFormat
    java.lang.String getHintTarget(int) -> getHintTarget
    java.lang.String getHintMode(int) -> getHintMode
    java.lang.String getFaceName(int) -> getFaceName
    java.lang.String getMaterialPName(int) -> getMaterialPName
    int getMaterialParamCount(int) -> getMaterialParamCount
    java.lang.String getLightName(int) -> getLightName
    java.lang.String getLightPName(int) -> getLightPName
    int getLightParamCount(int) -> getLightParamCount
    java.lang.String getLightModelPName(int) -> getLightModelPName
    int getLightModelParamCount(int) -> getLightModelParamCount
    java.lang.String getPointerTypeName(int) -> getPointerTypeName
    java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer) -> toByteBuffer
    char[] toCharIndices(int,int,java.nio.Buffer) -> toCharIndices
    void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int) -> doArrayElement
    void doElement(java.lang.StringBuilder,int,int) -> doElement
    void bindArrays() -> bindArrays
    void unbindArrays() -> unbindArrays
    void startLogIndices() -> startLogIndices
    void endLogIndices() -> endLogIndices
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo:
    int mSize -> mSize
    int mType -> mType
    int mStride -> mStride
    java.nio.Buffer mPointer -> mPointer
    java.nio.ByteBuffer mTempByteBuffer -> mTempByteBuffer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper this$0 -> this$0
    int sizeof(int) -> sizeof
    int getStride() -> getStride
    void bindByteBuffer() -> bindByteBuffer
    void unbindByteBuffer() -> unbindByteBuffer
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 this$0 -> this$0
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    java.lang.Object sEglLock -> sEglLock
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mRenderMode -> mRenderMode
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    boolean mHasSurface -> mHasSurface
    void onMeasure(int,int) -> onMeasure
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void finish() -> finish
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    boolean mDone -> mDone
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    java.util.ArrayList mEventQueue -> mEventQueue
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper mEglHelper -> mEglHelper
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    void run() -> run
    void guardedRun() -> guardedRun
    boolean needToWait() -> needToWait
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
    java.lang.Runnable getEvent() -> getEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase -> com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase:
    javax.microedition.khronos.opengles.GL10 mgl -> mgl
    javax.microedition.khronos.opengles.GL10Ext mgl10Ext -> mgl10Ext
    javax.microedition.khronos.opengles.GL11 mgl11 -> mgl11
    javax.microedition.khronos.opengles.GL11Ext mgl11Ext -> mgl11Ext
    javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack -> mgl11ExtensionPack
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
    void glCurrentPaletteMatrixOES(int) -> glCurrentPaletteMatrixOES
    void glLoadPaletteFromModelViewMatrixOES() -> glLoadPaletteFromModelViewMatrixOES
    void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer) -> glMatrixIndexPointerOES
    void glMatrixIndexPointerOES(int,int,int,int) -> glMatrixIndexPointerOES
    void glWeightPointerOES(int,int,int,java.nio.Buffer) -> glWeightPointerOES
    void glWeightPointerOES(int,int,int,int) -> glWeightPointerOES
    void glBindFramebufferOES(int,int) -> glBindFramebufferOES
    void glBindRenderbufferOES(int,int) -> glBindRenderbufferOES
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    int glCheckFramebufferStatusOES(int) -> glCheckFramebufferStatusOES
    void glCompressedTexImage2D(int,int,int,int,int,int,int) -> glCompressedTexImage2D
    void glDeleteFramebuffersOES(int,int[],int) -> glDeleteFramebuffersOES
    void glDeleteFramebuffersOES(int,java.nio.IntBuffer) -> glDeleteFramebuffersOES
    void glDeleteRenderbuffersOES(int,int[],int) -> glDeleteRenderbuffersOES
    void glDeleteRenderbuffersOES(int,java.nio.IntBuffer) -> glDeleteRenderbuffersOES
    void glFramebufferRenderbufferOES(int,int,int,int) -> glFramebufferRenderbufferOES
    void glFramebufferTexture2DOES(int,int,int,int,int) -> glFramebufferTexture2DOES
    void glGenerateMipmapOES(int) -> glGenerateMipmapOES
    void glGenFramebuffersOES(int,int[],int) -> glGenFramebuffersOES
    void glGenFramebuffersOES(int,java.nio.IntBuffer) -> glGenFramebuffersOES
    void glGenRenderbuffersOES(int,int[],int) -> glGenRenderbuffersOES
    void glGenRenderbuffersOES(int,java.nio.IntBuffer) -> glGenRenderbuffersOES
    void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int) -> glGetFramebufferAttachmentParameterivOES
    void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameterivOES
    void glGetRenderbufferParameterivOES(int,int,int[],int) -> glGetRenderbufferParameterivOES
    void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameterivOES
    void glGetTexGenfv(int,int,float[],int) -> glGetTexGenfv
    void glGetTexGenfv(int,int,java.nio.FloatBuffer) -> glGetTexGenfv
    void glGetTexGeniv(int,int,int[],int) -> glGetTexGeniv
    void glGetTexGeniv(int,int,java.nio.IntBuffer) -> glGetTexGeniv
    void glGetTexGenxv(int,int,int[],int) -> glGetTexGenxv
    void glGetTexGenxv(int,int,java.nio.IntBuffer) -> glGetTexGenxv
    boolean glIsFramebufferOES(int) -> glIsFramebufferOES
    boolean glIsRenderbufferOES(int) -> glIsRenderbufferOES
    void glRenderbufferStorageOES(int,int,int,int) -> glRenderbufferStorageOES
    void glTexGenf(int,int,float) -> glTexGenf
    void glTexGenfv(int,int,float[],int) -> glTexGenfv
    void glTexGenfv(int,int,java.nio.FloatBuffer) -> glTexGenfv
    void glTexGeni(int,int,int) -> glTexGeni
    void glTexGeniv(int,int,int[],int) -> glTexGeniv
    void glTexGeniv(int,int,java.nio.IntBuffer) -> glTexGeniv
    void glTexGenx(int,int,int) -> glTexGenx
    void glTexGenxv(int,int,int[],int) -> glTexGenxv
    void glTexGenxv(int,int,java.nio.IntBuffer) -> glTexGenxv
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    java.lang.String TAG -> TAG
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int mNumSamples -> mNumSamples
    boolean mUseGL20 -> mUseGL20
    int[] mConfigAttribs -> mConfigAttribs
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    float ratio -> ratio
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension:
    int width -> width
    int height -> height
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.d.a:
    java.io.File file -> file
    com.badlogic.gdx.Files$FileType type -> type
    java.lang.String path() -> path
    java.lang.String name() -> name
    java.lang.String extension() -> extension
    java.lang.String nameWithoutExtension() -> nameWithoutExtension
    java.lang.String pathWithoutExtension() -> pathWithoutExtension
    com.badlogic.gdx.Files$FileType type() -> type
    java.io.File file() -> file
    java.io.InputStream read() -> read
    java.io.BufferedInputStream read(int) -> read
    java.io.Reader reader() -> reader
    java.io.Reader reader(java.lang.String) -> reader
    java.io.BufferedReader reader(int) -> reader
    java.io.BufferedReader reader(int,java.lang.String) -> reader
    java.lang.String readString() -> readString
    java.lang.String readString(java.lang.String) -> readString
    byte[] readBytes() -> readBytes
    int readBytes(byte[],int,int) -> readBytes
    java.io.OutputStream write(boolean) -> write
    void write(java.io.InputStream,boolean) -> write
    java.io.Writer writer(boolean) -> writer
    java.io.Writer writer(boolean,java.lang.String) -> writer
    void writeString(java.lang.String,boolean) -> writeString
    void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    void writeBytes(byte[],boolean) -> writeBytes
    void writeBytes(byte[],int,int,boolean) -> writeBytes
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    void mkdirs() -> mkdirs
    boolean exists() -> exists
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void emptyDirectory() -> emptyDirectory
    void emptyDirectory(boolean) -> emptyDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
    long length() -> length
    long lastModified() -> lastModified
    java.lang.String toString() -> toString
    com.badlogic.gdx.files.FileHandle tempFile(java.lang.String) -> tempFile
    com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String) -> tempDirectory
    void emptyDirectory(java.io.File,boolean) -> emptyDirectory
    boolean deleteDirectory(java.io.File) -> deleteDirectory
    void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyFile
    void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyDirectory
com.badlogic.gdx.files.FileHandle$1 -> com.badlogic.gdx.d.b:
    int[] $SwitchMap$com$badlogic$gdx$Files$FileType -> a
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.a:
    com.badlogic.gdx.graphics.Color CLEAR -> a
    com.badlogic.gdx.graphics.Color WHITE -> b
    com.badlogic.gdx.graphics.Color BLACK -> c
    com.badlogic.gdx.graphics.Color RED -> d
    com.badlogic.gdx.graphics.Color GREEN -> e
    com.badlogic.gdx.graphics.Color BLUE -> f
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> g
    com.badlogic.gdx.graphics.Color GRAY -> h
    com.badlogic.gdx.graphics.Color DARK_GRAY -> i
    com.badlogic.gdx.graphics.Color PINK -> j
    com.badlogic.gdx.graphics.Color ORANGE -> k
    com.badlogic.gdx.graphics.Color YELLOW -> l
    com.badlogic.gdx.graphics.Color MAGENTA -> m
    com.badlogic.gdx.graphics.Color CYAN -> n
    com.badlogic.gdx.graphics.Color tmp -> o
    float r -> p
    float g -> q
    float b -> r
    float a -> s
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    float toFloatBits() -> a
    int toIntBits() -> c
    java.lang.String toString() -> toString
    int rgba8888$40983718() -> b
com.badlogic.gdx.graphics.GL10 -> com.badlogic.gdx.graphics.b:
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glDisableClientState(int) -> glDisableClientState
    void glEnableClientState(int) -> glEnableClientState
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glMatrixMode(int) -> glMatrixMode
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
com.badlogic.gdx.graphics.GL11 -> com.badlogic.gdx.graphics.c:
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.d:
    void glAttachShader(int,int) -> glAttachShader
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glLinkProgram(int) -> glLinkProgram
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1i(int,int) -> glUniform1i
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GLCommon -> com.badlogic.gdx.graphics.e:
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glPixelStorei(int,int) -> glPixelStorei
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.f:
    java.util.Map meshes -> a
    boolean forceVBO -> b
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> c
    com.badlogic.gdx.graphics.glutils.IndexData indices -> d
    boolean autoBind -> e
    boolean isVertexArray -> f
    void setVertices(float[]) -> a
    void setVertices$1cc109a0(float[],int) -> a
    void setIndices(short[]) -> a
    void render$4868d30e(int) -> a
    void render$7f380d0b(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void render$6e88a955$67ca0758(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> a
    void dispose() -> dispose
    java.nio.ShortBuffer getIndicesBuffer() -> a
    void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> a
    void invalidateAllMeshes(com.badlogic.gdx.Application) -> a
    void clearAllMeshes(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> b
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.g:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> a
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> b
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> c
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> d
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.h:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> c
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> a
    int color -> b
    boolean disposed -> d
    void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> a
    void drawPixmap$23690701(com.badlogic.gdx.graphics.Pixmap,int,int) -> a
    void drawPixmap$12cb159f(com.badlogic.gdx.graphics.Pixmap,int,int,int,int) -> a
    int getPixel(int,int) -> a
    int getWidth() -> a
    int getHeight() -> b
    void dispose() -> dispose
    int getGLFormat() -> c
    int getGLInternalFormat() -> d
    int getGLType() -> e
    java.nio.ByteBuffer getPixels() -> f
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> g
    com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> h
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.i:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> a
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> b
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> c
    com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.j:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> a
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> b
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> c
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> d
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> e
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> f
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> g
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> h
    com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> a
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.k:
    com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.l:
    byte[] writeBuffer -> a
    byte[] readBuffer -> b
    com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.m:
    boolean enforcePotImages -> h
    com.badlogic.gdx.assets.AssetManager assetManager -> i
    java.util.Map managedTextures -> a
    java.nio.IntBuffer buffer -> j
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> c
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> e
    int glHandle -> f
    com.badlogic.gdx.graphics.TextureData data -> g
    void create(com.badlogic.gdx.graphics.TextureData) -> b
    int createGLHandle() -> f
    void load(com.badlogic.gdx.graphics.TextureData) -> a
    void reload() -> g
    void bind() -> a
    int getWidth() -> b
    int getHeight() -> c
    int getTextureObjectHandle() -> d
    void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
    void dispose() -> dispose
    void clearAllTextures(com.badlogic.gdx.Application) -> a
    void invalidateAllTextures(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> e
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.n:
    int val$refCount -> a
    void finishedLoading$190c2c84(com.badlogic.gdx.assets.AssetManager,java.lang.String) -> a
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.o:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> a
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> g
    int glEnum -> h
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> i
    com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> a
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.p:
    com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat -> a
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> b
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> c
    int glEnum -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> e
    com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> a
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.q:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    boolean isPrepared() -> b
    void prepare() -> c
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    void consumeCompressedData() -> f
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.r:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> a
    com.badlogic.gdx.graphics.TextureData$TextureDataType Compressed -> b
    com.badlogic.gdx.graphics.TextureData$TextureDataType Float -> c
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> d
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.s:
    int usage -> a
    int numComponents -> b
    int offset -> c
    java.lang.String alias -> d
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.t:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> b
    int vertexSize -> a
    int calculateOffsets() -> b
    void checkValidity() -> c
    int size() -> a
    com.badlogic.gdx.graphics.VertexAttribute get(int) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g2d.BitmapFont -> com.badlogic.gdx.graphics.g2d.a:
    char[] xChars -> a
    char[] capChars -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> c
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> d
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> e
    boolean flipped -> f
    boolean integer -> g
    boolean ownsTexture -> h
    void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float) -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> a
    void dispose() -> dispose
    boolean usesIntegerPositions() -> b
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData -> com.badlogic.gdx.graphics.g2d.b:
    java.lang.String imagePath -> a
    com.badlogic.gdx.files.FileHandle fontFile -> b
    boolean flipped -> c
    float lineHeight -> d
    float capHeight -> e
    float ascent -> f
    float descent -> g
    float down -> h
    float scaleX -> i
    float scaleY -> j
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs -> k
    float spaceWidth -> l
    float xHeight -> m
    void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph) -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph() -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> a
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph -> com.badlogic.gdx.graphics.g2d.c:
    int srcX -> a
    int srcY -> b
    int width -> c
    int height -> d
    float u -> e
    float v -> f
    float u2 -> g
    float v2 -> h
    int xoffset -> i
    int yoffset -> j
    int xadvance -> k
    byte[][] kerning -> l
    int getKerning(char) -> a
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds -> com.badlogic.gdx.graphics.g2d.d:
    float width -> a
    float height -> b
com.badlogic.gdx.graphics.g2d.BitmapFontCache -> com.badlogic.gdx.graphics.g2d.e:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> a
    float[] vertices -> b
    int idx -> c
    float x -> d
    float y -> e
    float color -> f
    com.badlogic.gdx.graphics.Color tempColor -> g
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> h
    boolean integer -> i
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    void clear() -> a
    void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float) -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText$38304fc0(java.lang.CharSequence,float,float,int) -> a
    void setUseIntegerPositions$1385ff() -> b
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    long basePtr -> a
    int width -> b
    int height -> c
    int format -> d
    java.nio.ByteBuffer pixelPtr -> e
    long[] nativeData -> f
    void dispose() -> dispose
    void clear(int) -> a
    int getPixel(int,int) -> a
    void drawPixmap$1d45ff80(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int) -> a
    void drawPixmap$1c4a40e0(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int) -> a
    java.nio.ByteBuffer getPixels() -> a
    int getHeight() -> b
    int getWidth() -> c
    int getFormat() -> d
    int getGLInternalFormat() -> e
    int getGLFormat() -> f
    int getGLType() -> g
    java.nio.ByteBuffer load(long[],byte[],int,int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    int getPixel(long,int,int) -> getPixel
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.lang.String getFailureReason() -> getFailureReason
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.f:
    com.badlogic.gdx.graphics.Mesh mesh -> e
    com.badlogic.gdx.graphics.Mesh[] buffers -> f
    com.badlogic.gdx.graphics.Texture lastTexture -> g
    float invTexWidth -> h
    float invTexHeight -> i
    int idx -> j
    int currBufferIdx -> k
    float[] vertices -> l
    com.badlogic.gdx.math.Matrix4 transformMatrix -> m
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> n
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> o
    boolean drawing -> p
    boolean blendingDisabled -> q
    int blendSrcFunc -> r
    int blendDstFunc -> s
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> t
    boolean ownsShader -> u
    float color -> a
    com.badlogic.gdx.graphics.Color tempColor -> v
    int renderCalls -> b
    int totalRenderCalls -> c
    int maxSpritesInBatch -> d
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> w
    void begin() -> a
    void end() -> b
    void draw$1647d9c(com.badlogic.gdx.graphics.Texture,float[],int) -> a
    void draw$35ea77db(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> a
    void renderMesh() -> e
    void disableBlending() -> c
    void enableBlending() -> d
    void dispose() -> dispose
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> a
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.g:
    java.lang.String[] tuple -> a
    java.util.HashSet textures -> c
    java.util.Comparator indexComparator -> b
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.h:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.i:
    float offsetX -> a
    float offsetY -> b
    int packedWidth -> c
    int packedHeight -> d
    int originalWidth -> e
    int originalHeight -> f
    boolean rotate -> g
    void flip(boolean,boolean) -> a
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.j:
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.k:
    int index -> a
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.l:
    com.badlogic.gdx.graphics.Texture texture -> h
    float u -> i
    float v -> j
    float u2 -> k
    float v2 -> l
    int regionWidth -> m
    int regionHeight -> n
    void flip(boolean,boolean) -> a
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> a
    int ETC1_RGB8_OES -> b
    com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> a
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.a:
    int width -> a
    int height -> b
    java.nio.ByteBuffer compressedData -> c
    int dataOffset -> d
    boolean hasPKMHeader() -> a
    void dispose() -> dispose
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.b:
    com.badlogic.gdx.files.FileHandle file -> a
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> b
    boolean useMipMaps -> c
    int width -> d
    int height -> e
    boolean isPrepared -> f
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    boolean isPrepared() -> b
    void prepare() -> c
    void consumeCompressedData() -> f
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.c:
    boolean copyToPOT -> a
    com.badlogic.gdx.files.FileHandle file -> b
    int width -> c
    int height -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    com.badlogic.gdx.graphics.Pixmap pixmap -> f
    boolean useMipMaps -> g
    boolean isPrepared -> h
    boolean isPrepared() -> b
    void prepare() -> c
    com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> a
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    void consumeCompressedData() -> f
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.d:
    java.util.Map buffers -> f
    com.badlogic.gdx.graphics.Texture colorTexture -> a
    int defaultFramebufferHandle -> g
    boolean defaultFramebufferHandleInitialized -> h
    int framebufferHandle -> i
    int depthbufferHandle -> j
    int width -> b
    int height -> c
    boolean hasDepth -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    void build() -> e
    void dispose() -> dispose
    void begin() -> a
    void end() -> b
    void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> a
    void clearAllFrameBuffers(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> c
    com.badlogic.gdx.graphics.Texture getColorBufferTexture() -> d
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.e:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int getNumIndices() -> a
    int getNumMaxIndices() -> b
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> c
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.f:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    int createBufferObject() -> g
    int getNumIndices() -> a
    int getNumMaxIndices() -> b
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> c
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.g:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    int createBufferObject() -> g
    int getNumIndices() -> a
    int getNumMaxIndices() -> b
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> c
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.h:
    int getNumIndices() -> a
    int getNumMaxIndices() -> b
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> c
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.i:
    boolean useHWMipMap -> a
    void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> a
    void generateMipMapCPU(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> b
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.j:
    com.badlogic.gdx.graphics.Pixmap pixmap -> a
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean useMipMaps -> c
    boolean disposePixmap -> d
    boolean disposePixmap() -> e
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    void consumeCompressedData() -> f
    boolean isPrepared() -> b
    void prepare() -> c
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.k:
    boolean pedantic -> a
    com.badlogic.gdx.utils.ObjectMap shaders -> e
    java.lang.String log -> f
    boolean isCompiled -> g
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> h
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> i
    com.badlogic.gdx.utils.ObjectIntMap uniformSizes -> j
    java.lang.String[] uniformNames -> k
    com.badlogic.gdx.utils.ObjectIntMap attributes -> l
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> m
    com.badlogic.gdx.utils.ObjectIntMap attributeSizes -> n
    java.lang.String[] attributeNames -> o
    int program -> p
    int vertexShaderHandle -> q
    int fragmentShaderHandle -> r
    java.nio.FloatBuffer matrix -> s
    java.lang.String vertexShaderSource -> t
    java.lang.String fragmentShaderSource -> u
    boolean invalidated -> v
    java.nio.ByteBuffer buffer -> w
    java.nio.FloatBuffer floatBuffer -> x
    java.nio.IntBuffer intBuffer -> y
    int refCount -> z
    java.nio.IntBuffer intbuf -> b
    java.nio.IntBuffer params -> c
    java.nio.IntBuffer type -> d
    void compileShaders(java.lang.String,java.lang.String) -> a
    int loadShader(int,java.lang.String) -> a
    java.lang.String getLog() -> a
    boolean isCompiled() -> b
    int fetchAttributeLocation(java.lang.String) -> d
    int fetchUniformLocation(java.lang.String) -> e
    void setUniformi$505cff1c(java.lang.String) -> a
    void setUniformf(java.lang.String,float) -> a
    void setUniformf(java.lang.String,float,float) -> a
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> a
    void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer) -> a
    void setVertexAttribute(java.lang.String,int,int,boolean,int,int) -> a
    void begin() -> c
    void end() -> d
    void dispose() -> dispose
    void disableVertexAttribute(java.lang.String) -> b
    void enableVertexAttribute(java.lang.String) -> c
    void checkManaged() -> f
    void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> a
    void clearAllShaderPrograms(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> e
    void fetchUniforms() -> g
    void fetchAttributes() -> h
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.l:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> a
    java.nio.FloatBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    boolean isBound -> d
    void dispose() -> dispose
    int getNumVertices() -> a
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> b
    void unbind() -> c
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.m:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isStatic -> f
    int usage -> g
    boolean isDirty -> h
    boolean isBound -> i
    int createBufferObject() -> e
    int getNumVertices() -> a
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> b
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind() -> c
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void invalidate() -> d
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.n:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isDirect -> f
    boolean isStatic -> g
    int usage -> h
    boolean isDirty -> i
    boolean isBound -> j
    int getNumVertices() -> a
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> b
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind() -> c
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.o:
    int getNumVertices() -> a
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> b
    void unbind() -> c
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void dispose() -> dispose
com.badlogic.gdx.input.GestureDetector -> com.badlogic.gdx.e.a:
    com.badlogic.gdx.input.GestureDetector$GestureListener listener -> a
    float tapSquareSize -> d
    long tapCountInterval -> e
    float longPressSeconds -> f
    long maxFlingDelay -> g
    boolean inTapSquare -> h
    int tapCount -> i
    long lastTapTime -> j
    float lastTapX -> k
    float lastTapY -> l
    int lastTapButton -> m
    int lastTapPointer -> n
    boolean longPressFired -> b
    boolean pinching -> o
    boolean panning -> p
    com.badlogic.gdx.input.GestureDetector$VelocityTracker tracker -> q
    float tapSquareCenterX -> r
    float tapSquareCenterY -> s
    long gestureStartTime -> t
    com.badlogic.gdx.math.Vector2 pointer1 -> c
    com.badlogic.gdx.math.Vector2 pointer2 -> u
    com.badlogic.gdx.math.Vector2 initialPointer1 -> v
    com.badlogic.gdx.math.Vector2 initialPointer2 -> w
    com.badlogic.gdx.utils.Timer$Task longPressTask -> x
    boolean touchDown$3b4dfe47(int,int,int) -> a
    boolean touchDragged(int,int,int) -> c
    boolean touchUp$3b4dfe47(int,int,int) -> b
    boolean isWithinTapSquare(float,float,float,float) -> a
com.badlogic.gdx.input.GestureDetector$1 -> com.badlogic.gdx.e.b:
    com.badlogic.gdx.input.GestureDetector this$0 -> a
    void run() -> run
com.badlogic.gdx.input.GestureDetector$GestureListener -> com.badlogic.gdx.e.c:
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$VelocityTracker -> com.badlogic.gdx.e.d:
    int sampleSize -> a
    float lastX -> b
    float lastY -> c
    float deltaX -> d
    float deltaY -> e
    long lastTime -> f
    int numSamples -> g
    float[] meanX -> h
    float[] meanY -> i
    long[] meanTime -> j
    void start(float,float,long) -> a
    void update(float,float,long) -> b
    float getVelocityX() -> a
    float getVelocityY() -> b
    float getAverage(float[],int) -> a
    long getAverage(long[],int) -> a
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.a:
    int ATAN2_DIM -> a
    float INV_ATAN2_DIM_MINUS_1 -> c
    java.util.Random random -> b
    int random$134621() -> a
    int nextPowerOfTwo(int) -> a
    boolean isPowerOfTwo(int) -> b
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    float[] tmp -> a
    float[] val -> b
    com.badlogic.gdx.math.Quaternion quat -> c
    com.badlogic.gdx.math.Vector3 l_vez -> d
    com.badlogic.gdx.math.Vector3 l_vex -> e
    com.badlogic.gdx.math.Vector3 l_vey -> f
    com.badlogic.gdx.math.Vector3 tmpVec -> g
    com.badlogic.gdx.math.Matrix4 tmpMat -> h
    com.badlogic.gdx.math.Vector3 right -> i
    com.badlogic.gdx.math.Vector3 tmpForward -> j
    com.badlogic.gdx.math.Vector3 tmpUp -> k
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> a
    com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> b
    com.badlogic.gdx.math.Matrix4 setToOrtho2D$7167aba2(float,float) -> a
    java.lang.String toString() -> toString
    void mul(float[],float[]) -> mul
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.b:
    com.badlogic.gdx.math.Quaternion tmp1 -> e
    com.badlogic.gdx.math.Quaternion tmp2 -> f
    float x -> a
    float y -> b
    float z -> c
    float w -> d
    com.badlogic.gdx.math.Quaternion set$4e318ec7(float) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.c:
    com.badlogic.gdx.math.Vector2 X -> a
    com.badlogic.gdx.math.Vector2 Y -> b
    com.badlogic.gdx.math.Vector2 Zero -> c
    float x -> d
    float y -> e
    com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> a
    com.badlogic.gdx.math.Vector2 set(float,float) -> a
    float dst(com.badlogic.gdx.math.Vector2) -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.d:
    float x -> a
    float y -> b
    float z -> c
    com.badlogic.gdx.math.Vector3 tmp -> d
    com.badlogic.gdx.math.Vector3 tmp2 -> e
    com.badlogic.gdx.math.Vector3 tmp3 -> f
    com.badlogic.gdx.math.Vector3 X -> g
    com.badlogic.gdx.math.Vector3 Y -> h
    com.badlogic.gdx.math.Vector3 Z -> i
    com.badlogic.gdx.math.Vector3 Zero -> j
    com.badlogic.gdx.math.Matrix4 tmpMat -> k
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.e:
    float[] values -> a
    int added_values -> b
    int last_value -> c
    float mean -> d
    boolean dirty -> e
    void clear() -> a
    void addValue(float) -> a
    float getMean() -> b
com.badlogic.gdx.net.HttpStatus -> com.badlogic.gdx.f.a:
    int statusCode -> a
com.badlogic.gdx.net.NetJavaImpl -> com.badlogic.gdx.f.b:
    java.util.concurrent.ExecutorService executorService -> a
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> a
com.badlogic.gdx.net.NetJavaImpl$1 -> com.badlogic.gdx.f.c:
    java.lang.String val$method -> a
    com.badlogic.gdx.Net$HttpRequest val$httpRequest -> b
    java.net.HttpURLConnection val$connection -> c
    com.badlogic.gdx.Net$HttpResponseListener val$httpResponseListener -> d
    com.badlogic.gdx.net.NetJavaImpl this$0 -> e
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$1$1 -> com.badlogic.gdx.f.d:
    com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse val$clientResponse -> a
    com.badlogic.gdx.net.NetJavaImpl$1 this$1 -> b
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$1$2 -> com.badlogic.gdx.f.e:
    java.lang.Exception val$e -> a
    com.badlogic.gdx.net.NetJavaImpl$1 this$1 -> b
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse -> com.badlogic.gdx.f.f:
    java.net.HttpURLConnection connection -> a
    com.badlogic.gdx.net.HttpStatus status -> b
    java.io.InputStream inputStream -> c
com.badlogic.gdx.net.ServerSocket -> com.badlogic.gdx.f.g:
com.badlogic.gdx.net.ServerSocketHints -> com.badlogic.gdx.f.h:
    int backlog -> a
    int performancePrefConnectionTime -> b
    int performancePrefLatency -> c
    int performancePrefBandwidth -> d
    boolean reuseAddress -> e
    int acceptTimeout -> f
    int receiveBufferSize -> g
com.badlogic.gdx.net.Socket -> com.badlogic.gdx.f.i:
com.badlogic.gdx.net.SocketHints -> com.badlogic.gdx.f.j:
    int connectTimeout -> a
    int performancePrefConnectionTime -> b
    int performancePrefLatency -> c
    int performancePrefBandwidth -> d
    int trafficClass -> e
    boolean keepAlive -> f
    boolean tcpNoDelay -> g
    int sendBufferSize -> h
    int receiveBufferSize -> i
    boolean linger -> j
    int lingerDuration -> k
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.a:
    java.lang.Object[] items -> a
    int size -> b
    boolean ordered -> c
    com.badlogic.gdx.utils.Array$ArrayIterator iterator1 -> d
    com.badlogic.gdx.utils.Array$ArrayIterator iterator2 -> e
    void add(java.lang.Object) -> a
    void addAll(com.badlogic.gdx.utils.Array) -> a
    java.lang.Object get(int) -> a
    boolean contains$4cfd3ce7(java.lang.Object) -> b
    boolean removeValue$4cfd3ce7(java.lang.Object) -> c
    java.lang.Object removeIndex(int) -> b
    java.lang.Object pop() -> a
    void clear() -> b
    java.lang.Object[] resize(int) -> c
    java.util.Iterator iterator() -> iterator
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.b:
    com.badlogic.gdx.utils.Array array -> c
    int index -> a
    boolean valid -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> a
    int allocatedUnsafe -> b
    void copy$154271e7(float[],java.nio.Buffer,int) -> a
    java.nio.FloatBuffer newFloatBuffer$70db3ee3() -> a
    java.nio.ByteBuffer newByteBuffer(int) -> a
    java.nio.IntBuffer newIntBuffer$ba72910() -> b
    void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> a
    java.nio.ByteBuffer newUnsafeByteBuffer(int) -> b
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
com.badlogic.gdx.utils.Clipboard -> com.badlogic.gdx.utils.c:
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.d:
    void dispose() -> dispose
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.e:
    boolean disableNativesLoading -> a
    boolean nativesLoaded -> b
    void load() -> a
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.f:
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.g:
    int[] items -> a
    int size -> b
    boolean ordered -> c
    void add(int) -> a
    int pop() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.h:
    int size -> a
    int[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> h
    int hashShift -> i
    int mask -> j
    int threshold -> k
    int stashCapacity -> l
    int pushIterations -> m
    java.lang.Object put(int,java.lang.Object) -> a
    void push(int,java.lang.Object,int,int,int,int,int,int) -> a
    java.lang.Object remove(int) -> a
    boolean containsKey(int) -> b
    void resize(int) -> c
    int hash2(int) -> d
    int hash3(int) -> e
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.i:
    java.lang.String tag -> a
    int level -> b
    void debug(java.lang.String) -> a
    void info(java.lang.String) -> b
    void error(java.lang.String,java.lang.Throwable) -> a
    int getLevel() -> a
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.j:
    boolean intToFloatColorMask -> a
    int floatToIntBits(float) -> a
    float intToFloatColor(int) -> a
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.k:
    int size -> a
    java.lang.Object[] keyTable -> b
    int[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    void put(java.lang.Object,int) -> a
    void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    int get(java.lang.Object,int) -> b
    void clear() -> a
    void resize(int) -> a
    int hash2(int) -> b
    int hash3(int) -> c
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.l:
    int size -> a
    java.lang.Object[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    com.badlogic.gdx.utils.ObjectMap$Entries entries1 -> l
    com.badlogic.gdx.utils.ObjectMap$Entries entries2 -> m
    com.badlogic.gdx.utils.ObjectMap$Keys keys1 -> n
    com.badlogic.gdx.utils.ObjectMap$Keys keys2 -> o
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> b
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object) -> b
    void removeStashIndex(int) -> a
    void clear() -> a
    boolean containsKey(java.lang.Object) -> c
    void resize(int) -> b
    int hash2(int) -> c
    int hash3(int) -> d
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> b
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> c
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.m:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> a
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> a
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.n:
    java.lang.Object key -> a
    java.lang.Object value -> b
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.o:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> b
    void remove() -> remove
    void reset() -> a
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.p:
    boolean hasNext -> b
    com.badlogic.gdx.utils.ObjectMap map -> c
    int nextIndex -> d
    int currentIndex -> e
    boolean valid -> f
    void reset() -> a
    void advance() -> c
    void remove() -> remove
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.q:
    int max -> max
    int peak -> peak
    com.badlogic.gdx.utils.Array freeObjects -> freeObjects
    java.lang.Object newObject() -> newObject
    java.lang.Object obtain() -> obtain
    void free(java.lang.Object) -> free
    void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    void clear() -> clear
    int getFree() -> getFree
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.r:
    boolean isWindows -> a
    boolean isLinux -> b
    boolean isMac -> c
    boolean isIos -> d
    boolean isAndroid -> e
    boolean is64Bit -> f
    java.util.HashSet loadedLibraries -> g
    java.lang.String nativesJar -> h
    java.lang.String crc(java.io.InputStream) -> a
    void load(java.lang.String) -> a
    java.io.InputStream readFile(java.lang.String) -> b
    java.io.File extractFile$7a2fde5c(java.lang.String) -> c
com.badlogic.gdx.utils.StreamUtils -> com.badlogic.gdx.utils.s:
    void copyStream$1ade3353(java.io.InputStream,java.io.OutputStream) -> a
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.t:
    char[] chars -> a
    int length -> b
    char[] digits -> c
    void enlargeBuffer(int) -> b
    void appendNull() -> a
    void append0(char) -> b
    void append0(java.lang.String) -> b
    char charAt(int) -> charAt
    int length() -> length
    java.lang.String toString() -> toString
    java.lang.CharSequence subSequence(int,int) -> subSequence
    com.badlogic.gdx.utils.StringBuilder append(char) -> a
    com.badlogic.gdx.utils.StringBuilder append(int) -> a
    com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> a
    com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.Timer -> com.badlogic.gdx.utils.u:
    com.badlogic.gdx.utils.Array instances -> a
    com.badlogic.gdx.utils.Timer instance -> b
    com.badlogic.gdx.utils.Array tasks -> c
    long update(long,long) -> a
    void wake() -> a
    void schedule(com.badlogic.gdx.utils.Timer$Task,float) -> a
com.badlogic.gdx.utils.Timer$1 -> com.badlogic.gdx.utils.v:
    void run() -> run
com.badlogic.gdx.utils.Timer$Task -> com.badlogic.gdx.utils.w:
    long executeTimeMillis -> b
    long intervalMillis -> c
    int repeatCount -> d
    void cancel() -> a
    boolean isScheduled() -> b
com.github.kevinsawicki.http.HttpRequest -> com.a.a.a.a:
    java.lang.String[] EMPTY_STRINGS -> a
    java.net.HttpURLConnection connection -> b
    com.github.kevinsawicki.http.HttpRequest$RequestOutputStream output -> c
    boolean multipart -> d
    boolean ignoreCloseExceptions -> e
    boolean uncompress -> f
    int bufferSize -> g
    com.github.kevinsawicki.http.HttpRequest get(java.lang.CharSequence) -> a
    java.lang.String toString() -> toString
    int code() -> b
    java.lang.String body(java.lang.String) -> a
    java.lang.String body() -> a
    java.io.InputStream stream() -> c
    java.lang.String header(java.lang.String) -> b
    com.github.kevinsawicki.http.HttpRequest closeOutput() -> d
    com.github.kevinsawicki.http.HttpRequest closeOutputQuietly() -> e
    int access$100(com.github.kevinsawicki.http.HttpRequest) -> a
com.github.kevinsawicki.http.HttpRequest$8 -> com.a.a.a.b:
    java.io.InputStream val$input -> a
    java.io.OutputStream val$output -> b
    com.github.kevinsawicki.http.HttpRequest this$0 -> c
    java.lang.Object run() -> a
com.github.kevinsawicki.http.HttpRequest$CloseOperation -> com.a.a.a.c:
    java.io.Closeable closeable -> a
    boolean ignoreCloseExceptions -> b
    void done() -> b
com.github.kevinsawicki.http.HttpRequest$HttpRequestException -> com.a.a.a.d:
    java.lang.Throwable getCause() -> getCause
com.github.kevinsawicki.http.HttpRequest$Operation -> com.a.a.a.e:
    java.lang.Object run() -> a
    void done() -> b
    java.lang.Object call() -> call
com.github.kevinsawicki.http.HttpRequest$RequestOutputStream -> com.a.a.a.f:
    java.nio.charset.CharsetEncoder encoder -> a
    com.github.kevinsawicki.http.HttpRequest$RequestOutputStream write(java.lang.String) -> a
com.google.ads.Ad -> com.google.ads.a:
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    com.google.ads.internal.a a -> a
    java.lang.Object b -> b
    com.google.ads.AdActivity c -> c
    com.google.ads.internal.d d -> d
    com.google.ads.AdActivity e -> e
    com.google.ads.AdActivity f -> f
    com.google.ads.AdActivity$StaticMethodWrapper g -> g
    com.google.ads.internal.AdWebView h -> h
    android.widget.FrameLayout i -> i
    int j -> j
    android.view.ViewGroup k -> k
    boolean l -> l
    long m -> m
    android.widget.RelativeLayout n -> n
    com.google.ads.AdActivity o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    com.google.ads.internal.AdVideoView t -> t
    void a(java.lang.String) -> a
    com.google.ads.internal.AdVideoView getAdVideoView() -> a
    boolean isShowing() -> b
    boolean leftApplication() -> c
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
    void moveAdVideoView(int,int,int,int) -> a
    void newAdVideoView(int,int,int,int) -> b
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(com.google.ads.internal.AdWebView,boolean,int,boolean,boolean) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void e() -> h
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void setCustomClose(boolean) -> a
    java.lang.Object a() -> d
    com.google.ads.AdActivity b() -> e
    com.google.ads.AdActivity c() -> f
    com.google.ads.internal.d d() -> g
    com.google.ads.internal.d b(com.google.ads.internal.d) -> a
com.google.ads.AdActivity$StaticMethodWrapper -> com.google.ads.b:
    boolean isShowing() -> a
    boolean leftApplication() -> b
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
com.google.ads.AdListener -> com.google.ads.c:
com.google.ads.AdRequest -> com.google.ads.d:
    java.text.SimpleDateFormat a -> b
    java.lang.reflect.Method b -> c
    java.lang.reflect.Method c -> d
    com.google.ads.AdRequest$Gender d -> e
    java.util.Date e -> f
    java.util.Set f -> g
    java.util.Map g -> h
    java.util.Map h -> i
    android.location.Location i -> j
    boolean j -> k
    boolean k -> l
    java.lang.String TEST_EMULATOR -> a
    java.util.Set l -> m
    com.google.ads.AdRequest setKeywords(java.util.Set) -> a
    com.google.ads.AdRequest setNetworkExtras(com.google.ads.mediation.NetworkExtras) -> a
    java.lang.Object getNetworkExtras(java.lang.Class) -> a
    java.util.Map getRequestMap(android.content.Context) -> a
    com.google.ads.AdRequest setTestDevices(java.util.Set) -> b
    boolean isTestDevice(android.content.Context) -> b
com.google.ads.AdRequest$ErrorCode -> com.google.ads.e:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> a
    com.google.ads.AdRequest$ErrorCode NO_FILL -> b
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> c
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> d
    java.lang.String a -> e
    com.google.ads.AdRequest$ErrorCode[] b -> f
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.f:
    com.google.ads.AdRequest$Gender UNKNOWN -> a
    com.google.ads.AdRequest$Gender MALE -> b
    com.google.ads.AdRequest$Gender FEMALE -> c
    com.google.ads.AdRequest$Gender[] a -> d
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.ads.g:
    com.google.ads.AdSize SMART_BANNER -> a
    com.google.ads.AdSize BANNER -> b
    com.google.ads.AdSize IAB_MRECT -> c
    com.google.ads.AdSize IAB_BANNER -> d
    com.google.ads.AdSize IAB_LEADERBOARD -> e
    com.google.ads.AdSize IAB_WIDE_SKYSCRAPER -> f
    int a -> g
    int b -> h
    boolean c -> i
    boolean d -> j
    boolean e -> k
    java.lang.String f -> l
    com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getWidth() -> a
    int getHeight() -> b
    boolean a() -> f
    boolean isFullWidth() -> c
    boolean isAutoHeight() -> d
    boolean isCustomAdSize() -> e
    java.lang.String toString() -> toString
com.google.ads.AdView -> com.google.ads.AdView:
    com.google.ads.internal.d a -> a
    com.google.ads.internal.a b -> b
    void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> b
    void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet) -> a
    com.google.ads.AdSize[] a(java.lang.String) -> a
    boolean a$79917c4d(java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    java.lang.String b(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> a
    java.util.Set c$28003ea2(java.lang.String,android.content.Context,android.util.AttributeSet) -> b
    void a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    void a(com.google.ads.AdSize[]) -> a
    void onMeasure(int,int) -> onMeasure
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
com.google.ads.AppEventListener -> com.google.ads.h:
com.google.ads.InterstitialAd -> com.google.ads.i:
com.google.ads.a -> com.google.ads.j:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.HashMap e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.HashMap e() -> e
com.google.ads.aa -> com.google.ads.k:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ab -> com.google.ads.l:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ac -> com.google.ads.m:
    com.google.ads.internal.a a -> a
    int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics) -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ae -> com.google.ads.n:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.google.ads.af -> com.google.ads.o:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.ag -> com.google.ads.p:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int M -> M
    int N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int aa -> aa
    int ab -> ab
    int ac -> ac
    int ad -> ad
    int ae -> ae
    int af -> af
    int ag -> ag
    int ah -> ah
    int ai -> ai
    int aj -> aj
    int ak -> ak
    int al -> al
    int am -> am
    int an -> an
    int ao -> ao
    int ap -> ap
    int aq -> aq
    int ar -> ar
    int as -> as
    int at -> at
    int au -> au
    int av -> av
    int aw -> aw
    int ax -> ax
    int ay -> ay
    int az -> az
    int aA -> aA
    int aB -> aB
    int aC -> aC
    int aD -> aD
    int aE -> aE
    int aF -> aF
    int aG -> aG
    int aH -> aH
    int aI -> aI
    int aJ -> aJ
    int aK -> aK
    int aL -> aL
    int aM -> aM
    int aN -> aN
    int aO -> aO
    int aP -> aP
    int aQ -> aQ
    int aR -> aR
    int aS -> aS
    int aT -> aT
    int aU -> aU
    int aV -> aV
    int aW -> aW
    int aX -> aX
    int aY -> aY
    int aZ -> aZ
    int ba -> ba
    int bb -> bb
    int bc -> bc
    int bd -> bd
    int be -> be
    int bf -> bf
    int bg -> bg
    int bh -> bh
    int bi -> bi
    int bj -> bj
    int bk -> bk
    int bl -> bl
    int bm -> bm
    int bn -> bn
    int bo -> bo
    int bp -> bp
    int bq -> bq
    int br -> br
    int bs -> bs
    int bt -> bt
    int bu -> bu
    int bv -> bv
    int bw -> bw
    int bx -> bx
    int by -> by
    int bz -> bz
    int bA -> bA
    int bB -> bB
    int bC -> bC
    int bD -> bD
    int bE -> bE
    int bF -> bF
    int bG -> bG
    int bH -> bH
    int bI -> bI
    int bJ -> bJ
    int bK -> bK
    int bL -> bL
    int bM -> bM
    int bN -> bN
    int bO -> bO
    int bP -> bP
    int bQ -> bQ
    int bR -> bR
    int bS -> bS
    int bT -> bT
    int bU -> bU
    int bV -> bV
    int bW -> bW
    int bX -> bX
    int bY -> bY
    int bZ -> bZ
    int ca -> ca
    int cb -> cb
    int cc -> cc
    int cd -> cd
    int ce -> ce
    int cf -> cf
    int cg -> cg
    int ch -> ch
    int ci -> ci
    int cj -> cj
    int ck -> ck
    int cl -> cl
    int cm -> cm
    int cn -> cn
    int co -> co
    int cp -> cp
    int cq -> cq
    int cr -> cr
    int cs -> cs
    int ct -> ct
    int cu -> cu
    int cv -> cv
    int cw -> cw
    int cx -> cx
    int cy -> cy
    int cz -> cz
    int cA -> cA
    int cB -> cB
    int cC -> cC
    int cD -> cD
    int cE -> cE
    int cF -> cF
    int cG -> cG
    int cH -> cH
    int cI -> cI
    int cJ -> cJ
    int cK -> cK
    int cL -> cL
    int cM -> cM
    com.google.ads.ag$a[] cN -> cN
    void a(byte[],byte[]) -> a
com.google.ads.ag$a -> com.google.ads.q:
    void a(byte[],byte[]) -> a
com.google.ads.ag$b -> com.google.ads.r:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$c -> com.google.ads.s:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$d -> com.google.ads.t:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$e -> com.google.ads.u:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$f -> com.google.ads.v:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$g -> com.google.ads.w:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$h -> com.google.ads.x:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$i -> com.google.ads.y:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$j -> com.google.ads.z:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$k -> com.google.ads.aa:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$l -> com.google.ads.ab:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$m -> com.google.ads.ac:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ah -> com.google.ads.ad:
    java.lang.String[] a -> a
com.google.ads.ai -> com.google.ads.ae:
    java.lang.String a(android.content.Context,java.lang.String) -> a
com.google.ads.aj -> com.google.ads.af:
    com.google.ads.au c -> c
    java.io.ByteArrayOutputStream d -> d
    android.view.MotionEvent a -> a
    android.util.DisplayMetrics b -> b
    void b(android.content.Context) -> a
    void c(android.content.Context) -> b
    java.lang.String a(android.content.Context) -> c
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.view.MotionEvent) -> a
    void a(int,int,int) -> a
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void a() -> a
    byte[] b() -> b
com.google.ads.ak -> com.google.ads.ag:
    java.lang.reflect.Method d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.reflect.Method h -> h
    java.lang.String i -> i
    long j -> j
    boolean c -> c
    com.google.ads.ak a(java.lang.String,android.content.Context) -> a
    void b(java.lang.String,android.content.Context) -> b
    void b(android.content.Context) -> a
    void c(android.content.Context) -> b
    java.lang.String a() -> a
    java.lang.Long b() -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String c() -> c
    java.util.ArrayList a(android.view.MotionEvent,android.util.DisplayMetrics) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String b(byte[],java.lang.String) -> a
com.google.ads.ak$a -> com.google.ads.ah:
com.google.ads.al -> com.google.ads.ai:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String[] c -> c
    com.google.ads.ai d -> d
    com.google.ads.ah e -> e
    boolean a(android.net.Uri) -> a
    void a(java.lang.String) -> a
    android.net.Uri a(android.net.Uri,android.content.Context) -> a
    android.net.Uri a$30807dd5(android.net.Uri,android.content.Context,java.lang.String) -> a
com.google.ads.am -> com.google.ads.aj:
com.google.ads.an -> com.google.ads.ak:
    byte[] a(byte[],java.lang.String) -> a
com.google.ads.an$a -> com.google.ads.al:
com.google.ads.ap -> com.google.ads.am:
com.google.ads.aq -> com.google.ads.an:
    char[] a -> a
    char[] b -> b
    byte[] c -> c
    byte[] d -> d
    java.lang.String a$5a238448(byte[]) -> a
    int a$36640b50(char[],byte[],int,byte[]) -> a
    byte[] a(java.lang.String) -> a
com.google.ads.ar -> com.google.ads.ao:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
com.google.ads.as -> com.google.ads.ap:
    android.net.Uri a -> a
    java.lang.String[] b -> b
com.google.ads.at -> com.google.ads.aq:
    com.google.ads.internal.a a -> a
    boolean a(android.content.Context,long) -> a
    void a(android.app.Activity) -> a
com.google.ads.at$1 -> com.google.ads.ar:
    android.content.Context a -> a
    void run() -> run
com.google.ads.at$a -> com.google.ads.as:
    java.lang.ref.WeakReference a -> a
    android.content.SharedPreferences$Editor b -> b
    void run() -> run
com.google.ads.au -> com.google.ads.at:
    byte[] a -> a
    int b -> b
    int c -> c
    int d -> d
    java.io.OutputStream e -> e
    com.google.ads.au a$f49eb2e(java.io.OutputStream) -> a
    void b() -> b
    void a() -> a
    void a(int) -> a
    void a$1cf967a4(byte[],int) -> a
    void a(int,int) -> a
    void b(int) -> b
com.google.ads.au$a -> com.google.ads.au:
com.google.ads.av -> com.google.ads.av:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int a(int,int) -> a
com.google.ads.b -> com.google.ads.aw:
    java.math.BigInteger a -> a
    java.math.BigInteger b -> b
    com.google.ads.b c -> c
    com.google.ads.b a() -> a
    java.math.BigInteger b() -> b
    java.math.BigInteger c() -> c
    java.math.BigInteger d() -> d
com.google.ads.c -> com.google.ads.ax:
    java.util.Map a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.lang.Integer e -> e
    java.lang.Integer f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.util.List i -> i
    com.google.ads.c a(java.lang.String) -> a
    boolean a() -> a
    int b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    int e() -> e
    java.util.List f() -> f
    java.util.List g() -> g
    java.util.List h() -> h
    java.util.List i() -> i
    com.google.ads.a a(org.json.JSONObject) -> a
    com.google.ads.internal.h j() -> j
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
com.google.ads.c$1 -> com.google.ads.ay:
com.google.ads.d -> com.google.ads.az:
    com.google.ads.c a -> a
    long b -> b
    boolean a() -> a
    void a(com.google.ads.c,int) -> a
    com.google.ads.c b() -> b
com.google.ads.doubleclick.DfpAdView -> com.google.ads.doubleclick.DfpAdView:
com.google.ads.doubleclick.DfpExtras -> com.google.ads.doubleclick.a:
    java.lang.String a -> a
    java.lang.String getPublisherProvidedId() -> a
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> b
com.google.ads.doubleclick.SwipeableDfpAdView -> com.google.ads.doubleclick.SwipeableDfpAdView:
com.google.ads.e -> com.google.ads.ba:
    com.google.ads.internal.d a -> a
    com.google.ads.h b -> b
    java.lang.Object c -> c
    java.lang.Thread d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.lang.Object g -> g
    boolean a() -> a
    void a(com.google.ads.c,com.google.ads.AdRequest) -> a
    boolean d() -> b
    boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long) -> a
    boolean e(com.google.ads.h) -> b
    void d(com.google.ads.h) -> a
    void a(com.google.ads.e,com.google.ads.c,com.google.ads.AdRequest) -> a
    java.lang.Object a(com.google.ads.e) -> a
    java.lang.Thread a$42ec7dd0(com.google.ads.e) -> b
    com.google.ads.internal.d b(com.google.ads.e) -> c
    boolean a(com.google.ads.e,com.google.ads.h) -> a
com.google.ads.e$1 -> com.google.ads.bb:
    com.google.ads.c a -> a
    com.google.ads.AdRequest b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$7 -> com.google.ads.bc:
    com.google.ads.c a -> a
    com.google.ads.e b -> b
    void run() -> run
com.google.ads.e$8 -> com.google.ads.bd:
    com.google.ads.h a -> a
    android.view.View b -> b
    com.google.ads.f c -> c
    com.google.ads.e d -> d
    void run() -> run
com.google.ads.f -> com.google.ads.be:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.util.List d() -> d
com.google.ads.g -> com.google.ads.bf:
com.google.ads.g$a -> com.google.ads.bg:
    com.google.ads.g$a a -> a
    com.google.ads.g$a b -> b
    com.google.ads.g$a c -> c
    com.google.ads.g$a d -> d
    com.google.ads.g$a e -> e
    com.google.ads.g$a f -> f
    com.google.ads.g$a[] g -> g
    com.google.ads.g$a[] values() -> values
    com.google.ads.g$a valueOf(java.lang.String) -> valueOf
com.google.ads.h -> com.google.ads.bh:
    com.google.ads.internal.h a -> a
    com.google.ads.f b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.g$a e -> e
    com.google.ads.e f -> f
    com.google.ads.mediation.MediationAdapter g -> g
    boolean h -> h
    boolean i -> i
    android.view.View j -> j
    java.lang.String k -> k
    com.google.ads.AdRequest l -> l
    java.util.HashMap m -> m
    void a(android.app.Activity) -> a
    void b() -> a
    boolean c() -> b
    boolean d() -> c
    com.google.ads.g$a e() -> d
    android.view.View f() -> e
    java.lang.String h() -> f
    void a$3fda91(com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
    void k() -> g
    boolean l() -> h
    com.google.ads.mediation.MediationAdapter a(com.google.ads.h) -> a
com.google.ads.h$1 -> com.google.ads.bi:
    com.google.ads.h a -> a
    void run() -> run
com.google.ads.i -> com.google.ads.bj:
    com.google.ads.h a -> a
    java.lang.String b -> b
    com.google.ads.AdRequest c -> c
    java.util.HashMap d -> d
    boolean e -> e
    java.lang.ref.WeakReference f -> f
    void run() -> run
    void a(java.lang.String,java.lang.Throwable,com.google.ads.g$a) -> a
com.google.ads.i$a -> com.google.ads.bk:
com.google.ads.internal.ActivationOverlay -> com.google.ads.a.a:
    boolean b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.google.ads.internal.i f -> f
    void setOverlayEnabled(boolean) -> a
    void setOverlayActivated(boolean) -> b
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    void setYPosition(int) -> a
    int d() -> d
    void setXPosition(int) -> b
    com.google.ads.internal.i e() -> e
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.internal.ActivationOverlay$1 -> com.google.ads.a.b:
    com.google.ads.internal.ActivationOverlay a -> a
    com.google.ads.internal.ActivationOverlay b -> b
    void run() -> run
com.google.ads.internal.AdVideoView -> com.google.ads.a.c:
    com.google.ads.internal.a b -> b
    java.lang.ref.WeakReference c -> c
    com.google.ads.internal.AdWebView d -> d
    android.widget.MediaController a -> a
    long e -> e
    android.widget.VideoView f -> f
    java.lang.String g -> g
    void b() -> a
    void setMediaControllerEnabled(boolean) -> a
    void setSrc(java.lang.String) -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void c() -> b
    void d() -> c
    void a(int) -> a
    void a(android.view.MotionEvent) -> a
    void e() -> d
    void f() -> e
com.google.ads.internal.AdVideoView$a -> com.google.ads.a.d:
    java.lang.ref.WeakReference a -> a
    void run() -> run
    void a() -> a
com.google.ads.internal.AdWebView -> com.google.ads.a.e:
    java.lang.ref.WeakReference b -> b
    com.google.ads.AdSize c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.google.ads.n a -> a
    void f() -> f
    void g() -> g
    void h() -> h
    com.google.ads.AdActivity i() -> i
    boolean j() -> j
    boolean k() -> k
    void setAdActivity(com.google.ads.AdActivity) -> a
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void loadUrl(java.lang.String) -> loadUrl
    void stopLoading() -> stopLoading
    void destroy() -> destroy
    void setAdSize(com.google.ads.AdSize) -> a
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setCustomClose(boolean) -> c
    void setIsExpandedMraid(boolean) -> d
    void a(boolean) -> e
com.google.ads.internal.AdWebView$1 -> com.google.ads.a.f:
    com.google.ads.internal.AdWebView a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.google.ads.internal.AdWebView$2 -> com.google.ads.a.g:
    com.google.ads.internal.AdWebView a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.ads.internal.a -> com.google.ads.a.h:
    com.google.ads.internal.a e -> e
    com.google.ads.util.f a -> a
    java.util.Map b -> b
    java.util.Map c -> c
    java.util.Map d -> d
    void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.util.Map) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
    com.google.ads.internal.a a() -> a
com.google.ads.internal.a$1 -> com.google.ads.a.i:
com.google.ads.internal.a$2 -> com.google.ads.a.j:
    java.lang.Object b() -> a
com.google.ads.internal.a$3 -> com.google.ads.a.k:
com.google.ads.internal.a$4 -> com.google.ads.a.l:
com.google.ads.internal.b -> com.google.ads.a.m:
    boolean a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.google.ads.internal.c -> com.google.ads.a.n:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    com.google.ads.internal.f g -> g
    com.google.ads.AdRequest h -> h
    android.webkit.WebView i -> i
    com.google.ads.l j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.util.LinkedList m -> m
    java.lang.String n -> n
    com.google.ads.AdSize o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    com.google.ads.AdRequest$ErrorCode s -> s
    boolean t -> t
    int u -> u
    java.lang.Thread v -> v
    boolean w -> w
    com.google.ads.internal.c$d x -> x
    boolean a -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a(com.google.ads.AdRequest) -> a
    void run() -> run
    java.lang.String a(java.util.Map,android.app.Activity) -> a
    java.lang.String g() -> c
    void a(com.google.ads.AdRequest$ErrorCode,boolean) -> a
    void b(boolean) -> b
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void a(com.google.ads.AdSize) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void c() -> a
    void c$1385ff() -> b
    void a(int) -> a
    void d(boolean) -> c
    void a(com.google.ads.internal.c$d) -> a
    void e(boolean) -> d
    boolean a(com.google.ads.internal.c) -> a
    com.google.ads.l b(com.google.ads.internal.c) -> b
    java.lang.String c(com.google.ads.internal.c) -> c
    android.webkit.WebView d(com.google.ads.internal.c) -> d
    java.lang.String e(com.google.ads.internal.c) -> e
    com.google.ads.AdSize f(com.google.ads.internal.c) -> f
com.google.ads.internal.c$1 -> com.google.ads.a.o:
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$2 -> com.google.ads.a.p:
    com.google.ads.c a -> a
    com.google.ads.internal.c b -> b
    void run() -> run
com.google.ads.internal.c$3 -> com.google.ads.a.q:
    int[] a -> a
com.google.ads.internal.c$a -> com.google.ads.a.r:
    com.google.ads.internal.d a -> a
    android.webkit.WebView b -> b
    com.google.ads.internal.f c -> c
    com.google.ads.AdRequest$ErrorCode d -> d
    boolean e -> e
    void run() -> run
com.google.ads.internal.c$b -> com.google.ads.a.s:
    com.google.ads.internal.c a -> a
com.google.ads.internal.c$c -> com.google.ads.a.t:
    java.lang.String b -> b
    java.lang.String c -> c
    android.webkit.WebView d -> d
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$d -> com.google.ads.a.u:
    com.google.ads.internal.c$d a -> a
    com.google.ads.internal.c$d b -> b
    com.google.ads.internal.c$d c -> c
    com.google.ads.internal.c$d d -> d
    java.lang.String e -> e
    com.google.ads.internal.c$d[] f -> f
    com.google.ads.internal.c$d[] values() -> values
    com.google.ads.internal.c$d valueOf(java.lang.String) -> valueOf
com.google.ads.internal.c$e -> com.google.ads.a.v:
    com.google.ads.internal.d b -> b
    android.webkit.WebView c -> c
    java.util.LinkedList d -> d
    int e -> e
    boolean f -> f
    java.lang.String g -> g
    com.google.ads.AdSize h -> h
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.d -> com.google.ads.a.w:
    java.lang.Object a -> a
    com.google.ads.n b -> b
    com.google.ads.internal.c c -> c
    com.google.ads.AdRequest d -> d
    com.google.ads.internal.g e -> e
    com.google.ads.internal.AdWebView f -> f
    com.google.ads.internal.i g -> g
    boolean h -> h
    long i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.content.SharedPreferences o -> o
    long p -> p
    com.google.ads.af q -> q
    boolean r -> r
    java.util.LinkedList s -> s
    java.util.LinkedList t -> t
    java.util.LinkedList u -> u
    int v -> v
    java.lang.Boolean w -> w
    com.google.ads.d x -> x
    com.google.ads.e y -> y
    com.google.ads.f z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    void a() -> a
    void a(java.lang.String) -> a
    java.lang.String c() -> b
    java.lang.String d() -> c
    void e() -> d
    void f() -> e
    void g() -> f
    com.google.ads.n i() -> g
    com.google.ads.d j() -> h
    com.google.ads.internal.c k() -> i
    com.google.ads.internal.AdWebView l() -> j
    com.google.ads.internal.i m() -> k
    com.google.ads.internal.g n() -> l
    void a(int) -> a
    int o() -> m
    long p() -> n
    boolean q() -> x
    boolean r() -> o
    boolean t() -> p
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void a(com.google.ads.c) -> a
    void a$413ecd99(android.view.View,com.google.ads.h,com.google.ads.f) -> a
    void b(com.google.ads.c) -> b
    void u() -> q
    void v() -> r
    void w() -> s
    void a$16da05f7() -> t
    void x() -> u
    void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String) -> a
    void y() -> y
    void A() -> v
    void a(long) -> a
    void a(boolean) -> a
    void a(android.view.View) -> a
    void a(float) -> a
    void b(long) -> b
    void D() -> z
    void E() -> w
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(java.util.LinkedList) -> a
    void b(boolean) -> b
    void a$68797ecb(boolean,int,int,int,int) -> a
    void a(int,int,int,int) -> a
com.google.ads.internal.e -> com.google.ads.a.x:
    java.lang.String a -> a
    java.util.HashMap b -> b
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
com.google.ads.internal.f -> com.google.ads.a.y:
    com.google.ads.l a -> a
    com.google.ads.internal.f$a b -> b
    boolean c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.Thread f -> f
    void a() -> a
    void a(java.net.HttpURLConnection) -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void run() -> run
com.google.ads.internal.f$1 -> com.google.ads.a.z:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.f$a -> com.google.ads.a.aa:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.g -> com.google.ads.a.ab:
    java.util.LinkedList a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.LinkedList e -> e
    long f -> f
    long g -> g
    long h -> h
    long i -> i
    long j -> j
    boolean k -> k
    boolean l -> l
    java.lang.String m -> m
    long n -> n
    java.util.LinkedList o -> o
    java.util.LinkedList p -> p
    void a() -> a
    void b() -> b
    void c() -> c
    void a(com.google.ads.g$a) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    long j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    long m() -> m
    long n() -> n
    long o() -> o
    long p() -> p
    void q() -> q
    void r() -> r
    long s() -> s
    void t() -> t
    void u() -> u
    long v() -> v
    void w() -> w
    void x() -> x
    boolean y() -> y
    void z() -> z
    boolean A() -> A
    void B() -> B
    void C() -> C
    java.lang.String D() -> D
    void a(java.lang.String) -> a
    long E() -> E
com.google.ads.internal.h -> com.google.ads.a.ac:
    com.google.ads.AdSize b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.internal.h a -> a
    com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context) -> a
    com.google.ads.internal.h a(com.google.ads.AdSize) -> a
    boolean a() -> a
    boolean b() -> b
    com.google.ads.AdSize c() -> c
    void b(com.google.ads.AdSize) -> b
    void a$1385ff() -> d
com.google.ads.internal.i -> com.google.ads.a.ad:
    com.google.ads.internal.a c -> c
    com.google.ads.internal.d a -> a
    java.util.Map d -> d
    boolean b -> b
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void a$1385ff() -> a
    void b$1385ff() -> b
    void c$1385ff() -> c
    void d$1385ff() -> d
    boolean a() -> e
com.google.ads.internal.j -> com.google.ads.a.ae:
    java.lang.String a -> a
    android.content.Context b -> b
    void run() -> run
com.google.ads.internal.j$a -> com.google.ads.a.af:
    java.lang.String a -> a
    org.json.JSONObject a() -> a
com.google.ads.internal.k -> com.google.ads.a.ag:
    byte[] a -> a
    android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d) -> a
com.google.ads.internal.k$a -> com.google.ads.a.ah:
    android.gesture.GestureStore a -> a
    android.app.Activity b -> b
    com.google.ads.internal.d c -> c
    void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture) -> onGesturePerformed
    com.google.ads.internal.d a(com.google.ads.internal.k$a) -> a
    android.app.Activity b(com.google.ads.internal.k$a) -> b
com.google.ads.internal.k$a$1 -> com.google.ads.a.ai:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$2 -> com.google.ads.a.aj:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$3 -> com.google.ads.a.ak:
    java.lang.String a -> a
    com.google.ads.internal.k$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.j -> com.google.ads.bl:
    com.google.ads.h a -> a
com.google.ads.k -> com.google.ads.bm:
    com.google.ads.h a -> a
com.google.ads.l -> com.google.ads.bn:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
com.google.ads.m -> com.google.ads.bo:
    com.google.ads.m d -> d
    com.google.ads.util.i$c a -> a
    com.google.ads.util.i$b b -> b
    com.google.ads.util.i$b c -> c
    com.google.ads.m a() -> a
com.google.ads.m$a -> com.google.ads.bp:
    com.google.ads.util.i$c a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
    com.google.ads.util.i$c d -> d
    com.google.ads.util.i$c e -> e
    com.google.ads.util.i$c f -> f
    com.google.ads.util.i$c g -> g
    com.google.ads.util.i$c h -> h
    com.google.ads.util.i$c i -> i
    com.google.ads.util.i$c j -> j
    com.google.ads.util.i$c k -> k
    com.google.ads.util.i$c l -> l
    com.google.ads.util.i$c m -> m
    com.google.ads.util.i$c n -> n
    com.google.ads.util.i$c o -> o
com.google.ads.mediation.MediationAdRequest -> com.google.ads.b.a:
    com.google.ads.AdRequest a -> a
    boolean b -> b
    boolean c -> c
com.google.ads.mediation.MediationAdapter -> com.google.ads.b.b:
    java.lang.Class getAdditionalParametersType() -> a
    java.lang.Class getServerParametersType() -> b
com.google.ads.mediation.MediationBannerAdapter -> com.google.ads.b.c:
com.google.ads.mediation.MediationInterstitialAdapter -> com.google.ads.b.d:
com.google.ads.mediation.MediationServerParameters -> com.google.ads.b.e:
    void load(java.util.Map) -> a
com.google.ads.mediation.MediationServerParameters$MappingException -> com.google.ads.b.f:
com.google.ads.mediation.MediationServerParameters$Parameter -> com.google.ads.b.g:
    java.lang.String name() -> a
    boolean required() -> b
com.google.ads.mediation.NetworkExtras -> com.google.ads.b.h:
com.google.ads.mediation.admob.AdMobAdapterExtras -> com.google.ads.b.a.a:
    boolean a -> a
    java.util.Map b -> b
    java.util.Map getExtras() -> c
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> b
com.google.ads.n -> com.google.ads.bq:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$b b -> b
    com.google.ads.util.i$d c -> c
    com.google.ads.util.i$b d -> d
    com.google.ads.util.i$b e -> e
    com.google.ads.util.i$b f -> f
    com.google.ads.util.i$b g -> g
    com.google.ads.util.i$b h -> h
    com.google.ads.util.i$b i -> i
    com.google.ads.util.i$b j -> j
    com.google.ads.util.i$b k -> k
    com.google.ads.util.i$c l -> l
    com.google.ads.util.i$c m -> m
    com.google.ads.util.i$c n -> n
    com.google.ads.util.i$c o -> o
    com.google.ads.util.i$c p -> p
    com.google.ads.util.i$c q -> q
    com.google.ads.util.i$c r -> r
    com.google.ads.util.i$c s -> s
    com.google.ads.util.i$c t -> t
    boolean a() -> a
    boolean b() -> b
com.google.ads.o -> com.google.ads.br:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.p -> com.google.ads.bs:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.q -> com.google.ads.bt:
    com.google.ads.internal.a a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.r -> com.google.ads.bu:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.s -> com.google.ads.bv:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.searchads.SearchAdRequest -> com.google.ads.c.a:
    java.lang.String a -> b
    int b -> c
    int c -> d
    int d -> e
    int e -> f
    int f -> g
    int g -> h
    java.lang.String h -> i
    int i -> j
    int j -> k
    com.google.ads.searchads.SearchAdRequest$BorderType k -> l
    int l -> m
    java.lang.String m -> n
    java.util.Map getRequestMap(android.content.Context) -> a
    java.lang.String a(int) -> a
com.google.ads.searchads.SearchAdRequest$BorderType -> com.google.ads.c.b:
    com.google.ads.searchads.SearchAdRequest$BorderType NONE -> a
    com.google.ads.searchads.SearchAdRequest$BorderType DASHED -> b
    com.google.ads.searchads.SearchAdRequest$BorderType DOTTED -> c
    com.google.ads.searchads.SearchAdRequest$BorderType SOLID -> d
    java.lang.String a -> e
    com.google.ads.searchads.SearchAdRequest$BorderType[] b -> f
    com.google.ads.searchads.SearchAdRequest$BorderType[] values() -> values
    com.google.ads.searchads.SearchAdRequest$BorderType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.t -> com.google.ads.bw:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.u -> com.google.ads.bx:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.util.AdUtil -> com.google.ads.util.AdUtil:
    int a -> a
    java.lang.Boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.media.AudioManager f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    boolean a(android.content.Intent,android.content.Context) -> a
    java.lang.String a(java.lang.Readable) -> a
    int a(java.lang.String) -> b
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    boolean b(android.content.Context) -> b
    boolean a(int,int,java.lang.String) -> a
    boolean c(android.content.Context) -> c
    boolean c() -> c
    boolean a(android.net.Uri) -> a
    java.lang.String b(java.lang.String) -> a
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    com.google.ads.util.AdUtil$a g(android.content.Context) -> g
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.util.HashMap a(android.location.Location) -> a
    java.util.HashMap b(android.net.Uri) -> b
    boolean d() -> d
    void a(boolean) -> a
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    void a(android.webkit.WebView) -> a
    void a(java.net.HttpURLConnection,android.content.Context) -> a
    java.lang.String a(java.util.Map) -> a
    org.json.JSONObject b(java.util.Map) -> b
    org.json.JSONArray a(java.util.Set) -> a
    int a(android.content.Context,int) -> a
com.google.ads.util.AdUtil$UserActivityReceiver -> com.google.ads.util.AdUtil$UserActivityReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.ads.util.AdUtil$a -> com.google.ads.util.a:
    com.google.ads.util.AdUtil$a a -> a
    com.google.ads.util.AdUtil$a b -> b
    com.google.ads.util.AdUtil$a c -> c
    com.google.ads.util.AdUtil$a d -> d
    com.google.ads.util.AdUtil$a e -> e
    com.google.ads.util.AdUtil$a f -> f
    com.google.ads.util.AdUtil$a[] g -> g
    com.google.ads.util.AdUtil$a[] values() -> values
    com.google.ads.util.AdUtil$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.IcsUtil -> com.google.ads.util.b:
com.google.ads.util.IcsUtil$IcsAdWebView -> com.google.ads.util.c:
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.util.IcsUtil$a -> com.google.ads.util.d:
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
com.google.ads.util.a -> com.google.ads.util.e:
    boolean a -> a
    void a(boolean,java.lang.String) -> a
    void b(boolean) -> a
    void b(boolean,java.lang.String) -> b
    void b(java.lang.Object) -> a
    void a(java.lang.Object,java.lang.Object) -> a
    void a(java.lang.String) -> a
    void c(boolean,java.lang.String) -> c
com.google.ads.util.a$a -> com.google.ads.util.f:
com.google.ads.util.b -> com.google.ads.util.g:
    com.google.ads.util.b$b a -> a
    int b -> b
    void a$4ae80d28() -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String) -> c
    void c(java.lang.String,java.lang.Throwable) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void d(java.lang.String,java.lang.Throwable) -> d
    boolean a(java.lang.String,int) -> a
com.google.ads.util.b$a -> com.google.ads.util.h:
    com.google.ads.util.b$a a -> a
    com.google.ads.util.b$a b -> b
    com.google.ads.util.b$a c -> c
    com.google.ads.util.b$a d -> d
    com.google.ads.util.b$a e -> e
    int f -> f
    com.google.ads.util.b$a[] g -> g
    com.google.ads.util.b$a[] values() -> values
    com.google.ads.util.b$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.b$b -> com.google.ads.util.i:
com.google.ads.util.c -> com.google.ads.util.j:
    boolean a -> a
    byte[] a(java.lang.String) -> a
com.google.ads.util.c$a -> com.google.ads.util.k:
    byte[] a -> a
    int b -> b
com.google.ads.util.c$b -> com.google.ads.util.l:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a$7dcd25fc$1cf967a0(byte[],int) -> a
com.google.ads.util.d -> com.google.ads.util.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.google.ads.util.d d -> d
    com.google.ads.util.d e -> e
    com.google.ads.util.d f -> f
    boolean equals(java.lang.Object) -> equals
    boolean a(java.lang.String,java.lang.String) -> a
    int hashCode() -> hashCode
com.google.ads.util.e -> com.google.ads.util.n:
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    int a(android.content.Context,float,int) -> a
com.google.ads.util.f -> com.google.ads.util.o:
    java.lang.Object b() -> a
com.google.ads.util.g -> com.google.ads.util.p:
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
com.google.ads.util.g$1 -> com.google.ads.util.q:
    int[] a -> a
com.google.ads.util.g$a -> com.google.ads.util.r:
    com.google.ads.n a -> a
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean) -> a
com.google.ads.util.g$a$1 -> com.google.ads.util.s:
    android.webkit.JsResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$2 -> com.google.ads.util.t:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$3 -> com.google.ads.util.u:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$4 -> com.google.ads.util.v:
    android.webkit.JsPromptResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$5 -> com.google.ads.util.w:
    android.webkit.JsPromptResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$6 -> com.google.ads.util.x:
    android.webkit.JsPromptResult a -> a
    android.widget.EditText b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$b -> com.google.ads.util.y:
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    android.webkit.WebResourceResponse a(java.lang.String,android.content.Context) -> a
com.google.ads.util.i -> com.google.ads.util.z:
    java.lang.Object a -> a
    int b -> b
    java.util.HashMap c -> c
    int u -> u
    java.util.ArrayList d -> d
    void finalize() -> finalize
    java.lang.String toString() -> toString
    void a(com.google.ads.util.i,com.google.ads.util.i$a) -> a
com.google.ads.util.i$a -> com.google.ads.util.aa:
    java.lang.Object a -> a
    java.lang.String b -> b
    com.google.ads.util.i c -> c
    java.lang.String toString() -> toString
com.google.ads.util.i$b -> com.google.ads.util.ab:
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$c -> com.google.ads.util.ac:
    boolean e -> e
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    void a(java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$d -> com.google.ads.util.ad:
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.v -> com.google.ads.by:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.w -> com.google.ads.bz:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.x -> com.google.ads.ca:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
    void a(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> a
    void b(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> b
    void c(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> c
com.google.ads.y -> com.google.ads.cb:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.z -> com.google.ads.cc:
    com.google.ads.AdActivity$StaticMethodWrapper a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.softwaresemantics.diyglsllwp.AboutDialog -> com.softwaresemantics.diyglsllwp.AboutDialog:
    android.content.Context mContext -> mContext
    void onCreate(android.os.Bundle) -> onCreate
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    java.lang.String readRawTextFile(int) -> readRawTextFile
com.softwaresemantics.diyglsllwp.AlmostFSResStrategy -> com.softwaresemantics.diyglsllwp.AlmostFSResStrategy:
    android.content.Context context -> context
    int reservedHeight -> reservedHeight
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.softwaresemantics.diyglsllwp.BuildConfig -> com.softwaresemantics.diyglsllwp.BuildConfig:
    boolean DEBUG -> DEBUG
com.softwaresemantics.diyglsllwp.ClickHandler -> com.softwaresemantics.diyglsllwp.ClickHandler:
    void onClick(int,int) -> onClick
com.softwaresemantics.diyglsllwp.DIYGslSurface -> com.softwaresemantics.diyglsllwp.DIYGslSurface:
    java.lang.String OPEN_GL_ES_2_0_REQUIRED -> OPEN_GL_ES_2_0_REQUIRED
    java.lang.String ERROR_LOADING_SHADER -> ERROR_LOADING_SHADER
    java.lang.String HARDWARE_TOO_SLOW_FOR_SHADER -> HARDWARE_TOO_SLOW_FOR_SHADER
    java.lang.String DO_PROCESS_SCREEN_SHOT -> DO_PROCESS_SCREEN_SHOT
    java.lang.String NO_EXCEPTION_MSG -> NO_EXCEPTION_MSG
    java.lang.String shaderProgram -> shaderProgram
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    boolean timeDithering -> timeDithering
    int timeDitheringFactor -> timeDitheringFactor
    int nbRender -> nbRender
    boolean touchEnabled -> touchEnabled
    com.badlogic.gdx.graphics.glutils.FrameBuffer m_fbo -> m_fbo
    com.badlogic.gdx.graphics.g2d.TextureRegion m_fboRegion -> m_fboRegion
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> batch
    int renderSurfaceWidth -> renderSurfaceWidth
    int renderSurfaceHeight -> renderSurfaceHeight
    float m_fboScaler -> m_fboScaler
    float epsilon -> epsilon
    int effectiveSurfaceWidth -> effectiveSurfaceWidth
    int effectiveSurfaceHeight -> effectiveSurfaceHeight
    float mouseCursorX -> mouseCursorX
    float mouseCursorY -> mouseCursorY
    float time -> time
    boolean doscreenShotRequest -> doscreenShotRequest
    com.softwaresemantics.diyglsllwp.ScreenshotProcessor screenshotProc -> screenshotProc
    java.lang.String errorMsg -> errorMsg
    boolean showFPS -> showFPS
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.softwaresemantics.diyglsllwp.ClickHandler listener -> listener
    com.softwaresemantics.diyglsllwp.NativeCallback nativeCallback -> nativeCallback
    boolean renderGuard -> renderGuard
    boolean needsGL20() -> needsGL20
    void updatePrefs(boolean,int,boolean,boolean,boolean,int) -> updatePrefs
    void updateShader(java.lang.String) -> updateShader
    void create() -> create
    void updateRenderSurfaceSize() -> updateRenderSurfaceSize
    void setupShader() -> setupShader
    void render() -> render
    void displayErrorMsg() -> displayErrorMsg
    boolean handleErrorAndSlowHardware() -> handleErrorAndSlowHardware
    void initRenderFramebufferIfNeeded() -> initRenderFramebufferIfNeeded
    void forceNewRenderBuffer() -> forceNewRenderBuffer
    void resize(int,int) -> resize
    void renderShaderonMesh() -> renderShaderonMesh
    com.badlogic.gdx.graphics.Mesh genFullViewRectangle() -> genFullViewRectangle
    void dispose() -> dispose
    void pause() -> pause
    void freeRessourcesIfAny() -> freeRessourcesIfAny
    void resume() -> resume
    void reserveRessources() -> reserveRessources
    void previewStateChange(boolean) -> previewStateChange
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
    boolean isDoscreenShotRequest() -> isDoscreenShotRequest
    void setDoscreenShotRequest(boolean) -> setDoscreenShotRequest
    com.softwaresemantics.diyglsllwp.ScreenshotProcessor getScreenshotProc() -> getScreenshotProc
    void setScreenshotProc(com.softwaresemantics.diyglsllwp.ScreenshotProcessor) -> setScreenshotProc
    void addClickHandler(com.softwaresemantics.diyglsllwp.ClickHandler) -> addClickHandler
    void offsetChange(float,float,float,float,int,int) -> offsetChange
    void addNativeCallback(com.softwaresemantics.diyglsllwp.NativeCallback) -> addNativeCallback
    boolean isRenderGuard() -> isRenderGuard
    void setRenderGuard(boolean) -> setRenderGuard
com.softwaresemantics.diyglsllwp.DIYGslSurface$CustomShader -> com.softwaresemantics.diyglsllwp.a:
com.softwaresemantics.diyglsllwp.DIYGslSurface$HerokuSampleShader -> com.softwaresemantics.diyglsllwp.b:
com.softwaresemantics.diyglsllwp.DialogUtils -> com.softwaresemantics.diyglsllwp.DialogUtils:
    void inputDialog(android.content.Context,java.lang.String,boolean,com.softwaresemantics.diyglsllwp.InputDialogCallback) -> inputDialog
com.softwaresemantics.diyglsllwp.DialogUtils$1 -> com.softwaresemantics.diyglsllwp.c:
    android.widget.EditText val$input -> a
    com.softwaresemantics.diyglsllwp.InputDialogCallback val$callback -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.softwaresemantics.diyglsllwp.DialogUtils$2 -> com.softwaresemantics.diyglsllwp.d:
    void onClick(android.content.DialogInterface,int) -> onClick
com.softwaresemantics.diyglsllwp.Entry -> com.softwaresemantics.diyglsllwp.Entry:
    java.lang.String WAITING_FOR_DOWNLOAD -> WAITING_FOR_DOWNLOAD
    java.lang.String refId -> refId
    java.lang.String url -> url
    java.lang.String description -> description
    boolean selected -> selected
    java.lang.String getRefId() -> getRefId
    void setRefId(java.lang.String) -> setRefId
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String toString() -> toString
    void setSelected(boolean) -> setSelected
    boolean isSelected() -> isSelected
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getUrl() -> getUrl
com.softwaresemantics.diyglsllwp.ImageDownloader -> com.softwaresemantics.diyglsllwp.ImageDownloader:
    java.lang.String LOG_TAG -> LOG_TAG
    int HARD_CACHE_CAPACITY -> HARD_CACHE_CAPACITY
    int DELAY_BEFORE_PURGE -> DELAY_BEFORE_PURGE
    int IO_BUFFER_SIZE -> IO_BUFFER_SIZE
    android.content.Context context -> context
    java.util.HashMap sHardBitmapCache -> sHardBitmapCache
    java.util.concurrent.ConcurrentHashMap sSoftBitmapCache -> sSoftBitmapCache
    android.os.Handler purgeHandler -> purgeHandler
    java.lang.Runnable purger -> purger
    void download(java.lang.String,android.widget.ImageView) -> download
    void forceDownload(java.lang.String,android.widget.ImageView) -> forceDownload
    boolean cancelPotentialDownload(java.lang.String,android.widget.ImageView) -> cancelPotentialDownload
    com.softwaresemantics.diyglsllwp.ImageDownloader$BitmapDownloaderTask getBitmapDownloaderTask(android.widget.ImageView) -> getBitmapDownloaderTask
    android.graphics.Bitmap downloadBitmap(java.lang.String) -> downloadBitmap
    void addBitmapToCache(java.lang.String,android.graphics.Bitmap) -> addBitmapToCache
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> getBitmapFromCache
    void clearCache() -> clearCache
    void resetPurgeTimer() -> resetPurgeTimer
    java.util.concurrent.ConcurrentHashMap access$0() -> access$0
    void access$1(com.softwaresemantics.diyglsllwp.ImageDownloader,java.lang.String,android.graphics.Bitmap) -> access$1
    com.softwaresemantics.diyglsllwp.ImageDownloader$BitmapDownloaderTask access$2(android.widget.ImageView) -> access$2
    android.content.Context access$3() -> access$3
com.softwaresemantics.diyglsllwp.ImageDownloader$1 -> com.softwaresemantics.diyglsllwp.e:
    com.softwaresemantics.diyglsllwp.ImageDownloader this$0 -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.softwaresemantics.diyglsllwp.ImageDownloader$2 -> com.softwaresemantics.diyglsllwp.f:
    com.softwaresemantics.diyglsllwp.ImageDownloader this$0 -> a
    void run() -> run
com.softwaresemantics.diyglsllwp.ImageDownloader$BitmapDownloaderTask -> com.softwaresemantics.diyglsllwp.g:
    java.lang.String url -> b
    java.lang.ref.WeakReference imageViewReference -> c
    com.softwaresemantics.diyglsllwp.ImageDownloader this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$2(com.softwaresemantics.diyglsllwp.ImageDownloader$BitmapDownloaderTask) -> a
com.softwaresemantics.diyglsllwp.ImageDownloader$DownloadedDrawable -> com.softwaresemantics.diyglsllwp.h:
    java.lang.ref.WeakReference bitmapDownloaderTaskReference -> a
    com.softwaresemantics.diyglsllwp.ImageDownloader$BitmapDownloaderTask getBitmapDownloaderTask() -> a
com.softwaresemantics.diyglsllwp.ImageDownloader$FlushedInputStream -> com.softwaresemantics.diyglsllwp.i:
    long skip(long) -> skip
com.softwaresemantics.diyglsllwp.InputDialogCallback -> com.softwaresemantics.diyglsllwp.InputDialogCallback:
    void inputValue(java.lang.String) -> inputValue
com.softwaresemantics.diyglsllwp.InternetAsyncGalleryTask -> com.softwaresemantics.diyglsllwp.InternetAsyncGalleryTask:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity parentActivity -> parentActivity
    int askedPageIndex -> askedPageIndex
    java.lang.String doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    int access$2(com.softwaresemantics.diyglsllwp.InternetAsyncGalleryTask) -> access$2
com.softwaresemantics.diyglsllwp.InternetAsyncGalleryTask$UINotifier -> com.softwaresemantics.diyglsllwp.j:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity parentActivity -> b
    com.softwaresemantics.diyglsllwp.InternetAsyncGalleryTask this$0 -> a
    void run() -> run
com.softwaresemantics.diyglsllwp.InternetAsyncShaderTask -> com.softwaresemantics.diyglsllwp.InternetAsyncShaderTask:
    java.lang.String CODE -> CODE
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity parentActivity -> parentActivity
    int rowIndex -> rowIndex
    java.lang.String doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.softwaresemantics.diyglsllwp.InternetAsyncShaderTask$ShaderLauncher -> com.softwaresemantics.diyglsllwp.k:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity parentActivity -> b
    java.lang.String shader -> c
    int rowIndex -> d
    com.softwaresemantics.diyglsllwp.InternetAsyncShaderTask this$0 -> a
    void run() -> run
com.softwaresemantics.diyglsllwp.LiveWallpaper -> com.softwaresemantics.diyglsllwp.LiveWallpaper:
    java.lang.String RELOAD_SHADER -> RELOAD_SHADER
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    java.lang.String shaderGLSL -> shaderGLSL
    com.softwaresemantics.diyglsllwp.DIYGslSurface lwpSurface -> lwpSurface
    com.softwaresemantics.diyglsllwp.LiveWallpaperPrefs prefs -> prefs
    com.softwaresemantics.diyglsllwp.LiveWallpaper instance -> instance
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity galleryAppInstance -> galleryAppInstance
    void onCreateApplication() -> onCreateApplication
    void initGDX() -> initGDX
    void reloadShader() -> reloadShader
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void reloadShaderIfNeeded() -> reloadShaderIfNeeded
    void notifyCfgChange() -> notifyCfgChange
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void notifyShaderChange(android.content.Context) -> notifyShaderChange
    boolean isLWPRunning(android.content.Context) -> isLWPRunning
    void onRequirementFailure(java.lang.String) -> onRequirementFailure
    void onResumeGDX() -> onResumeGDX
com.softwaresemantics.diyglsllwp.LiveWallpaper$MyLiveWallpaperListener -> com.softwaresemantics.diyglsllwp.LiveWallpaper$MyLiveWallpaperListener:
    com.softwaresemantics.diyglsllwp.LiveWallpaper this$0 -> this$0
    void offsetChange(float,float,float,float,int,int) -> offsetChange
    void previewStateChange(boolean) -> previewStateChange
com.softwaresemantics.diyglsllwp.LiveWallpaperPrefs -> com.softwaresemantics.diyglsllwp.LiveWallpaperPrefs:
    java.lang.String TIME_DITHERING_FACTOR -> TIME_DITHERING_FACTOR
    java.lang.String TIME_DITHERING -> TIME_DITHERING
    java.lang.String REDUCTION_FACTOR -> REDUCTION_FACTOR
    java.lang.String TOUCH -> TOUCH
    java.lang.String DISPLAY_FPS_LWP -> DISPLAY_FPS_LWP
    java.lang.String REDUCED_RESOLUTION -> REDUCED_RESOLUTION
    java.lang.String TIME_DITHERING_FACTOR_2 -> TIME_DITHERING_FACTOR_2
    java.lang.String REDUCTION_FACTOR_8 -> REDUCTION_FACTOR_8
    android.content.Context context -> context
    android.content.SharedPreferences prefs -> prefs
    void loadLWPPrefs() -> loadLWPPrefs
    boolean isReductionFactorEnabled() -> isReductionFactorEnabled
    boolean isTouchEnabled() -> isTouchEnabled
    boolean isDisplayFPSLWP() -> isDisplayFPSLWP
    int getReductionFactor() -> getReductionFactor
    boolean isTimeDithering() -> isTimeDithering
    java.lang.Integer getTimeDitheringFactor() -> getTimeDitheringFactor
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
com.softwaresemantics.diyglsllwp.LivewallpaperSettings -> com.softwaresemantics.diyglsllwp.LivewallpaperSettings:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.softwaresemantics.diyglsllwp.MyBroadCastReceiver -> com.softwaresemantics.diyglsllwp.MyBroadCastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.softwaresemantics.diyglsllwp.NativeCallback -> com.softwaresemantics.diyglsllwp.NativeCallback:
    void onRequirementFailure(java.lang.String) -> onRequirementFailure
    void onResumeGDX() -> onResumeGDX
com.softwaresemantics.diyglsllwp.PreviewResStrategy -> com.softwaresemantics.diyglsllwp.PreviewResStrategy:
    android.content.Context context -> context
    int reservedHeight -> reservedHeight
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.softwaresemantics.diyglsllwp.R -> com.softwaresemantics.diyglsllwp.R:
com.softwaresemantics.diyglsllwp.R$array -> com.softwaresemantics.diyglsllwp.R$array:
    int reductionFactor -> reductionFactor
    int reductionFactorValues -> reductionFactorValues
com.softwaresemantics.diyglsllwp.R$attr -> com.softwaresemantics.diyglsllwp.R$attr:
com.softwaresemantics.diyglsllwp.R$drawable -> com.softwaresemantics.diyglsllwp.R$drawable:
    int diyglsllwp_full -> diyglsllwp_full
    int ic_diyglsllwp -> ic_diyglsllwp
    int loading -> loading
com.softwaresemantics.diyglsllwp.R$id -> com.softwaresemantics.diyglsllwp.R$id:
    int aPropos -> aPropos
    int ad -> ad
    int buttonDownload -> buttonDownload
    int buttonEdit -> buttonEdit
    int buttonViewFS -> buttonViewFS
    int goToPage -> goToPage
    int goToShader -> goToShader
    int icon -> icon
    int info_text -> info_text
    int label -> label
    int legal_text -> legal_text
    int nextPageButton -> nextPageButton
    int prefsLWP -> prefsLWP
    int prevPageButton -> prevPageButton
    int quit -> quit
    int statusLabel -> statusLabel
com.softwaresemantics.diyglsllwp.R$layout -> com.softwaresemantics.diyglsllwp.R$layout:
    int about -> about
    int main -> main
    int pref_ad -> pref_ad
    int rowlayout -> rowlayout
com.softwaresemantics.diyglsllwp.R$menu -> com.softwaresemantics.diyglsllwp.R$menu:
    int option -> option
com.softwaresemantics.diyglsllwp.R$raw -> com.softwaresemantics.diyglsllwp.R$raw:
    int info -> info
    int legal -> legal
com.softwaresemantics.diyglsllwp.R$string -> com.softwaresemantics.diyglsllwp.R$string:
    int aPropos -> aPropos
    int app_name -> app_name
    int cancel -> cancel
    int displayFPSLWP -> displayFPSLWP
    int download -> download
    int edit -> edit
    int enableTouch -> enableTouch
    int errorLaunchingLWPSelector -> errorLaunchingLWPSelector
    int exiting -> exiting
    int inputGalleryPage -> inputGalleryPage
    int inputShaderRef -> inputShaderRef
    int loadingGalleryPage -> loadingGalleryPage
    int loadingShader -> loadingShader
    int loadingStatus -> loadingStatus
    int manualSelectLWP -> manualSelectLWP
    int moveToPage -> moveToPage
    int moveToShader -> moveToShader
    int networkRequired -> networkRequired
    int next_page -> next_page
    int ok -> ok
    int openGLRequirementsFailure -> openGLRequirementsFailure
    int preferencesForLWP -> preferencesForLWP
    int previous_page -> previous_page
    int quit -> quit
    int reducedResolution -> reducedResolution
    int reductionFactor -> reductionFactor
    int setAsLWP -> setAsLWP
    int timeDithering -> timeDithering
    int timeDitheringFactor -> timeDitheringFactor
    int title_activity_settings -> title_activity_settings
    int title_app -> title_app
    int unableAccessExtStorage -> unableAccessExtStorage
    int viewFS -> viewFS
com.softwaresemantics.diyglsllwp.R$xml -> com.softwaresemantics.diyglsllwp.R$xml:
    int livewallpaper -> livewallpaper
    int prefs -> prefs
com.softwaresemantics.diyglsllwp.RenderTarget -> com.softwaresemantics.diyglsllwp.RenderTarget:
    int textureIndex -> textureIndex
    int frameBufferIndex -> frameBufferIndex
    int renderBufferIndex -> renderBufferIndex
com.softwaresemantics.diyglsllwp.ScreenshotProcessor -> com.softwaresemantics.diyglsllwp.ScreenshotProcessor:
    void doProcessScreenShot() -> doProcessScreenShot
com.softwaresemantics.diyglsllwp.ShaderEntryArrayAdapter -> com.softwaresemantics.diyglsllwp.ShaderEntryArrayAdapter:
    android.content.Context context -> context
    com.softwaresemantics.diyglsllwp.Entry[] values -> values
    com.softwaresemantics.diyglsllwp.ImageDownloader imageDownloader -> imageDownloader
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.softwaresemantics.diyglsllwp.ShaderEntryArrayAdapter) -> access$0
com.softwaresemantics.diyglsllwp.ShaderEntryArrayAdapter$1 -> com.softwaresemantics.diyglsllwp.l:
    com.softwaresemantics.diyglsllwp.ShaderEntryArrayAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.softwaresemantics.diyglsllwp.ShaderEntryArrayAdapter$2 -> com.softwaresemantics.diyglsllwp.m:
    com.softwaresemantics.diyglsllwp.ShaderEntryArrayAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.softwaresemantics.diyglsllwp.ShaderEntryArrayAdapter$3 -> com.softwaresemantics.diyglsllwp.n:
    com.softwaresemantics.diyglsllwp.ShaderEntryArrayAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.softwaresemantics.diyglsllwp.ShaderGalleryActivity -> com.softwaresemantics.diyglsllwp.ShaderGalleryActivity:
    java.lang.String HTTP_GLSL_HEROKU_COM_ITEM -> HTTP_GLSL_HEROKU_COM_ITEM
    java.lang.String COM_SOFTWARESEMANTICS_DIYGLSLLWP_PREFS_LWP -> COM_SOFTWARESEMANTICS_DIYGLSLLWP_PREFS_LWP
    java.lang.String DIY_GLSL_LWP_DIR_NAME -> DIY_GLSL_LWP_DIR_NAME
    java.lang.String COM_HEROKU_GLSL -> COM_HEROKU_GLSL
    int _200_PX -> _200_PX
    int FS_BUTTON_HEIGHT -> FS_BUTTON_HEIGHT
    int REQUEST_SET_LIVE_WALLPAPER -> REQUEST_SET_LIVE_WALLPAPER
    java.lang.String CURRENT_FRAG_SHADER_PROGRAM -> CURRENT_FRAG_SHADER_PROGRAM
    java.lang.String CURRENT_VERT_SHADER_PROGRAM -> CURRENT_VERT_SHADER_PROGRAM
    java.lang.String currentFragShaderProgram -> currentFragShaderProgram
    com.softwaresemantics.diyglsllwp.Entry[] values -> values
    com.softwaresemantics.diyglsllwp.ShaderEntryArrayAdapter adapter -> adapter
    int currentPageIndex -> currentPageIndex
    int askedPageIndex -> askedPageIndex
    android.widget.LinearLayout glayout -> glayout
    android.view.View rootMainView -> rootMainView
    android.widget.Button visibleButtonViewFS -> visibleButtonViewFS
    android.widget.Button visibleButtonSave -> visibleButtonSave
    android.widget.Button visibleButtonEdit -> visibleButtonEdit
    int currentSelectedIndex -> currentSelectedIndex
    com.softwaresemantics.diyglsllwp.DIYGslSurface mySurface -> mySurface
    java.lang.String screenShotFilename -> screenShotFilename
    int nbElementParPage -> nbElementParPage
    com.softwaresemantics.diyglsllwp.LiveWallpaperPrefs prefs -> prefs
    android.view.View glslView -> glslView
    android.app.ProgressDialog progressDialog -> progressDialog
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.os.Handler mHandler -> mHandler
    boolean mFinishedStart -> mFinishedStart
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.Button cancelButton -> cancelButton
    android.widget.Button setAsLWPButton -> setAsLWPButton
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration cfg -> cfg
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void checkIfOnlineOrExit() -> checkIfOnlineOrExit
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    void updateStatusLabel(java.lang.String) -> updateStatusLabel
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void showAproposDialog() -> showAproposDialog
    void startPrefsLwpActivity() -> startPrefsLwpActivity
    void updateGallery() -> updateGallery
    void updateGallery(int) -> updateGallery
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setOwnLWP() -> setOwnLWP
    boolean isOnline() -> isOnline
    com.softwaresemantics.diyglsllwp.Entry[] getValues() -> getValues
    void setValues(com.softwaresemantics.diyglsllwp.Entry[]) -> setValues
    void galleryUpdated(int) -> galleryUpdated
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onContentChanged() -> onContentChanged
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
    void runShaderinPreview(java.lang.String) -> runShaderinPreview
    void createGDXPreview(java.lang.String) -> createGDXPreview
    void hidePreviousSelectionButton() -> hidePreviousSelectionButton
    void showButtonForSelection(int) -> showButtonForSelection
    java.io.File saveCurrentSelectedShader() -> saveCurrentSelectedShader
    java.io.File saveCurrentSelectedShaderAsLWP() -> saveCurrentSelectedShaderAsLWP
    java.io.File saveCurrentSelectedShader(java.io.File,java.lang.String) -> saveCurrentSelectedShader
    void openCurrentSelectedShaderInSystemEditor() -> openCurrentSelectedShaderInSystemEditor
    void cancelSelectionIfAny() -> cancelSelectionIfAny
    void saveScreenshot() -> saveScreenshot
    void saveAsJpeg(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> saveAsJpeg
    com.badlogic.gdx.graphics.Pixmap getScreenshot(int,int,int,int,boolean) -> getScreenshot
    void setupFullScreenView() -> setupFullScreenView
    void backToMainView() -> backToMainView
    void setAsLWP() -> setAsLWP
    void doProcessScreenShot() -> doProcessScreenShot
    void hideProgressDialog() -> hideProgressDialog
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onStop() -> onStop
    void onClick(int,int) -> onClick
    void goToFullViewIfPossible() -> goToFullViewIfPossible
    void onRequirementFailure(java.lang.String) -> onRequirementFailure
    void onResumeGDX() -> onResumeGDX
    void access$0(com.softwaresemantics.diyglsllwp.ShaderGalleryActivity) -> access$0
    int access$1(com.softwaresemantics.diyglsllwp.ShaderGalleryActivity) -> access$1
    void access$2(com.softwaresemantics.diyglsllwp.ShaderGalleryActivity,int) -> access$2
    void access$3(com.softwaresemantics.diyglsllwp.ShaderGalleryActivity) -> access$3
    void access$4(com.softwaresemantics.diyglsllwp.ShaderGalleryActivity) -> access$4
    void access$5(com.softwaresemantics.diyglsllwp.ShaderGalleryActivity,int) -> access$5
    int access$6(com.softwaresemantics.diyglsllwp.ShaderGalleryActivity) -> access$6
    void access$7(com.softwaresemantics.diyglsllwp.ShaderGalleryActivity,int) -> access$7
    void access$8(com.softwaresemantics.diyglsllwp.ShaderGalleryActivity) -> access$8
com.softwaresemantics.diyglsllwp.ShaderGalleryActivity$1 -> com.softwaresemantics.diyglsllwp.o:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity this$0 -> a
    void run() -> run
com.softwaresemantics.diyglsllwp.ShaderGalleryActivity$2 -> com.softwaresemantics.diyglsllwp.p:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.softwaresemantics.diyglsllwp.ShaderGalleryActivity$3 -> com.softwaresemantics.diyglsllwp.q:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.softwaresemantics.diyglsllwp.ShaderGalleryActivity$4 -> com.softwaresemantics.diyglsllwp.s:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.softwaresemantics.diyglsllwp.ShaderGalleryActivity$5 -> com.softwaresemantics.diyglsllwp.t:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity this$0 -> a
    void inputValue(java.lang.String) -> inputValue
com.softwaresemantics.diyglsllwp.ShaderGalleryActivity$6 -> com.softwaresemantics.diyglsllwp.u:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity this$0 -> a
    void inputValue(java.lang.String) -> inputValue
com.softwaresemantics.diyglsllwp.ShaderGalleryActivity$7 -> com.softwaresemantics.diyglsllwp.v:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.softwaresemantics.diyglsllwp.ShaderGalleryActivity$8 -> com.softwaresemantics.diyglsllwp.w:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.softwaresemantics.diyglsllwp.ShaderGalleryActivity$UIFullViewRunnable -> com.softwaresemantics.diyglsllwp.x:
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity parentActivity -> b
    com.softwaresemantics.diyglsllwp.ShaderGalleryActivity this$0 -> a
    void run() -> run
com.softwaresemantics.diyglsllwp.ShaderProgram -> com.softwaresemantics.diyglsllwp.ShaderProgram:
    java.lang.String fragShaderText -> fragShaderText
    java.lang.String vertShaderText -> vertShaderText
    java.lang.String getFragShaderText() -> getFragShaderText
    void setFragShaderText(java.lang.String) -> setFragShaderText
    java.lang.String getVertShaderText() -> getVertShaderText
    void setVertShaderText(java.lang.String) -> setVertShaderText
com.softwaresemantics.diyglsllwp.ShaderStorage -> com.softwaresemantics.diyglsllwp.ShaderStorage:
    java.lang.String JPG -> JPG
    java.lang.String TXT -> TXT
    java.lang.String LWP -> LWP
    java.lang.String LWP_TXT -> LWP_TXT
    java.lang.String LWP_DIR_NAME -> LWP_DIR_NAME
    java.io.File getDiyGlslLwpShaderDir(android.content.Context) -> getDiyGlslLwpShaderDir
    java.io.File getDiyGlslLwpShaderFile(android.content.Context) -> getDiyGlslLwpShaderFile
    java.io.File getCustomShaderLWPFile(android.content.Context) -> getCustomShaderLWPFile
    java.io.File getDiyGlslLwpDir(android.content.Context) -> getDiyGlslLwpDir
    java.io.File getDiyGlslLwpSubDir(android.content.Context,java.lang.String) -> getDiyGlslLwpSubDir
org.jsoup.Connection -> org.jsoup.Connection:
    org.jsoup.Connection url(java.net.URL) -> url
    org.jsoup.Connection url(java.lang.String) -> url
    org.jsoup.Connection userAgent(java.lang.String) -> userAgent
    org.jsoup.Connection timeout(int) -> timeout
    org.jsoup.Connection maxBodySize(int) -> maxBodySize
    org.jsoup.Connection referrer(java.lang.String) -> referrer
    org.jsoup.Connection followRedirects(boolean) -> followRedirects
    org.jsoup.Connection method(org.jsoup.Connection$Method) -> method
    org.jsoup.Connection ignoreHttpErrors(boolean) -> ignoreHttpErrors
    org.jsoup.Connection ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.Connection data(java.lang.String,java.lang.String) -> data
    org.jsoup.Connection data(java.util.Map) -> data
    org.jsoup.Connection data(java.lang.String[]) -> data
    org.jsoup.Connection header(java.lang.String,java.lang.String) -> header
    org.jsoup.Connection cookie(java.lang.String,java.lang.String) -> cookie
    org.jsoup.Connection cookies(java.util.Map) -> cookies
    org.jsoup.Connection parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.nodes.Document get() -> get
    org.jsoup.nodes.Document post() -> post
    org.jsoup.Connection$Response execute() -> execute
    org.jsoup.Connection$Request request() -> request
    org.jsoup.Connection request(org.jsoup.Connection$Request) -> request
    org.jsoup.Connection$Response response() -> response
    org.jsoup.Connection response(org.jsoup.Connection$Response) -> response
org.jsoup.Connection$Base -> org.jsoup.Connection$Base:
    java.net.URL url() -> url
    org.jsoup.Connection$Base url(java.net.URL) -> url
    org.jsoup.Connection$Method method() -> method
    org.jsoup.Connection$Base method(org.jsoup.Connection$Method) -> method
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Base header(java.lang.String,java.lang.String) -> header
    boolean hasHeader(java.lang.String) -> hasHeader
    org.jsoup.Connection$Base removeHeader(java.lang.String) -> removeHeader
    java.util.Map headers() -> headers
    java.lang.String cookie(java.lang.String) -> cookie
    org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String) -> cookie
    boolean hasCookie(java.lang.String) -> hasCookie
    org.jsoup.Connection$Base removeCookie(java.lang.String) -> removeCookie
    java.util.Map cookies() -> cookies
org.jsoup.Connection$KeyVal -> org.jsoup.Connection$KeyVal:
    org.jsoup.Connection$KeyVal key(java.lang.String) -> key
    java.lang.String key() -> key
    org.jsoup.Connection$KeyVal value(java.lang.String) -> value
    java.lang.String value() -> value
org.jsoup.Connection$Method -> org.jsoup.Connection$Method:
    org.jsoup.Connection$Method GET -> GET
    org.jsoup.Connection$Method POST -> POST
    org.jsoup.Connection$Method[] $VALUES -> a
    org.jsoup.Connection$Method[] values() -> values
    org.jsoup.Connection$Method valueOf(java.lang.String) -> valueOf
org.jsoup.Connection$Request -> org.jsoup.Connection$Request:
    int timeout() -> timeout
    org.jsoup.Connection$Request timeout(int) -> timeout
    int maxBodySize() -> maxBodySize
    org.jsoup.Connection$Request maxBodySize(int) -> maxBodySize
    boolean followRedirects() -> followRedirects
    org.jsoup.Connection$Request followRedirects(boolean) -> followRedirects
    boolean ignoreHttpErrors() -> ignoreHttpErrors
    org.jsoup.Connection$Request ignoreHttpErrors(boolean) -> ignoreHttpErrors
    boolean ignoreContentType() -> ignoreContentType
    org.jsoup.Connection$Request ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal) -> data
    java.util.Collection data() -> data
    org.jsoup.Connection$Request parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.parser.Parser parser() -> parser
org.jsoup.Connection$Response -> org.jsoup.Connection$Response:
    int statusCode() -> statusCode
    java.lang.String statusMessage() -> statusMessage
    java.lang.String charset() -> charset
    java.lang.String contentType() -> contentType
    org.jsoup.nodes.Document parse() -> parse
    java.lang.String body() -> body
    byte[] bodyAsBytes() -> bodyAsBytes
org.jsoup.HttpStatusException -> org.jsoup.HttpStatusException:
    int statusCode -> a
    java.lang.String url -> b
    int getStatusCode() -> getStatusCode
    java.lang.String getUrl() -> getUrl
    java.lang.String toString() -> toString
org.jsoup.Jsoup -> org.jsoup.Jsoup:
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> parse
    org.jsoup.nodes.Document parse(java.lang.String) -> parse
    org.jsoup.Connection connect(java.lang.String) -> connect
    org.jsoup.nodes.Document parse(java.io.File,java.lang.String,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.io.File,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.io.InputStream,java.lang.String,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.io.InputStream,java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> parse
    org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String) -> parseBodyFragment
    org.jsoup.nodes.Document parseBodyFragment(java.lang.String) -> parseBodyFragment
    org.jsoup.nodes.Document parse(java.net.URL,int) -> parse
    java.lang.String clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist) -> clean
    java.lang.String clean(java.lang.String,org.jsoup.safety.Whitelist) -> clean
    java.lang.String clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist,org.jsoup.nodes.Document$OutputSettings) -> clean
    boolean isValid(java.lang.String,org.jsoup.safety.Whitelist) -> isValid
org.jsoup.UnsupportedMimeTypeException -> org.jsoup.UnsupportedMimeTypeException:
    java.lang.String mimeType -> a
    java.lang.String url -> b
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getUrl() -> getUrl
    java.lang.String toString() -> toString
org.jsoup.examples.HtmlToPlainText -> org.jsoup.examples.HtmlToPlainText:
    void main(java.lang.String[]) -> main
    java.lang.String getPlainText(org.jsoup.nodes.Element) -> getPlainText
org.jsoup.examples.HtmlToPlainText$FormattingVisitor -> org.jsoup.examples.a:
    int width -> b
    java.lang.StringBuilder accum -> c
    org.jsoup.examples.HtmlToPlainText this$0 -> a
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
    void append(java.lang.String) -> a
    java.lang.String toString() -> toString
org.jsoup.examples.ListLinks -> org.jsoup.examples.ListLinks:
    void main(java.lang.String[]) -> main
    void print(java.lang.String,java.lang.Object[]) -> a
    java.lang.String trim(java.lang.String,int) -> a
org.jsoup.helper.DataUtil -> org.jsoup.helper.DataUtil:
    java.util.regex.Pattern charsetPattern -> a
    org.jsoup.nodes.Document load(java.io.File,java.lang.String,java.lang.String) -> load
    org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String) -> load
    org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> load
    org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> a
    java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int) -> a
    java.lang.String getCharsetFromContentType(java.lang.String) -> a
org.jsoup.helper.DescendableLinkedList -> org.jsoup.helper.DescendableLinkedList:
    void push(java.lang.Object) -> push
    java.lang.Object peekLast() -> peekLast
    java.lang.Object pollLast() -> pollLast
    java.util.Iterator descendingIterator() -> descendingIterator
org.jsoup.helper.DescendableLinkedList$DescendingIterator -> org.jsoup.helper.a:
    java.util.ListIterator iter -> b
    org.jsoup.helper.DescendableLinkedList this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.jsoup.helper.HttpConnection -> org.jsoup.helper.HttpConnection:
    org.jsoup.Connection$Request req -> a
    org.jsoup.Connection$Response res -> b
    org.jsoup.Connection connect(java.lang.String) -> connect
    org.jsoup.Connection connect(java.net.URL) -> connect
    org.jsoup.Connection url(java.net.URL) -> url
    org.jsoup.Connection url(java.lang.String) -> url
    org.jsoup.Connection userAgent(java.lang.String) -> userAgent
    org.jsoup.Connection timeout(int) -> timeout
    org.jsoup.Connection maxBodySize(int) -> maxBodySize
    org.jsoup.Connection followRedirects(boolean) -> followRedirects
    org.jsoup.Connection referrer(java.lang.String) -> referrer
    org.jsoup.Connection method(org.jsoup.Connection$Method) -> method
    org.jsoup.Connection ignoreHttpErrors(boolean) -> ignoreHttpErrors
    org.jsoup.Connection ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.Connection data(java.lang.String,java.lang.String) -> data
    org.jsoup.Connection data(java.util.Map) -> data
    org.jsoup.Connection data(java.lang.String[]) -> data
    org.jsoup.Connection header(java.lang.String,java.lang.String) -> header
    org.jsoup.Connection cookie(java.lang.String,java.lang.String) -> cookie
    org.jsoup.Connection cookies(java.util.Map) -> cookies
    org.jsoup.Connection parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.nodes.Document get() -> get
    org.jsoup.nodes.Document post() -> post
    org.jsoup.Connection$Response execute() -> execute
    org.jsoup.Connection$Request request() -> request
    org.jsoup.Connection request(org.jsoup.Connection$Request) -> request
    org.jsoup.Connection$Response response() -> response
    org.jsoup.Connection response(org.jsoup.Connection$Response) -> response
org.jsoup.helper.HttpConnection$Base -> org.jsoup.helper.b:
    java.net.URL url -> a
    org.jsoup.Connection$Method method -> b
    java.util.Map headers -> c
    java.util.Map cookies -> d
    java.net.URL url() -> url
    org.jsoup.Connection$Base url(java.net.URL) -> url
    org.jsoup.Connection$Method method() -> method
    org.jsoup.Connection$Base method(org.jsoup.Connection$Method) -> method
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Base header(java.lang.String,java.lang.String) -> header
    boolean hasHeader(java.lang.String) -> hasHeader
    org.jsoup.Connection$Base removeHeader(java.lang.String) -> removeHeader
    java.util.Map headers() -> headers
    java.lang.String getHeaderCaseInsensitive(java.lang.String) -> a
    java.util.Map$Entry scanHeaders(java.lang.String) -> b
    java.lang.String cookie(java.lang.String) -> cookie
    org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String) -> cookie
    boolean hasCookie(java.lang.String) -> hasCookie
    org.jsoup.Connection$Base removeCookie(java.lang.String) -> removeCookie
    java.util.Map cookies() -> cookies
org.jsoup.helper.HttpConnection$KeyVal -> org.jsoup.helper.HttpConnection$KeyVal:
    java.lang.String key -> a
    java.lang.String value -> b
    org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String,java.lang.String) -> create
    org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String) -> key
    java.lang.String key() -> key
    org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String) -> value
    java.lang.String value() -> value
    java.lang.String toString() -> toString
    org.jsoup.Connection$KeyVal value(java.lang.String) -> value
    org.jsoup.Connection$KeyVal key(java.lang.String) -> key
org.jsoup.helper.HttpConnection$Request -> org.jsoup.helper.HttpConnection$Request:
    int timeoutMilliseconds -> e
    int maxBodySizeBytes -> f
    boolean followRedirects -> g
    java.util.Collection data -> h
    boolean ignoreHttpErrors -> i
    boolean ignoreContentType -> j
    org.jsoup.parser.Parser parser -> k
    int timeout() -> timeout
    org.jsoup.helper.HttpConnection$Request timeout(int) -> timeout
    int maxBodySize() -> maxBodySize
    org.jsoup.Connection$Request maxBodySize(int) -> maxBodySize
    boolean followRedirects() -> followRedirects
    org.jsoup.Connection$Request followRedirects(boolean) -> followRedirects
    boolean ignoreHttpErrors() -> ignoreHttpErrors
    org.jsoup.Connection$Request ignoreHttpErrors(boolean) -> ignoreHttpErrors
    boolean ignoreContentType() -> ignoreContentType
    org.jsoup.Connection$Request ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.helper.HttpConnection$Request data(org.jsoup.Connection$KeyVal) -> data
    java.util.Collection data() -> data
    org.jsoup.helper.HttpConnection$Request parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.parser.Parser parser() -> parser
    java.util.Map cookies() -> cookies
    boolean hasCookie(java.lang.String) -> hasCookie
    java.lang.String cookie(java.lang.String) -> cookie
    java.util.Map headers() -> headers
    boolean hasHeader(java.lang.String) -> hasHeader
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Method method() -> method
    java.net.URL url() -> url
    org.jsoup.Connection$Request parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal) -> data
    org.jsoup.Connection$Request timeout(int) -> timeout
org.jsoup.helper.HttpConnection$Response -> org.jsoup.helper.HttpConnection$Response:
    int statusCode -> e
    java.lang.String statusMessage -> f
    java.nio.ByteBuffer byteData -> g
    java.lang.String charset -> h
    java.lang.String contentType -> i
    boolean executed -> j
    int numRedirects -> k
    org.jsoup.Connection$Request req -> l
    org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request) -> a
    org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response) -> a
    int statusCode() -> statusCode
    java.lang.String statusMessage() -> statusMessage
    java.lang.String charset() -> charset
    java.lang.String contentType() -> contentType
    org.jsoup.nodes.Document parse() -> parse
    java.lang.String body() -> body
    byte[] bodyAsBytes() -> bodyAsBytes
    java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request) -> b
    void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response) -> a
    void writePost(java.util.Collection,java.io.OutputStream) -> a
    void serialiseRequestUrl(org.jsoup.Connection$Request) -> c
    java.util.Map cookies() -> cookies
    boolean hasCookie(java.lang.String) -> hasCookie
    java.lang.String cookie(java.lang.String) -> cookie
    java.util.Map headers() -> headers
    boolean hasHeader(java.lang.String) -> hasHeader
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Method method() -> method
    java.net.URL url() -> url
org.jsoup.helper.StringUtil -> org.jsoup.helper.StringUtil:
    java.lang.String[] padding -> a
    java.lang.String join(java.util.Collection,java.lang.String) -> join
    java.lang.String join(java.util.Iterator,java.lang.String) -> join
    java.lang.String padding(int) -> padding
    boolean isBlank(java.lang.String) -> isBlank
    boolean isNumeric(java.lang.String) -> isNumeric
    boolean isWhitespace(int) -> isWhitespace
    java.lang.String normaliseWhitespace(java.lang.String) -> normaliseWhitespace
    boolean in(java.lang.String,java.lang.String[]) -> in
org.jsoup.helper.Validate -> org.jsoup.helper.Validate:
    void notNull(java.lang.Object) -> notNull
    void notNull(java.lang.Object,java.lang.String) -> notNull
    void isTrue(boolean) -> isTrue
    void isTrue(boolean,java.lang.String) -> isTrue
    void isFalse(boolean) -> isFalse
    void isFalse(boolean,java.lang.String) -> isFalse
    void noNullElements(java.lang.Object[]) -> noNullElements
    void noNullElements(java.lang.Object[],java.lang.String) -> noNullElements
    void notEmpty(java.lang.String) -> notEmpty
    void notEmpty(java.lang.String,java.lang.String) -> notEmpty
    void fail(java.lang.String) -> fail
org.jsoup.nodes.Attribute -> org.jsoup.nodes.Attribute:
    java.lang.String key -> a
    java.lang.String value -> b
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getValue() -> getValue
    java.lang.String setValue(java.lang.String) -> setValue
    java.lang.String html() -> html
    void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings) -> a
    java.lang.String toString() -> toString
    org.jsoup.nodes.Attribute createFromEncoded(java.lang.String,java.lang.String) -> createFromEncoded
    boolean isDataAttribute() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Attribute clone() -> clone
    java.lang.Object clone() -> clone
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
org.jsoup.nodes.Attributes -> org.jsoup.nodes.Attributes:
    java.util.LinkedHashMap attributes -> a
    java.lang.String get(java.lang.String) -> get
    void put(java.lang.String,java.lang.String) -> put
    void put(org.jsoup.nodes.Attribute) -> put
    void remove(java.lang.String) -> remove
    boolean hasKey(java.lang.String) -> hasKey
    int size() -> size
    void addAll(org.jsoup.nodes.Attributes) -> addAll
    java.util.Iterator iterator() -> iterator
    java.util.List asList() -> asList
    java.util.Map dataset() -> dataset
    java.lang.String html() -> html
    void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Attributes clone() -> clone
    java.lang.Object clone() -> clone
    java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes) -> a
    java.util.LinkedHashMap access$102(org.jsoup.nodes.Attributes,java.util.LinkedHashMap) -> a
    java.lang.String access$300(java.lang.String) -> a
org.jsoup.nodes.Attributes$Dataset -> org.jsoup.nodes.a:
    org.jsoup.nodes.Attributes this$0 -> a
    java.util.Set entrySet() -> entrySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
org.jsoup.nodes.Attributes$Dataset$DatasetIterator -> org.jsoup.nodes.b:
    java.util.Iterator attrIter -> b
    org.jsoup.nodes.Attribute attr -> c
    org.jsoup.nodes.Attributes$Dataset this$1 -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
org.jsoup.nodes.Attributes$Dataset$EntrySet -> org.jsoup.nodes.c:
    org.jsoup.nodes.Attributes$Dataset this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.jsoup.nodes.Comment -> org.jsoup.nodes.Comment:
    java.lang.String nodeName() -> nodeName
    java.lang.String getData() -> getData
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String toString() -> toString
org.jsoup.nodes.DataNode -> org.jsoup.nodes.DataNode:
    java.lang.String nodeName() -> nodeName
    java.lang.String getWholeData() -> getWholeData
    org.jsoup.nodes.DataNode setWholeData(java.lang.String) -> setWholeData
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String toString() -> toString
    org.jsoup.nodes.DataNode createFromEncoded(java.lang.String,java.lang.String) -> createFromEncoded
org.jsoup.nodes.Document -> org.jsoup.nodes.Document:
    org.jsoup.nodes.Document$OutputSettings outputSettings -> f
    org.jsoup.nodes.Document$QuirksMode quirksMode -> g
    org.jsoup.nodes.Document createShell(java.lang.String) -> createShell
    org.jsoup.nodes.Element head() -> head
    org.jsoup.nodes.Element body() -> body
    java.lang.String title() -> title
    void title(java.lang.String) -> title
    org.jsoup.nodes.Element createElement(java.lang.String) -> createElement
    org.jsoup.nodes.Document normalise() -> normalise
    void normaliseTextNodes(org.jsoup.nodes.Element) -> b
    void normaliseStructure(java.lang.String,org.jsoup.nodes.Element) -> a
    org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node) -> a
    java.lang.String outerHtml() -> outerHtml
    org.jsoup.nodes.Element text(java.lang.String) -> text
    java.lang.String nodeName() -> nodeName
    org.jsoup.nodes.Document clone() -> clone
    org.jsoup.nodes.Document$OutputSettings outputSettings() -> outputSettings
    org.jsoup.nodes.Document outputSettings(org.jsoup.nodes.Document$OutputSettings) -> outputSettings
    org.jsoup.nodes.Document$QuirksMode quirksMode() -> quirksMode
    org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode) -> quirksMode
    org.jsoup.nodes.Element clone() -> clone
    org.jsoup.nodes.Node clone() -> clone
    java.lang.Object clone() -> clone
org.jsoup.nodes.Document$OutputSettings -> org.jsoup.nodes.Document$OutputSettings:
    org.jsoup.nodes.Entities$EscapeMode escapeMode -> a
    java.nio.charset.Charset charset -> b
    java.nio.charset.CharsetEncoder charsetEncoder -> c
    boolean prettyPrint -> d
    boolean outline -> e
    int indentAmount -> f
    org.jsoup.nodes.Entities$EscapeMode escapeMode() -> escapeMode
    org.jsoup.nodes.Document$OutputSettings escapeMode(org.jsoup.nodes.Entities$EscapeMode) -> escapeMode
    java.nio.charset.Charset charset() -> charset
    org.jsoup.nodes.Document$OutputSettings charset(java.nio.charset.Charset) -> charset
    org.jsoup.nodes.Document$OutputSettings charset(java.lang.String) -> charset
    java.nio.charset.CharsetEncoder encoder() -> a
    boolean prettyPrint() -> prettyPrint
    org.jsoup.nodes.Document$OutputSettings prettyPrint(boolean) -> prettyPrint
    boolean outline() -> outline
    org.jsoup.nodes.Document$OutputSettings outline(boolean) -> outline
    int indentAmount() -> indentAmount
    org.jsoup.nodes.Document$OutputSettings indentAmount(int) -> indentAmount
    org.jsoup.nodes.Document$OutputSettings clone() -> clone
    java.lang.Object clone() -> clone
org.jsoup.nodes.Document$QuirksMode -> org.jsoup.nodes.Document$QuirksMode:
    org.jsoup.nodes.Document$QuirksMode noQuirks -> noQuirks
    org.jsoup.nodes.Document$QuirksMode quirks -> quirks
    org.jsoup.nodes.Document$QuirksMode limitedQuirks -> limitedQuirks
    org.jsoup.nodes.Document$QuirksMode[] $VALUES -> a
    org.jsoup.nodes.Document$QuirksMode[] values() -> values
    org.jsoup.nodes.Document$QuirksMode valueOf(java.lang.String) -> valueOf
org.jsoup.nodes.DocumentType -> org.jsoup.nodes.DocumentType:
    java.lang.String nodeName() -> nodeName
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
org.jsoup.nodes.Element -> org.jsoup.nodes.Element:
    org.jsoup.parser.Tag tag -> f
    java.util.Set classNames -> g
    java.lang.String nodeName() -> nodeName
    java.lang.String tagName() -> tagName
    org.jsoup.nodes.Element tagName(java.lang.String) -> tagName
    org.jsoup.parser.Tag tag() -> tag
    boolean isBlock() -> isBlock
    java.lang.String id() -> id
    org.jsoup.nodes.Element attr(java.lang.String,java.lang.String) -> attr
    java.util.Map dataset() -> dataset
    org.jsoup.nodes.Element parent() -> parent
    org.jsoup.select.Elements parents() -> parents
    org.jsoup.nodes.Element child(int) -> child
    org.jsoup.select.Elements children() -> children
    java.util.List textNodes() -> textNodes
    java.util.List dataNodes() -> dataNodes
    org.jsoup.select.Elements select(java.lang.String) -> select
    org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node) -> appendChild
    org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node) -> prependChild
    org.jsoup.nodes.Element insertChildren(int,java.util.Collection) -> insertChildren
    org.jsoup.nodes.Element appendElement(java.lang.String) -> appendElement
    org.jsoup.nodes.Element prependElement(java.lang.String) -> prependElement
    org.jsoup.nodes.Element appendText(java.lang.String) -> appendText
    org.jsoup.nodes.Element prependText(java.lang.String) -> prependText
    org.jsoup.nodes.Element append(java.lang.String) -> append
    org.jsoup.nodes.Element prepend(java.lang.String) -> prepend
    org.jsoup.nodes.Element before(java.lang.String) -> before
    org.jsoup.nodes.Element before(org.jsoup.nodes.Node) -> before
    org.jsoup.nodes.Element after(java.lang.String) -> after
    org.jsoup.nodes.Element after(org.jsoup.nodes.Node) -> after
    org.jsoup.nodes.Element empty() -> empty
    org.jsoup.nodes.Element wrap(java.lang.String) -> wrap
    org.jsoup.select.Elements siblingElements() -> siblingElements
    org.jsoup.nodes.Element nextElementSibling() -> nextElementSibling
    org.jsoup.nodes.Element previousElementSibling() -> previousElementSibling
    org.jsoup.nodes.Element firstElementSibling() -> firstElementSibling
    java.lang.Integer elementSiblingIndex() -> elementSiblingIndex
    org.jsoup.nodes.Element lastElementSibling() -> lastElementSibling
    java.lang.Integer indexInList(org.jsoup.nodes.Element,java.util.List) -> a
    org.jsoup.select.Elements getElementsByTag(java.lang.String) -> getElementsByTag
    org.jsoup.nodes.Element getElementById(java.lang.String) -> getElementById
    org.jsoup.select.Elements getElementsByClass(java.lang.String) -> getElementsByClass
    org.jsoup.select.Elements getElementsByAttribute(java.lang.String) -> getElementsByAttribute
    org.jsoup.select.Elements getElementsByAttributeStarting(java.lang.String) -> getElementsByAttributeStarting
    org.jsoup.select.Elements getElementsByAttributeValue(java.lang.String,java.lang.String) -> getElementsByAttributeValue
    org.jsoup.select.Elements getElementsByAttributeValueNot(java.lang.String,java.lang.String) -> getElementsByAttributeValueNot
    org.jsoup.select.Elements getElementsByAttributeValueStarting(java.lang.String,java.lang.String) -> getElementsByAttributeValueStarting
    org.jsoup.select.Elements getElementsByAttributeValueEnding(java.lang.String,java.lang.String) -> getElementsByAttributeValueEnding
    org.jsoup.select.Elements getElementsByAttributeValueContaining(java.lang.String,java.lang.String) -> getElementsByAttributeValueContaining
    org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String,java.util.regex.Pattern) -> getElementsByAttributeValueMatching
    org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String,java.lang.String) -> getElementsByAttributeValueMatching
    org.jsoup.select.Elements getElementsByIndexLessThan(int) -> getElementsByIndexLessThan
    org.jsoup.select.Elements getElementsByIndexGreaterThan(int) -> getElementsByIndexGreaterThan
    org.jsoup.select.Elements getElementsByIndexEquals(int) -> getElementsByIndexEquals
    org.jsoup.select.Elements getElementsContainingText(java.lang.String) -> getElementsContainingText
    org.jsoup.select.Elements getElementsContainingOwnText(java.lang.String) -> getElementsContainingOwnText
    org.jsoup.select.Elements getElementsMatchingText(java.util.regex.Pattern) -> getElementsMatchingText
    org.jsoup.select.Elements getElementsMatchingText(java.lang.String) -> getElementsMatchingText
    org.jsoup.select.Elements getElementsMatchingOwnText(java.util.regex.Pattern) -> getElementsMatchingOwnText
    org.jsoup.select.Elements getElementsMatchingOwnText(java.lang.String) -> getElementsMatchingOwnText
    org.jsoup.select.Elements getAllElements() -> getAllElements
    java.lang.String text() -> text
    java.lang.String ownText() -> ownText
    void ownText(java.lang.StringBuilder) -> b
    void appendNormalisedText(java.lang.StringBuilder,org.jsoup.nodes.TextNode) -> b
    boolean preserveWhitespace(org.jsoup.nodes.Node) -> a
    org.jsoup.nodes.Element text(java.lang.String) -> text
    boolean hasText() -> hasText
    java.lang.String data() -> data
    java.lang.String className() -> className
    java.util.Set classNames() -> classNames
    org.jsoup.nodes.Element classNames(java.util.Set) -> classNames
    boolean hasClass(java.lang.String) -> hasClass
    org.jsoup.nodes.Element addClass(java.lang.String) -> addClass
    org.jsoup.nodes.Element removeClass(java.lang.String) -> removeClass
    org.jsoup.nodes.Element toggleClass(java.lang.String) -> toggleClass
    java.lang.String val() -> val
    org.jsoup.nodes.Element val(java.lang.String) -> val
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String html() -> html
    void html(java.lang.StringBuilder) -> c
    org.jsoup.nodes.Element html(java.lang.String) -> html
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Element clone() -> clone
    org.jsoup.nodes.Node clone() -> clone
    org.jsoup.nodes.Node wrap(java.lang.String) -> wrap
    org.jsoup.nodes.Node after(org.jsoup.nodes.Node) -> after
    org.jsoup.nodes.Node after(java.lang.String) -> after
    org.jsoup.nodes.Node before(org.jsoup.nodes.Node) -> before
    org.jsoup.nodes.Node before(java.lang.String) -> before
    org.jsoup.nodes.Node parent() -> parent
    org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> attr
    java.lang.Object clone() -> clone
    void access$000(java.lang.StringBuilder,org.jsoup.nodes.TextNode) -> a
    org.jsoup.parser.Tag access$100(org.jsoup.nodes.Element) -> a
org.jsoup.nodes.Element$1 -> org.jsoup.nodes.d:
    java.lang.StringBuilder val$accum -> a
    org.jsoup.nodes.Element this$0 -> b
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.nodes.Entities -> org.jsoup.nodes.Entities:
    java.util.Map full -> a
    java.util.Map xhtmlByVal -> b
    java.util.Map base -> c
    java.util.Map baseByVal -> d
    java.util.Map fullByVal -> e
    java.util.regex.Pattern unescapePattern -> f
    java.util.regex.Pattern strictUnescapePattern -> g
    java.lang.Object[][] xhtmlArray -> h
    boolean isNamedEntity(java.lang.String) -> isNamedEntity
    boolean isBaseNamedEntity(java.lang.String) -> isBaseNamedEntity
    java.lang.Character getCharacterByName(java.lang.String) -> getCharacterByName
    java.lang.String escape(java.lang.String,org.jsoup.nodes.Document$OutputSettings) -> a
    java.lang.String unescape(java.lang.String) -> a
    java.lang.String unescape$185c6b75(java.lang.String) -> b
    java.util.Map loadEntities(java.lang.String) -> c
    java.util.Map toCharacterKey(java.util.Map) -> a
    java.util.Map access$000() -> a
    java.util.Map access$100() -> b
    java.util.Map access$200() -> c
org.jsoup.nodes.Entities$EscapeMode -> org.jsoup.nodes.Entities$EscapeMode:
    org.jsoup.nodes.Entities$EscapeMode xhtml -> xhtml
    org.jsoup.nodes.Entities$EscapeMode base -> base
    org.jsoup.nodes.Entities$EscapeMode extended -> extended
    java.util.Map map -> a
    org.jsoup.nodes.Entities$EscapeMode[] $VALUES -> b
    org.jsoup.nodes.Entities$EscapeMode[] values() -> values
    org.jsoup.nodes.Entities$EscapeMode valueOf(java.lang.String) -> valueOf
    java.util.Map getMap() -> getMap
org.jsoup.nodes.Node -> org.jsoup.nodes.Node:
    org.jsoup.nodes.Node parentNode -> a
    java.util.List childNodes -> b
    org.jsoup.nodes.Attributes attributes -> c
    java.lang.String baseUri -> d
    int siblingIndex -> e
    java.lang.String nodeName() -> nodeName
    java.lang.String attr(java.lang.String) -> attr
    org.jsoup.nodes.Attributes attributes() -> attributes
    org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> attr
    boolean hasAttr(java.lang.String) -> hasAttr
    org.jsoup.nodes.Node removeAttr(java.lang.String) -> removeAttr
    java.lang.String baseUri() -> baseUri
    void setBaseUri(java.lang.String) -> setBaseUri
    java.lang.String absUrl(java.lang.String) -> absUrl
    org.jsoup.nodes.Node childNode(int) -> childNode
    java.util.List childNodes() -> childNodes
    java.util.List childNodesCopy() -> childNodesCopy
    int childNodeSize() -> childNodeSize
    org.jsoup.nodes.Node parent() -> parent
    org.jsoup.nodes.Document ownerDocument() -> ownerDocument
    void remove() -> remove
    org.jsoup.nodes.Node before(java.lang.String) -> before
    org.jsoup.nodes.Node before(org.jsoup.nodes.Node) -> before
    org.jsoup.nodes.Node after(java.lang.String) -> after
    org.jsoup.nodes.Node after(org.jsoup.nodes.Node) -> after
    void addSiblingHtml(int,java.lang.String) -> a
    org.jsoup.nodes.Node wrap(java.lang.String) -> wrap
    org.jsoup.nodes.Node unwrap() -> unwrap
    void replaceWith(org.jsoup.nodes.Node) -> replaceWith
    void replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node) -> a
    void removeChild(org.jsoup.nodes.Node) -> b
    void addChildren(org.jsoup.nodes.Node[]) -> a
    void addChildren(int,org.jsoup.nodes.Node[]) -> a
    void reparentChild(org.jsoup.nodes.Node) -> a
    void reindexChildren() -> a
    java.util.List siblingNodes() -> siblingNodes
    org.jsoup.nodes.Node nextSibling() -> nextSibling
    org.jsoup.nodes.Node previousSibling() -> previousSibling
    int siblingIndex() -> siblingIndex
    org.jsoup.nodes.Node traverse(org.jsoup.select.NodeVisitor) -> traverse
    java.lang.String outerHtml() -> outerHtml
    void outerHtml(java.lang.StringBuilder) -> a
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String toString() -> toString
    void indent(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Node clone() -> clone
    org.jsoup.nodes.Node doClone(org.jsoup.nodes.Node) -> c
    java.lang.Object clone() -> clone
org.jsoup.nodes.Node$1 -> org.jsoup.nodes.e:
    java.lang.String val$baseUri -> a
    org.jsoup.nodes.Node this$0 -> b
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.nodes.Node$OuterHtmlVisitor -> org.jsoup.nodes.f:
    java.lang.StringBuilder accum -> a
    org.jsoup.nodes.Document$OutputSettings out -> b
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.nodes.TextNode -> org.jsoup.nodes.TextNode:
    java.lang.String text -> f
    java.lang.String nodeName() -> nodeName
    java.lang.String text() -> text
    org.jsoup.nodes.TextNode text(java.lang.String) -> text
    java.lang.String getWholeText() -> getWholeText
    boolean isBlank() -> isBlank
    org.jsoup.nodes.TextNode splitText(int) -> splitText
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String toString() -> toString
    org.jsoup.nodes.TextNode createFromEncoded(java.lang.String,java.lang.String) -> createFromEncoded
    java.lang.String normaliseWhitespace(java.lang.String) -> a
    java.lang.String stripLeadingWhitespace(java.lang.String) -> b
    boolean lastCharIsWhitespace(java.lang.StringBuilder) -> b
    void ensureAttributes() -> a
    java.lang.String attr(java.lang.String) -> attr
    org.jsoup.nodes.Attributes attributes() -> attributes
    org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> attr
    boolean hasAttr(java.lang.String) -> hasAttr
    org.jsoup.nodes.Node removeAttr(java.lang.String) -> removeAttr
    java.lang.String absUrl(java.lang.String) -> absUrl
org.jsoup.nodes.XmlDeclaration -> org.jsoup.nodes.XmlDeclaration:
    boolean isProcessingInstruction -> f
    java.lang.String nodeName() -> nodeName
    java.lang.String getWholeDeclaration() -> getWholeDeclaration
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String toString() -> toString
org.jsoup.parser.CharacterReader -> org.jsoup.parser.a:
    char[] input -> a
    int length -> b
    int pos -> c
    int mark -> d
    int pos() -> a
    boolean isEmpty() -> b
    char current() -> c
    char consume() -> d
    void unconsume() -> e
    void advance() -> f
    void mark() -> g
    void rewindToMark() -> h
    int nextIndexOf(java.lang.CharSequence) -> a
    java.lang.String consumeTo(char) -> a
    java.lang.String consumeTo(java.lang.String) -> a
    java.lang.String consumeToAny(char[]) -> a
    java.lang.String consumeToEnd() -> o
    java.lang.String consumeLetterSequence() -> i
    java.lang.String consumeLetterThenDigitSequence() -> j
    java.lang.String consumeHexSequence() -> k
    java.lang.String consumeDigitSequence() -> l
    boolean matches(char) -> b
    boolean matchesAny(char[]) -> b
    boolean matchesLetter() -> m
    boolean matchesDigit() -> n
    boolean matchConsume(java.lang.String) -> b
    boolean matchConsumeIgnoreCase(java.lang.String) -> c
    boolean containsIgnoreCase(java.lang.String) -> d
    java.lang.String toString() -> toString
org.jsoup.parser.HtmlTreeBuilder -> org.jsoup.parser.b:
    org.jsoup.parser.HtmlTreeBuilderState state -> i
    org.jsoup.parser.HtmlTreeBuilderState originalState -> j
    boolean baseUriSetFromDoc -> k
    org.jsoup.nodes.Element headElement -> l
    org.jsoup.nodes.Element formElement -> m
    org.jsoup.nodes.Element contextElement -> n
    org.jsoup.helper.DescendableLinkedList formattingElements -> o
    java.util.List pendingTableCharacters -> p
    boolean framesetOk -> q
    boolean fosterInserts -> r
    boolean fragmentParsing -> s
    boolean $assertionsDisabled -> a
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> a
    java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList) -> a
    boolean process(org.jsoup.parser.Token) -> a
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState) -> a
    void transition(org.jsoup.parser.HtmlTreeBuilderState) -> a
    org.jsoup.parser.HtmlTreeBuilderState state() -> a
    void markInsertionMode() -> b
    org.jsoup.parser.HtmlTreeBuilderState originalState() -> c
    void framesetOk(boolean) -> a
    boolean framesetOk() -> d
    org.jsoup.nodes.Document getDocument() -> e
    java.lang.String getBaseUri() -> f
    void maybeSetBaseUri(org.jsoup.nodes.Element) -> a
    boolean isFragmentParsing() -> g
    void error(org.jsoup.parser.HtmlTreeBuilderState) -> b
    org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag) -> a
    org.jsoup.nodes.Element insert(java.lang.String) -> a
    void insert(org.jsoup.nodes.Element) -> l
    org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag) -> b
    void insert(org.jsoup.parser.Token$Comment) -> a
    void insert(org.jsoup.parser.Token$Character) -> a
    void insertNode(org.jsoup.nodes.Node) -> b
    org.jsoup.nodes.Element pop() -> h
    void push(org.jsoup.nodes.Element) -> b
    org.jsoup.helper.DescendableLinkedList getStack() -> i
    boolean onStack(org.jsoup.nodes.Element) -> c
    boolean isElementInQueue(org.jsoup.helper.DescendableLinkedList,org.jsoup.nodes.Element) -> a
    org.jsoup.nodes.Element getFromStack(java.lang.String) -> b
    boolean removeFromStack(org.jsoup.nodes.Element) -> d
    void popStackToClose(java.lang.String) -> c
    void popStackToClose(java.lang.String[]) -> a
    void popStackToBefore(java.lang.String) -> d
    void clearStackToTableContext() -> j
    void clearStackToTableBodyContext() -> k
    void clearStackToTableRowContext() -> l
    void clearStackToContext(java.lang.String[]) -> c
    org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element) -> e
    void insertOnStackAfter(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    void replaceOnStack(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> b
    void replaceInQueue(java.util.LinkedList,org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    void resetInsertionMode() -> m
    boolean inSpecificScope(java.lang.String,java.lang.String[],java.lang.String[]) -> a
    boolean inSpecificScope(java.lang.String[],java.lang.String[],java.lang.String[]) -> a
    boolean inScope(java.lang.String[]) -> b
    boolean inScope(java.lang.String) -> e
    boolean inScope(java.lang.String,java.lang.String[]) -> a
    boolean inListItemScope(java.lang.String) -> f
    boolean inButtonScope(java.lang.String) -> g
    boolean inTableScope(java.lang.String) -> h
    boolean inSelectScope(java.lang.String) -> i
    void setHeadElement(org.jsoup.nodes.Element) -> f
    org.jsoup.nodes.Element getHeadElement() -> n
    void setFosterInserts(boolean) -> b
    org.jsoup.nodes.Element getFormElement() -> o
    void setFormElement(org.jsoup.nodes.Element) -> g
    void newPendingTableCharacters() -> p
    java.util.List getPendingTableCharacters() -> q
    void generateImpliedEndTags(java.lang.String) -> j
    void generateImpliedEndTags() -> r
    boolean isSpecial(org.jsoup.nodes.Element) -> h
    void pushActiveFormattingElements(org.jsoup.nodes.Element) -> i
    void reconstructFormattingElements() -> s
    void clearFormattingElementsToLastMarker() -> t
    void removeFromActiveFormattingElements(org.jsoup.nodes.Element) -> j
    boolean isInActiveFormattingElements(org.jsoup.nodes.Element) -> k
    org.jsoup.nodes.Element getActiveFormattingElement(java.lang.String) -> k
    void replaceActiveFormattingElement(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> c
    void insertMarkerToFormattingElements() -> u
    void insertInFosterParent(org.jsoup.nodes.Node) -> a
    java.lang.String toString() -> toString
org.jsoup.parser.HtmlTreeBuilderState -> org.jsoup.parser.c:
    org.jsoup.parser.HtmlTreeBuilderState Initial -> a
    org.jsoup.parser.HtmlTreeBuilderState BeforeHtml -> b
    org.jsoup.parser.HtmlTreeBuilderState BeforeHead -> c
    org.jsoup.parser.HtmlTreeBuilderState InHead -> d
    org.jsoup.parser.HtmlTreeBuilderState InHeadNoscript -> e
    org.jsoup.parser.HtmlTreeBuilderState AfterHead -> f
    org.jsoup.parser.HtmlTreeBuilderState InBody -> g
    org.jsoup.parser.HtmlTreeBuilderState Text -> h
    org.jsoup.parser.HtmlTreeBuilderState InTable -> i
    org.jsoup.parser.HtmlTreeBuilderState InTableText -> j
    org.jsoup.parser.HtmlTreeBuilderState InCaption -> k
    org.jsoup.parser.HtmlTreeBuilderState InColumnGroup -> l
    org.jsoup.parser.HtmlTreeBuilderState InTableBody -> m
    org.jsoup.parser.HtmlTreeBuilderState InRow -> n
    org.jsoup.parser.HtmlTreeBuilderState InCell -> o
    org.jsoup.parser.HtmlTreeBuilderState InSelect -> p
    org.jsoup.parser.HtmlTreeBuilderState InSelectInTable -> q
    org.jsoup.parser.HtmlTreeBuilderState AfterBody -> r
    org.jsoup.parser.HtmlTreeBuilderState InFrameset -> s
    org.jsoup.parser.HtmlTreeBuilderState AfterFrameset -> t
    org.jsoup.parser.HtmlTreeBuilderState AfterAfterBody -> u
    org.jsoup.parser.HtmlTreeBuilderState AfterAfterFrameset -> v
    org.jsoup.parser.HtmlTreeBuilderState ForeignContent -> w
    java.lang.String nullString -> x
    org.jsoup.parser.HtmlTreeBuilderState[] $VALUES -> y
    org.jsoup.parser.HtmlTreeBuilderState[] values() -> values
    org.jsoup.parser.HtmlTreeBuilderState valueOf(java.lang.String) -> valueOf
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean access$100(org.jsoup.parser.Token) -> a
    void access$300(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder) -> a
    java.lang.String access$400() -> a
org.jsoup.parser.HtmlTreeBuilderState$1 -> org.jsoup.parser.d:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$10 -> org.jsoup.parser.e:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$11 -> org.jsoup.parser.f:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$12 -> org.jsoup.parser.g:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$13 -> org.jsoup.parser.h:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean exitTableBody(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> c
org.jsoup.parser.HtmlTreeBuilderState$14 -> org.jsoup.parser.i:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    boolean handleMissingTr(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$15 -> org.jsoup.parser.j:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    void closeCell(org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$16 -> org.jsoup.parser.k:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$17 -> org.jsoup.parser.l:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$18 -> org.jsoup.parser.m:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$19 -> org.jsoup.parser.n:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$2 -> org.jsoup.parser.o:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$20 -> org.jsoup.parser.p:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$21 -> org.jsoup.parser.q:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$22 -> org.jsoup.parser.r:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$23 -> org.jsoup.parser.s:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$24 -> org.jsoup.parser.t:
    int[] $SwitchMap$org$jsoup$parser$Token$TokenType -> a
org.jsoup.parser.HtmlTreeBuilderState$3 -> org.jsoup.parser.u:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$4 -> org.jsoup.parser.v:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$5 -> org.jsoup.parser.w:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$6 -> org.jsoup.parser.x:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$7 -> org.jsoup.parser.y:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anyOtherEndTag(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$8 -> org.jsoup.parser.z:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$9 -> org.jsoup.parser.aa:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.ParseError -> org.jsoup.parser.ParseError:
    int pos -> a
    java.lang.String errorMsg -> b
    java.lang.String getErrorMessage() -> getErrorMessage
    int getPosition() -> getPosition
    java.lang.String toString() -> toString
org.jsoup.parser.ParseErrorList -> org.jsoup.parser.ab:
    int maxSize -> a
    boolean canAddError() -> a
    org.jsoup.parser.ParseErrorList noTracking() -> b
    org.jsoup.parser.ParseErrorList tracking(int) -> a
org.jsoup.parser.Parser -> org.jsoup.parser.Parser:
    org.jsoup.parser.TreeBuilder treeBuilder -> a
    int maxErrors -> b
    org.jsoup.parser.ParseErrorList errors -> c
    org.jsoup.nodes.Document parseInput(java.lang.String,java.lang.String) -> parseInput
    org.jsoup.parser.TreeBuilder getTreeBuilder() -> getTreeBuilder
    org.jsoup.parser.Parser setTreeBuilder(org.jsoup.parser.TreeBuilder) -> setTreeBuilder
    boolean isTrackErrors() -> isTrackErrors
    org.jsoup.parser.Parser setTrackErrors(int) -> setTrackErrors
    java.util.List getErrors() -> getErrors
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String) -> parse
    java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String) -> parseFragment
    java.util.List parseXmlFragment(java.lang.String,java.lang.String) -> parseXmlFragment
    org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String) -> parseBodyFragment
    java.lang.String unescapeEntities(java.lang.String,boolean) -> unescapeEntities
    org.jsoup.nodes.Document parseBodyFragmentRelaxed(java.lang.String,java.lang.String) -> parseBodyFragmentRelaxed
    org.jsoup.parser.Parser htmlParser() -> htmlParser
    org.jsoup.parser.Parser xmlParser() -> xmlParser
org.jsoup.parser.Tag -> org.jsoup.parser.Tag:
    java.util.Map tags -> a
    java.lang.String tagName -> b
    boolean isBlock -> c
    boolean formatAsBlock -> d
    boolean canContainBlock -> e
    boolean canContainInline -> f
    boolean empty -> g
    boolean selfClosing -> h
    boolean preserveWhitespace -> i
    java.lang.String[] blockTags -> j
    java.lang.String[] inlineTags -> k
    java.lang.String[] emptyTags -> l
    java.lang.String[] formatAsInlineTags -> m
    java.lang.String[] preserveWhitespaceTags -> n
    java.lang.String getName() -> getName
    org.jsoup.parser.Tag valueOf(java.lang.String) -> valueOf
    boolean isBlock() -> isBlock
    boolean formatAsBlock() -> formatAsBlock
    boolean canContainBlock() -> canContainBlock
    boolean isInline() -> isInline
    boolean isData() -> isData
    boolean isEmpty() -> isEmpty
    boolean isSelfClosing() -> isSelfClosing
    boolean isKnownTag() -> isKnownTag
    boolean isKnownTag(java.lang.String) -> isKnownTag
    boolean preserveWhitespace() -> preserveWhitespace
    org.jsoup.parser.Tag setSelfClosing() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void register(org.jsoup.parser.Tag) -> a
org.jsoup.parser.Token -> org.jsoup.parser.ac:
    org.jsoup.parser.Token$TokenType type -> a
    boolean isDoctype() -> a
    boolean isStartTag() -> b
    boolean isEndTag() -> c
    boolean isComment() -> d
    boolean isCharacter() -> e
    boolean isEOF() -> f
org.jsoup.parser.Token$Character -> org.jsoup.parser.ad:
    java.lang.String data -> b
    java.lang.String getData() -> g
    java.lang.String toString() -> toString
org.jsoup.parser.Token$Comment -> org.jsoup.parser.ae:
    java.lang.StringBuilder data -> b
    boolean bogus -> c
    java.lang.String toString() -> toString
org.jsoup.parser.Token$Doctype -> org.jsoup.parser.af:
    java.lang.StringBuilder name -> b
    java.lang.StringBuilder publicIdentifier -> c
    java.lang.StringBuilder systemIdentifier -> d
    boolean forceQuirks -> e
org.jsoup.parser.Token$EOF -> org.jsoup.parser.ag:
org.jsoup.parser.Token$EndTag -> org.jsoup.parser.ah:
    java.lang.String toString() -> toString
org.jsoup.parser.Token$StartTag -> org.jsoup.parser.ai:
    java.lang.String toString() -> toString
org.jsoup.parser.Token$Tag -> org.jsoup.parser.aj:
    java.lang.String tagName -> b
    java.lang.String pendingAttributeName -> e
    java.lang.StringBuilder pendingAttributeValue -> f
    boolean selfClosing -> c
    org.jsoup.nodes.Attributes attributes -> d
    void newAttribute() -> g
    void finaliseTag() -> h
    java.lang.String name() -> i
    org.jsoup.parser.Token$Tag name(java.lang.String) -> a
    void appendTagName(java.lang.String) -> b
    void appendTagName(char) -> a
    void appendAttributeName(java.lang.String) -> c
    void appendAttributeName(char) -> b
    void appendAttributeValue(java.lang.String) -> d
    void appendAttributeValue(char) -> c
    void appendAttributeValue(char[]) -> a
    void ensureAttributeValue() -> j
org.jsoup.parser.Token$TokenType -> org.jsoup.parser.ak:
    org.jsoup.parser.Token$TokenType Doctype -> a
    org.jsoup.parser.Token$TokenType StartTag -> b
    org.jsoup.parser.Token$TokenType EndTag -> c
    org.jsoup.parser.Token$TokenType Comment -> d
    org.jsoup.parser.Token$TokenType Character -> e
    org.jsoup.parser.Token$TokenType EOF -> f
    org.jsoup.parser.Token$TokenType[] $VALUES -> g
    org.jsoup.parser.Token$TokenType[] values() -> values
    org.jsoup.parser.Token$TokenType valueOf(java.lang.String) -> valueOf
org.jsoup.parser.TokenQueue -> org.jsoup.parser.TokenQueue:
    java.lang.String queue -> a
    int pos -> b
    boolean isEmpty() -> isEmpty
    int remainingLength() -> a
    char peek() -> peek
    void addFirst(java.lang.Character) -> addFirst
    void addFirst(java.lang.String) -> addFirst
    boolean matches(java.lang.String) -> matches
    boolean matchesCS(java.lang.String) -> matchesCS
    boolean matchesAny(java.lang.String[]) -> matchesAny
    boolean matchesAny(char[]) -> matchesAny
    boolean matchesStartTag() -> matchesStartTag
    boolean matchChomp(java.lang.String) -> matchChomp
    boolean matchesWhitespace() -> matchesWhitespace
    boolean matchesWord() -> matchesWord
    void advance() -> advance
    char consume() -> consume
    void consume(java.lang.String) -> consume
    java.lang.String consumeTo(java.lang.String) -> consumeTo
    java.lang.String consumeToIgnoreCase(java.lang.String) -> consumeToIgnoreCase
    java.lang.String consumeToAny(java.lang.String[]) -> consumeToAny
    java.lang.String chompTo(java.lang.String) -> chompTo
    java.lang.String chompToIgnoreCase(java.lang.String) -> chompToIgnoreCase
    java.lang.String chompBalanced(char,char) -> chompBalanced
    java.lang.String unescape(java.lang.String) -> unescape
    boolean consumeWhitespace() -> consumeWhitespace
    java.lang.String consumeWord() -> consumeWord
    java.lang.String consumeTagName() -> consumeTagName
    java.lang.String consumeElementSelector() -> consumeElementSelector
    java.lang.String consumeCssIdentifier() -> consumeCssIdentifier
    java.lang.String consumeAttributeKey() -> consumeAttributeKey
    java.lang.String remainder() -> remainder
    java.lang.String toString() -> toString
org.jsoup.parser.Tokeniser -> org.jsoup.parser.al:
    org.jsoup.parser.CharacterReader reader -> e
    org.jsoup.parser.ParseErrorList errors -> f
    org.jsoup.parser.TokeniserState state -> g
    org.jsoup.parser.Token emitPending -> h
    boolean isEmitPending -> i
    java.lang.StringBuilder charBuffer -> j
    java.lang.StringBuilder dataBuffer -> a
    org.jsoup.parser.Token$Tag tagPending -> b
    org.jsoup.parser.Token$Doctype doctypePending -> c
    org.jsoup.parser.Token$Comment commentPending -> d
    org.jsoup.parser.Token$StartTag lastStartTag -> k
    boolean selfClosingFlagAcknowledged -> l
    org.jsoup.parser.Token read() -> a
    void emit(org.jsoup.parser.Token) -> a
    void emit(java.lang.String) -> a
    void emit(char[]) -> a
    void emit(char) -> a
    void transition(org.jsoup.parser.TokeniserState) -> a
    void advanceTransition(org.jsoup.parser.TokeniserState) -> b
    void acknowledgeSelfClosingFlag() -> b
    char[] consumeCharacterReference(java.lang.Character,boolean) -> a
    org.jsoup.parser.Token$Tag createTagPending(boolean) -> a
    void emitTagPending() -> c
    void emitCommentPending() -> d
    void createDoctypePending() -> e
    void emitDoctypePending() -> f
    void createTempBuffer() -> g
    boolean isAppropriateEndTagToken() -> h
    java.lang.String appropriateEndTagName() -> i
    void error(org.jsoup.parser.TokeniserState) -> c
    void eofError(org.jsoup.parser.TokeniserState) -> d
    void characterReferenceError(java.lang.String) -> b
    void error(java.lang.String) -> c
    java.lang.String unescapeEntities(boolean) -> b
org.jsoup.parser.TokeniserState -> org.jsoup.parser.am:
    org.jsoup.parser.TokeniserState Data -> a
    org.jsoup.parser.TokeniserState CharacterReferenceInData -> b
    org.jsoup.parser.TokeniserState Rcdata -> c
    org.jsoup.parser.TokeniserState CharacterReferenceInRcdata -> d
    org.jsoup.parser.TokeniserState Rawtext -> e
    org.jsoup.parser.TokeniserState ScriptData -> f
    org.jsoup.parser.TokeniserState PLAINTEXT -> g
    org.jsoup.parser.TokeniserState TagOpen -> h
    org.jsoup.parser.TokeniserState EndTagOpen -> i
    org.jsoup.parser.TokeniserState TagName -> j
    org.jsoup.parser.TokeniserState RcdataLessthanSign -> k
    org.jsoup.parser.TokeniserState RCDATAEndTagOpen -> l
    org.jsoup.parser.TokeniserState RCDATAEndTagName -> m
    org.jsoup.parser.TokeniserState RawtextLessthanSign -> n
    org.jsoup.parser.TokeniserState RawtextEndTagOpen -> o
    org.jsoup.parser.TokeniserState RawtextEndTagName -> p
    org.jsoup.parser.TokeniserState ScriptDataLessthanSign -> q
    org.jsoup.parser.TokeniserState ScriptDataEndTagOpen -> r
    org.jsoup.parser.TokeniserState ScriptDataEndTagName -> s
    org.jsoup.parser.TokeniserState ScriptDataEscapeStart -> t
    org.jsoup.parser.TokeniserState ScriptDataEscapeStartDash -> u
    org.jsoup.parser.TokeniserState ScriptDataEscaped -> v
    org.jsoup.parser.TokeniserState ScriptDataEscapedDash -> w
    org.jsoup.parser.TokeniserState ScriptDataEscapedDashDash -> x
    org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign -> y
    org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagOpen -> z
    org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagName -> A
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeStart -> B
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped -> C
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDash -> D
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDashDash -> E
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign -> F
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeEnd -> G
    org.jsoup.parser.TokeniserState BeforeAttributeName -> H
    org.jsoup.parser.TokeniserState AttributeName -> I
    org.jsoup.parser.TokeniserState AfterAttributeName -> J
    org.jsoup.parser.TokeniserState BeforeAttributeValue -> K
    org.jsoup.parser.TokeniserState AttributeValue_doubleQuoted -> L
    org.jsoup.parser.TokeniserState AttributeValue_singleQuoted -> M
    org.jsoup.parser.TokeniserState AttributeValue_unquoted -> N
    org.jsoup.parser.TokeniserState AfterAttributeValue_quoted -> O
    org.jsoup.parser.TokeniserState SelfClosingStartTag -> P
    org.jsoup.parser.TokeniserState BogusComment -> Q
    org.jsoup.parser.TokeniserState MarkupDeclarationOpen -> R
    org.jsoup.parser.TokeniserState CommentStart -> S
    org.jsoup.parser.TokeniserState CommentStartDash -> T
    org.jsoup.parser.TokeniserState Comment -> U
    org.jsoup.parser.TokeniserState CommentEndDash -> V
    org.jsoup.parser.TokeniserState CommentEnd -> W
    org.jsoup.parser.TokeniserState CommentEndBang -> X
    org.jsoup.parser.TokeniserState Doctype -> Y
    org.jsoup.parser.TokeniserState BeforeDoctypeName -> Z
    org.jsoup.parser.TokeniserState DoctypeName -> aa
    org.jsoup.parser.TokeniserState AfterDoctypeName -> ab
    org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword -> ac
    org.jsoup.parser.TokeniserState BeforeDoctypePublicIdentifier -> ad
    org.jsoup.parser.TokeniserState DoctypePublicIdentifier_doubleQuoted -> ae
    org.jsoup.parser.TokeniserState DoctypePublicIdentifier_singleQuoted -> af
    org.jsoup.parser.TokeniserState AfterDoctypePublicIdentifier -> ag
    org.jsoup.parser.TokeniserState BetweenDoctypePublicAndSystemIdentifiers -> ah
    org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword -> ai
    org.jsoup.parser.TokeniserState BeforeDoctypeSystemIdentifier -> aj
    org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted -> ak
    org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted -> al
    org.jsoup.parser.TokeniserState AfterDoctypeSystemIdentifier -> am
    org.jsoup.parser.TokeniserState BogusDoctype -> an
    org.jsoup.parser.TokeniserState CdataSection -> ao
    java.lang.String replacementStr -> ap
    org.jsoup.parser.TokeniserState[] $VALUES -> aq
    org.jsoup.parser.TokeniserState[] values() -> values
    org.jsoup.parser.TokeniserState valueOf(java.lang.String) -> valueOf
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    java.lang.String access$100() -> a
org.jsoup.parser.TokeniserState$1 -> org.jsoup.parser.an:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$10 -> org.jsoup.parser.ao:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$11 -> org.jsoup.parser.ap:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$12 -> org.jsoup.parser.aq:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$13 -> org.jsoup.parser.ar:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> b
org.jsoup.parser.TokeniserState$14 -> org.jsoup.parser.as:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$15 -> org.jsoup.parser.at:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$16 -> org.jsoup.parser.au:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse$541e49b(org.jsoup.parser.Tokeniser) -> a
org.jsoup.parser.TokeniserState$17 -> org.jsoup.parser.av:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$18 -> org.jsoup.parser.aw:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$19 -> org.jsoup.parser.ax:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse$541e49b(org.jsoup.parser.Tokeniser) -> a
org.jsoup.parser.TokeniserState$2 -> org.jsoup.parser.ay:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$20 -> org.jsoup.parser.az:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$21 -> org.jsoup.parser.ba:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$22 -> org.jsoup.parser.bb:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$23 -> org.jsoup.parser.bc:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$24 -> org.jsoup.parser.bd:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$25 -> org.jsoup.parser.be:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$26 -> org.jsoup.parser.bf:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$27 -> org.jsoup.parser.bg:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse$541e49b(org.jsoup.parser.Tokeniser) -> a
org.jsoup.parser.TokeniserState$28 -> org.jsoup.parser.bh:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$29 -> org.jsoup.parser.bi:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$3 -> org.jsoup.parser.bj:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$30 -> org.jsoup.parser.bk:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$31 -> org.jsoup.parser.bl:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$32 -> org.jsoup.parser.bm:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$33 -> org.jsoup.parser.bn:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$34 -> org.jsoup.parser.bo:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$35 -> org.jsoup.parser.bp:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$36 -> org.jsoup.parser.bq:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$37 -> org.jsoup.parser.br:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$38 -> org.jsoup.parser.bs:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$39 -> org.jsoup.parser.bt:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$4 -> org.jsoup.parser.bu:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$40 -> org.jsoup.parser.bv:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$41 -> org.jsoup.parser.bw:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$42 -> org.jsoup.parser.bx:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$43 -> org.jsoup.parser.by:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$44 -> org.jsoup.parser.bz:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$45 -> org.jsoup.parser.ca:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$46 -> org.jsoup.parser.cb:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$47 -> org.jsoup.parser.cc:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$48 -> org.jsoup.parser.cd:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$49 -> org.jsoup.parser.ce:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$5 -> org.jsoup.parser.cf:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$50 -> org.jsoup.parser.cg:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$51 -> org.jsoup.parser.ch:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$52 -> org.jsoup.parser.ci:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$53 -> org.jsoup.parser.cj:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$54 -> org.jsoup.parser.ck:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$55 -> org.jsoup.parser.cl:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$56 -> org.jsoup.parser.cm:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$57 -> org.jsoup.parser.cn:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$58 -> org.jsoup.parser.co:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$59 -> org.jsoup.parser.cp:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$6 -> org.jsoup.parser.cq:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$60 -> org.jsoup.parser.cr:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$61 -> org.jsoup.parser.cs:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$62 -> org.jsoup.parser.ct:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$63 -> org.jsoup.parser.cu:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$64 -> org.jsoup.parser.cv:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$65 -> org.jsoup.parser.cw:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$66 -> org.jsoup.parser.cx:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$67 -> org.jsoup.parser.cy:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$7 -> org.jsoup.parser.cz:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$8 -> org.jsoup.parser.da:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$9 -> org.jsoup.parser.db:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TreeBuilder -> org.jsoup.parser.dc:
    org.jsoup.parser.CharacterReader reader -> b
    org.jsoup.parser.Tokeniser tokeniser -> c
    org.jsoup.nodes.Document doc -> d
    org.jsoup.helper.DescendableLinkedList stack -> e
    java.lang.String baseUri -> f
    org.jsoup.parser.Token currentToken -> g
    org.jsoup.parser.ParseErrorList errors -> h
    void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> b
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> a
    void runParser() -> v
    boolean process(org.jsoup.parser.Token) -> a
    org.jsoup.nodes.Element currentElement() -> w
org.jsoup.parser.XmlTreeBuilder -> org.jsoup.parser.XmlTreeBuilder:
    void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> b
    boolean process(org.jsoup.parser.Token) -> a
    void insertNode(org.jsoup.nodes.Node) -> a
    java.util.List parseFragment(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> c
org.jsoup.parser.XmlTreeBuilder$1 -> org.jsoup.parser.dd:
    int[] $SwitchMap$org$jsoup$parser$Token$TokenType -> a
org.jsoup.safety.Cleaner -> org.jsoup.safety.Cleaner:
    org.jsoup.safety.Whitelist whitelist -> a
    org.jsoup.nodes.Document clean(org.jsoup.nodes.Document) -> clean
    boolean isValid(org.jsoup.nodes.Document) -> isValid
    int copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    org.jsoup.safety.Whitelist access$000(org.jsoup.safety.Cleaner) -> a
    org.jsoup.safety.Cleaner$ElementMeta access$100(org.jsoup.safety.Cleaner,org.jsoup.nodes.Element) -> a
org.jsoup.safety.Cleaner$CleaningVisitor -> org.jsoup.safety.a:
    int numDiscarded -> b
    org.jsoup.nodes.Element root -> c
    org.jsoup.nodes.Element destination -> d
    org.jsoup.safety.Cleaner this$0 -> a
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
    int access$300(org.jsoup.safety.Cleaner$CleaningVisitor) -> a
org.jsoup.safety.Cleaner$ElementMeta -> org.jsoup.safety.b:
    org.jsoup.nodes.Element el -> a
    int numAttribsDiscarded -> b
org.jsoup.safety.Whitelist -> org.jsoup.safety.Whitelist:
    java.util.Set tagNames -> a
    java.util.Map attributes -> b
    java.util.Map enforcedAttributes -> c
    java.util.Map protocols -> d
    boolean preserveRelativeLinks -> e
    org.jsoup.safety.Whitelist none() -> none
    org.jsoup.safety.Whitelist simpleText() -> simpleText
    org.jsoup.safety.Whitelist basic() -> basic
    org.jsoup.safety.Whitelist basicWithImages() -> basicWithImages
    org.jsoup.safety.Whitelist relaxed() -> relaxed
    org.jsoup.safety.Whitelist addTags(java.lang.String[]) -> addTags
    org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[]) -> addAttributes
    org.jsoup.safety.Whitelist addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String) -> addEnforcedAttribute
    org.jsoup.safety.Whitelist preserveRelativeLinks(boolean) -> preserveRelativeLinks
    org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[]) -> addProtocols
    boolean isSafeTag(java.lang.String) -> a
    boolean isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute) -> a
    org.jsoup.nodes.Attributes getEnforcedAttributes(java.lang.String) -> b
org.jsoup.safety.Whitelist$AttributeKey -> org.jsoup.safety.c:
    org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String) -> a
org.jsoup.safety.Whitelist$AttributeValue -> org.jsoup.safety.d:
org.jsoup.safety.Whitelist$Protocol -> org.jsoup.safety.e:
org.jsoup.safety.Whitelist$TagName -> org.jsoup.safety.f:
    org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String) -> a
org.jsoup.safety.Whitelist$TypedValue -> org.jsoup.safety.g:
    java.lang.String value -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.jsoup.select.Collector -> org.jsoup.select.Collector:
    org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element) -> collect
org.jsoup.select.Collector$Accumulator -> org.jsoup.select.a:
    org.jsoup.nodes.Element root -> a
    org.jsoup.select.Elements elements -> b
    org.jsoup.select.Evaluator eval -> c
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.select.CombiningEvaluator -> org.jsoup.select.b:
    java.util.List evaluators -> a
    org.jsoup.select.Evaluator rightMostEvaluator() -> a
    void replaceRightMostEvaluator(org.jsoup.select.Evaluator) -> a
org.jsoup.select.CombiningEvaluator$And -> org.jsoup.select.c:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.CombiningEvaluator$Or -> org.jsoup.select.d:
    void add(org.jsoup.select.Evaluator) -> b
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Elements -> org.jsoup.select.Elements:
    java.util.List contents -> a
    org.jsoup.select.Elements clone() -> clone
    java.lang.String attr(java.lang.String) -> attr
    boolean hasAttr(java.lang.String) -> hasAttr
    org.jsoup.select.Elements attr(java.lang.String,java.lang.String) -> attr
    org.jsoup.select.Elements removeAttr(java.lang.String) -> removeAttr
    org.jsoup.select.Elements addClass(java.lang.String) -> addClass
    org.jsoup.select.Elements removeClass(java.lang.String) -> removeClass
    org.jsoup.select.Elements toggleClass(java.lang.String) -> toggleClass
    boolean hasClass(java.lang.String) -> hasClass
    java.lang.String val() -> val
    org.jsoup.select.Elements val(java.lang.String) -> val
    java.lang.String text() -> text
    boolean hasText() -> hasText
    java.lang.String html() -> html
    java.lang.String outerHtml() -> outerHtml
    java.lang.String toString() -> toString
    org.jsoup.select.Elements tagName(java.lang.String) -> tagName
    org.jsoup.select.Elements html(java.lang.String) -> html
    org.jsoup.select.Elements prepend(java.lang.String) -> prepend
    org.jsoup.select.Elements append(java.lang.String) -> append
    org.jsoup.select.Elements before(java.lang.String) -> before
    org.jsoup.select.Elements after(java.lang.String) -> after
    org.jsoup.select.Elements wrap(java.lang.String) -> wrap
    org.jsoup.select.Elements unwrap() -> unwrap
    org.jsoup.select.Elements empty() -> empty
    org.jsoup.select.Elements remove() -> remove
    org.jsoup.select.Elements select(java.lang.String) -> select
    org.jsoup.select.Elements not(java.lang.String) -> not
    org.jsoup.select.Elements eq(int) -> eq
    boolean is(java.lang.String) -> is
    org.jsoup.select.Elements parents() -> parents
    org.jsoup.nodes.Element first() -> first
    org.jsoup.nodes.Element last() -> last
    org.jsoup.select.Elements traverse(org.jsoup.select.NodeVisitor) -> traverse
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(org.jsoup.nodes.Element) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Element get(int) -> get
    org.jsoup.nodes.Element set(int,org.jsoup.nodes.Element) -> set
    void add(int,org.jsoup.nodes.Element) -> add
    org.jsoup.nodes.Element remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
    java.lang.Object clone() -> clone
    java.lang.Object remove(int) -> remove
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
    boolean add(java.lang.Object) -> add
org.jsoup.select.Evaluator -> org.jsoup.select.Evaluator:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
org.jsoup.select.Evaluator$AllElements -> org.jsoup.select.Evaluator$AllElements:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Attribute -> org.jsoup.select.Evaluator$Attribute:
    java.lang.String key -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeKeyPair -> org.jsoup.select.Evaluator$AttributeKeyPair:
    java.lang.String key -> a
    java.lang.String value -> b
org.jsoup.select.Evaluator$AttributeStarting -> org.jsoup.select.Evaluator$AttributeStarting:
    java.lang.String keyPrefix -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValue -> org.jsoup.select.Evaluator$AttributeWithValue:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueContaining -> org.jsoup.select.Evaluator$AttributeWithValueContaining:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueEnding -> org.jsoup.select.Evaluator$AttributeWithValueEnding:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueMatching -> org.jsoup.select.Evaluator$AttributeWithValueMatching:
    java.lang.String key -> a
    java.util.regex.Pattern pattern -> b
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueNot -> org.jsoup.select.Evaluator$AttributeWithValueNot:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueStarting -> org.jsoup.select.Evaluator$AttributeWithValueStarting:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Class -> org.jsoup.select.Evaluator$Class:
    java.lang.String className -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$ContainsOwnText -> org.jsoup.select.Evaluator$ContainsOwnText:
    java.lang.String searchText -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$ContainsText -> org.jsoup.select.Evaluator$ContainsText:
    java.lang.String searchText -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$CssNthEvaluator -> org.jsoup.select.Evaluator$CssNthEvaluator:
    int a -> a
    int b -> b
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
    java.lang.String getPseudoClass() -> a
    int calculatePosition$296f3858(org.jsoup.nodes.Element) -> a
org.jsoup.select.Evaluator$Id -> org.jsoup.select.Evaluator$Id:
    java.lang.String id -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexEquals -> org.jsoup.select.Evaluator$IndexEquals:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexEvaluator -> org.jsoup.select.Evaluator$IndexEvaluator:
    int index -> a
org.jsoup.select.Evaluator$IndexGreaterThan -> org.jsoup.select.Evaluator$IndexGreaterThan:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexLessThan -> org.jsoup.select.Evaluator$IndexLessThan:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsEmpty -> org.jsoup.select.Evaluator$IsEmpty:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsFirstChild -> org.jsoup.select.Evaluator$IsFirstChild:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsFirstOfType -> org.jsoup.select.Evaluator$IsFirstOfType:
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsLastChild -> org.jsoup.select.Evaluator$IsLastChild:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsLastOfType -> org.jsoup.select.Evaluator$IsLastOfType:
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsNthChild -> org.jsoup.select.Evaluator$IsNthChild:
    int calculatePosition$296f3858(org.jsoup.nodes.Element) -> a
    java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsNthLastChild -> org.jsoup.select.Evaluator$IsNthLastChild:
    int calculatePosition$296f3858(org.jsoup.nodes.Element) -> a
    java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsNthLastOfType -> org.jsoup.select.Evaluator$IsNthLastOfType:
    int calculatePosition$296f3858(org.jsoup.nodes.Element) -> a
    java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsNthOfType -> org.jsoup.select.Evaluator$IsNthOfType:
    int calculatePosition$296f3858(org.jsoup.nodes.Element) -> a
    java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsOnlyChild -> org.jsoup.select.Evaluator$IsOnlyChild:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsOnlyOfType -> org.jsoup.select.Evaluator$IsOnlyOfType:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsRoot -> org.jsoup.select.Evaluator$IsRoot:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Matches -> org.jsoup.select.Evaluator$Matches:
    java.util.regex.Pattern pattern -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$MatchesOwn -> org.jsoup.select.Evaluator$MatchesOwn:
    java.util.regex.Pattern pattern -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Tag -> org.jsoup.select.Evaluator$Tag:
    java.lang.String tagName -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.NodeTraversor -> org.jsoup.select.NodeTraversor:
    org.jsoup.select.NodeVisitor visitor -> a
    void traverse(org.jsoup.nodes.Node) -> traverse
org.jsoup.select.NodeVisitor -> org.jsoup.select.NodeVisitor:
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.select.QueryParser -> org.jsoup.select.e:
    java.lang.String[] combinators -> a
    org.jsoup.parser.TokenQueue tq -> b
    java.lang.String query -> c
    java.util.List evals -> d
    java.util.regex.Pattern NTH_AB -> e
    java.util.regex.Pattern NTH_B -> f
    org.jsoup.select.Evaluator parse(java.lang.String) -> a
    void combinator(char) -> a
    void findElements() -> a
    void cssNthChild(boolean,boolean) -> a
    int consumeIndex() -> b
    void contains(boolean) -> a
    void matches(boolean) -> b
org.jsoup.select.Selector -> org.jsoup.select.Selector:
    org.jsoup.select.Evaluator evaluator -> a
    org.jsoup.nodes.Element root -> b
    org.jsoup.select.Elements select(java.lang.String,org.jsoup.nodes.Element) -> select
    org.jsoup.select.Elements select(java.lang.String,java.lang.Iterable) -> select
    org.jsoup.select.Elements filterOut(java.util.Collection,java.util.Collection) -> a
org.jsoup.select.Selector$SelectorParseException -> org.jsoup.select.Selector$SelectorParseException:
org.jsoup.select.StructuralEvaluator -> org.jsoup.select.f:
    org.jsoup.select.Evaluator evaluator -> a
org.jsoup.select.StructuralEvaluator$Has -> org.jsoup.select.g:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$ImmediateParent -> org.jsoup.select.h:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling -> org.jsoup.select.i:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Not -> org.jsoup.select.j:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Parent -> org.jsoup.select.k:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$PreviousSibling -> org.jsoup.select.l:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Root -> org.jsoup.select.m:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
